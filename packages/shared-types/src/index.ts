// Barrel exports for @masjid-suite/shared-types package

export * from "./database";
export * from "./types";
export * from "./validation";
export * from "./address";
export * from "./constants";
// Specifically export validation functions for direct imports
export {
  isValidMalaysianPhone,
  isValidMalaysianPostcode,
  isValidEmail,
  isValidMalaysianState,
  formatMalaysianPhone,
  formatPostcode,
  MALAYSIAN_PHONE_REGEX,
  MALAYSIAN_POSTCODE_REGEX,
  EMAIL_REGEX,
  VALIDATION_MESSAGES,
  validateProfile,
  validateAddress,
  validateMasjid,
  validateAdminApplication,
} from "./validation";
export * from "./tv-display";
export * from "./mock-data";
export * from "./e2e-test-helpers";
export { masjidSchema } from "./masjid";
export type { MasjidFormData, MasjidAddress } from "./masjid";
// ContentItem types (avoid conflicts with api-responses.ts)
export type {
  ContentItem as TvDisplayContentItem,
  CreateContentRequest as TvDisplayCreateContentRequest,
  UpdateContentRequest as TvDisplayUpdateContentRequest,
  ApproveContentRequest,
  ContentItemWithRelations,
  ContentFilters as TvDisplayContentFilters,
  ContentSort,
  ContentSortField,
  ContentSortDirection,
  ContentItemErrorCode,
  CONTENT_VALIDATION,
  URL_PATTERNS,
  CONTENT_TYPES,
  CONTENT_STATUSES,
  DEFAULT_CONTENT_DURATION,
  MIN_SPONSORSHIP_AMOUNT,
  MAX_FILE_SIZE,
  SUPPORTED_IMAGE_FORMATS,
} from "./content-item";
export {
  isValidYouTubeUrl,
  isValidImageUrl,
  isValidContentUrl,
  extractYouTubeVideoId,
  generateYouTubeThumbnail,
  calculateContentPriority,
  formatSponsorshipAmount,
  formatDuration,
  getContentTypeDisplayName,
  getContentStatusDisplayName,
  isContentEditable,
  isContentApprovable,
  isContentDeletable,
  isContentItem,
  isCreateContentRequest as isTvDisplayCreateContentRequest,
  isUpdateContentRequest as isTvDisplayUpdateContentRequest,
  createContentItem,
} from "./content-item";
// DisplayConfiguration types
export type {
  DisplayConfiguration,
  CreateDisplayConfigRequest,
  UpdateDisplayConfigRequest,
  DisplayConfigurationWithRelations,
  ContentDuration,
  BrightnessLevel,
  VolumeLevel,
  ThemeColor,
  AnimationEffect,
  PrayerTimesFormat,
  DateFormat,
  DisplayLanguage,
  ScreenOrientation,
  LayoutMode,
  EmergencyAlertConfig,
  PrayerTimesConfig,
  SponsorshipConfig,
  WeatherConfig,
  ContentRotationConfig,
  ScheduleConfig,
  DisplayConfigErrorCode,
  DEFAULT_DISPLAY_CONFIG,
  DEFAULT_CONTENT_ROTATION,
  DEFAULT_PRAYER_TIMES,
  DEFAULT_SPONSORSHIP,
  DEFAULT_WEATHER,
  DEFAULT_EMERGENCY_ALERT,
  DEFAULT_SCHEDULE,
  DISPLAY_CONFIG_VALIDATION,
  THEME_COLORS,
  ANIMATION_EFFECTS,
  DISPLAY_LANGUAGES,
  DATE_FORMATS,
  COMMON_RESOLUTIONS,
} from "./display-config";
export {
  isValidBrightnessLevel,
  isValidVolumeLevel,
  isValidThemeColor,
  isValidAnimationEffect,
  isValidDisplayLanguage,
  isValidDateFormat,
  isValidResolution,
  isValidHexColor,
  isValidTimeFormat,
  isValidContentDuration,
  isValidOpacity,
  isDisplayConfiguration,
  isCreateDisplayConfigRequest,
  isUpdateDisplayConfigRequest,
  createDisplayConfiguration,
  getThemeColorDisplayName,
  getLanguageDisplayName,
  formatResolution,
  getRecommendedFontSize,
  validateDisplayConfiguration,
} from "./display-config";
// PrayerSchedule types
export type {
  PrayerSchedule,
  CreatePrayerScheduleRequest,
  UpdatePrayerScheduleRequest,
  PrayerScheduleWithRelations,
  PrayerName,
  PrayerNameMalay,
  PrayerNameArabic,
  PrayerStatus,
  CalculationMethod,
  TimeFormat,
  PrayerTime,
  DailyPrayerTimes,
  PrayerScheduleConfig,
  JakimApiResponse,
  PrayerScheduleErrorCode,
  PRAYER_NAMES,
  PRAYER_TRANSLATIONS,
  CALCULATION_METHODS,
  CALCULATION_METHOD_INFO,
  DEFAULT_PRAYER_SCHEDULE_CONFIG,
  PRAYER_SCHEDULE_VALIDATION,
  DEFAULT_REFRESH_INTERVAL,
  MAX_ADVANCE_DAYS,
  JAKIM_API,
} from "./prayer-schedule";
export {
  isValidPrayerName,
  isValidCalculationMethod,
  isValidTimeFormat as isValidPrayerTimeFormat,
  isValidRefreshInterval,
  isPrayerTime,
  isDailyPrayerTimes,
  isPrayerSchedule,
  isCreatePrayerScheduleRequest,
  getPrayerName,
  getAllPrayerNames,
  formatTime as formatPrayerTime,
  calculatePrayerStatus,
  getCurrentPrayer,
  getNextPrayer,
  createPrayerSchedule,
  convertJakimResponse,
  getCalculationMethodName,
  validatePrayerScheduleConfig,
} from "./prayer-schedule";
// SponsorshipRecord types
export type {
  SponsorshipRecord,
  CreateSponsorshipRequest as SponsorshipCreateRequest,
  UpdateSponsorshipRequest as SponsorshipUpdateRequest,
  ApproveSponsorshipRequest,
  SponsorshipRecordWithRelations,
  SponsorshipAnalytics,
  SponsorshipType,
  SponsorshipStatus,
  PaymentStatus,
  PaymentMethod,
  SponsorshipVisibility,
  SponsorContact,
  PaymentInfo,
  SponsorshipBenefits,
  SponsorshipErrorCode,
  SPONSORSHIP_TYPES,
  SPONSORSHIP_STATUSES,
  PAYMENT_METHODS,
  PAYMENT_METHOD_NAMES,
  DEFAULT_SPONSORSHIP_VISIBILITY,
  DEFAULT_SPONSORSHIP_BENEFITS,
  SPONSORSHIP_TYPE_BENEFITS,
  SPONSORSHIP_VALIDATION,
  MIN_SPONSORSHIP_AMOUNTS,
} from "./sponsorship-record";
export {
  isValidSponsorshipType,
  isValidSponsorshipStatus,
  isValidPaymentMethod,
  isValidSponsorshipAmount,
  isSponsorshipRecord,
  isCreateSponsorshipRequest,
  getSponsorshipTypeDisplayName,
  getSponsorshipStatusDisplayName,
  getPaymentMethodDisplayName,
  calculateSponsorshipDuration,
  calculateCostPerDay,
  isSponsorshipActive,
  isSponsorshipEditable,
  isSponsorshipCancellable,
  calculateRecommendedAmount,
  formatSponsorshipAmount as formatSponsorAmount,
  createSponsorshipRecord,
  validateSponsorshipDates,
  validateSponsorshipRecord,
} from "./sponsorship-record";
// DisplayContentAssignment types
export type {
  DisplayContentAssignment,
  CreateContentAssignmentRequest,
  UpdateContentAssignmentRequest,
  ApproveContentAssignmentRequest,
  DisplayContentAssignmentWithRelations,
  AssignmentScheduleEntry,
  AssignmentStatus,
  AssignmentPriority,
  DisplayMode,
  SchedulingRules,
  ContentRotation,
  DisplayLayout,
  ContentTargeting,
  AssignmentAnalytics,
  AssignmentErrorCode,
  ASSIGNMENT_STATUSES,
  ASSIGNMENT_PRIORITIES,
  PRIORITY_SCORES,
  DISPLAY_MODES,
  DEFAULT_SCHEDULING_RULES,
  DEFAULT_CONTENT_ROTATION as DEFAULT_ASSIGNMENT_CONTENT_ROTATION,
  DEFAULT_DISPLAY_LAYOUT,
  LAYOUT_PRESETS,
  ASSIGNMENT_VALIDATION,
} from "./display-content-assignment";
export {
  isValidAssignmentStatus,
  isValidAssignmentPriority,
  isValidDisplayMode,
  getPriorityScore,
  getPriorityLevel,
  isDisplayContentAssignment,
  isCreateContentAssignmentRequest,
  isAssignmentActive,
  canDisplayAssignment,
  calculateEffectivePriority,
  getAssignmentStatusDisplayName,
  getPriorityDisplayName,
  getDisplayModeDisplayName,
  createContentAssignment,
  validateAssignmentDates,
  validateDisplayLayout,
  validateContentAssignment,
} from "./display-content-assignment";
// Export specific API response types to avoid conflicts
export type {
  DisplayContentResponse,
  PrayerTimesResponse,
  DisplayConfigResponse,
  HeartbeatResponse,
  SponsorshipResponse,
  ContentUploadResponse,
  ApiMeta,
  ApiLinks,
  ContentFiltersRequest,
  CreateContentRequest,
  UpdateContentRequest,
  CreateSponsorshipRequest,
} from "./api-responses";
export {
  createApiResponse,
  createApiError,
  isApiError,
  isApiSuccess,
} from "./api-responses";
