{
  "config": {
    "configFile": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/playwright.config.ts",
    "rootDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 6
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "playwright-report/results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Chrome TV Display",
        "name": "Chrome TV Display",
        "testDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "4K TV Display",
        "name": "4K TV Display",
        "testDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "TV Kiosk Mode",
        "name": "TV Kiosk Mode",
        "testDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Firefox TV",
        "name": "Firefox TV",
        "testDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Safari TV",
        "name": "Safari TV",
        "testDir": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 6,
    "webServer": {
      "command": "pnpm dev",
      "url": "http://localhost:3001",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "contract/display-config.test.ts",
      "file": "contract/display-config.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Display Configuration API Contract - GET",
          "file": "contract/display-config.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "GET /displays/{displayId}/config returns complete display configuration",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 126,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:24:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 24
                        },
                        "snippet": "\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 24
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:24:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.766Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 24
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-27af6f9e015bbf9557ea",
              "file": "contract/display-config.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns valid field types and constraints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 130,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:52:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 52
                        },
                        "snippet": "\u001b[0m \u001b[90m 50 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m     \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 52
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 50 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m     \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:52:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.770Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-2603f4b2c3dd28670e7e",
              "file": "contract/display-config.test.ts",
              "line": 45,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config includes heartbeat timestamp when available",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 117,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:87:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 87
                        },
                        "snippet": "\u001b[0m \u001b[90m 85 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 87 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 88 |\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m     \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 87
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 85 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 87 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 88 |\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m     \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:87:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.758Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 87
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-063a70cb8823bc50a23b",
              "file": "contract/display-config.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns 404 for non-existent display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 109,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:54.868Z\"}}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:54.868Z\"}}\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:109:19",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 19,
                          "line": 109
                        },
                        "snippet": "\u001b[0m \u001b[90m 107 |\u001b[39m\n \u001b[90m 108 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 109 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 110 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 111 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 112 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 19,
                            "line": 109
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:54.868Z\"}}\u001b[39m\n\n\u001b[0m \u001b[90m 107 |\u001b[39m\n \u001b[90m 108 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 109 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 110 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 111 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 112 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:109:19\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.761Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 19,
                        "line": 109
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-ded62c4f0c98afb1fa7f",
              "file": "contract/display-config.test.ts",
              "line": 98,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns complete display configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-7a597a9209e8ae4c47b6",
              "file": "contract/display-config.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns valid field types and constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-87a837cb4cd65fcd8f70",
              "file": "contract/display-config.test.ts",
              "line": 45,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config includes heartbeat timestamp when available",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-c00ecb882e99dd808ea8",
              "file": "contract/display-config.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-4debdb28aacbbfe15856",
              "file": "contract/display-config.test.ts",
              "line": 98,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns complete display configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-5bbfca15e27a13657d0c",
              "file": "contract/display-config.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns valid field types and constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-506e60518024a79bcc2c",
              "file": "contract/display-config.test.ts",
              "line": 45,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config includes heartbeat timestamp when available",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-3c5eb905a3d399ef0944",
              "file": "contract/display-config.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-f296e772e915163d029d",
              "file": "contract/display-config.test.ts",
              "line": 98,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns complete display configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-742bd697115739236ef3",
              "file": "contract/display-config.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns valid field types and constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b4305249d69c76c644b6",
              "file": "contract/display-config.test.ts",
              "line": 45,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config includes heartbeat timestamp when available",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-f180f25fa63875f91206",
              "file": "contract/display-config.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-d02fa91119c8740f0398",
              "file": "contract/display-config.test.ts",
              "line": 98,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns complete display configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-adc963e7e776b616c201",
              "file": "contract/display-config.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns valid field types and constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-70018b2fec1cefeb3810",
              "file": "contract/display-config.test.ts",
              "line": 45,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config includes heartbeat timestamp when available",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-19a105c1ad259a3a91a0",
              "file": "contract/display-config.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-874830e209a3e2356fc9",
              "file": "contract/display-config.test.ts",
              "line": 98,
              "column": 7
            }
          ]
        },
        {
          "title": "Display Configuration API Contract - PUT",
          "file": "contract/display-config.test.ts",
          "line": 115,
          "column": 6,
          "specs": [
            {
              "title": "PUT /displays/{displayId}/config updates display configuration successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 128,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:135:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 135
                        },
                        "snippet": "\u001b[0m \u001b[90m 133 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 134 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 135 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 136 |\u001b[39m\n \u001b[90m 137 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 138 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 135
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 133 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 134 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 135 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 136 |\u001b[39m\n \u001b[90m 137 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 138 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:135:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.769Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-4da9f58f0ac3a981086a",
              "file": "contract/display-config.test.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config allows partial updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 122,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:164:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 164
                        },
                        "snippet": "\u001b[0m \u001b[90m 162 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 164 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 165 |\u001b[39m\n \u001b[90m 166 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 167 |\u001b[39m     \u001b[36mconst\u001b[39m updatedConfig \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 164
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 162 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 164 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 165 |\u001b[39m\n \u001b[90m 166 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 167 |\u001b[39m     \u001b[36mconst\u001b[39m updatedConfig \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:164:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:54.763Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 164
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-1c353181432e01444b05",
              "file": "contract/display-config.test.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates carousel_interval constraints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 68,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:189:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 189
                        },
                        "snippet": "\u001b[0m \u001b[90m 187 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 188 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 189 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 190 |\u001b[39m\n \u001b[90m 191 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 192 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 189
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 187 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 188 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 189 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 190 |\u001b[39m\n \u001b[90m 191 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 192 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:189:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.328Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 189
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-d3dd05e7002e530eac6b",
              "file": "contract/display-config.test.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates max_content_items constraints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 60,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:213:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 213
                        },
                        "snippet": "\u001b[0m \u001b[90m 211 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 214 |\u001b[39m\n \u001b[90m 215 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 216 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 213
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 211 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 214 |\u001b[39m\n \u001b[90m 215 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 216 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:213:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.349Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 213
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-30e12824109a858f174d",
              "file": "contract/display-config.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates prayer_time_position enum",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 56,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:234:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 234
                        },
                        "snippet": "\u001b[0m \u001b[90m 232 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 233 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 234 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 235 |\u001b[39m\n \u001b[90m 236 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 237 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 234
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 232 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 233 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 234 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 235 |\u001b[39m\n \u001b[90m 236 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 237 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:234:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.326Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 234
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-648eef2946e968f1c0d0",
              "file": "contract/display-config.test.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates display_name length",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 61,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:255:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 255
                        },
                        "snippet": "\u001b[0m \u001b[90m 253 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 254 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 255 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 256 |\u001b[39m\n \u001b[90m 257 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 258 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 255
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 253 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 254 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 255 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 256 |\u001b[39m\n \u001b[90m 257 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 258 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:255:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.319Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 255
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-e8b7ba9e024a27467310",
              "file": "contract/display-config.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates auto_refresh_interval range",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 59,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:276:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 276
                        },
                        "snippet": "\u001b[0m \u001b[90m 274 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 275 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 276 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 277 |\u001b[39m\n \u001b[90m 278 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 279 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 276
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 274 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 275 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 276 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 277 |\u001b[39m\n \u001b[90m 278 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 279 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:276:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.315Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 276
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-d53d5e42e0162cd35272",
              "file": "contract/display-config.test.ts",
              "line": 262,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config rejects updates to immutable fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 62,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:298:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 298
                        },
                        "snippet": "\u001b[0m \u001b[90m 296 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 297 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 298 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 299 |\u001b[39m\n \u001b[90m 300 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 301 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 298
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 296 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 297 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 298 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 299 |\u001b[39m\n \u001b[90m 300 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 301 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:298:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.357Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 298
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-38f6885f39ede4b2e27d",
              "file": "contract/display-config.test.ts",
              "line": 283,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config returns 404 for non-existent display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 50,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"RESOURCE_NOT_FOUND\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"RESOURCE_NOT_FOUND\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:322:24",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 24,
                          "line": 322
                        },
                        "snippet": "\u001b[0m \u001b[90m 320 |\u001b[39m\n \u001b[90m 321 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 322 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 323 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 324 |\u001b[39m\n \u001b[90m 325 |\u001b[39m   test(\u001b[32m'PUT /displays/{displayId}/config handles malformed JSON gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 24,
                            "line": 322
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"RESOURCE_NOT_FOUND\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n\n\u001b[0m \u001b[90m 320 |\u001b[39m\n \u001b[90m 321 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 322 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 323 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 324 |\u001b[39m\n \u001b[90m 325 |\u001b[39m   test(\u001b[32m'PUT /displays/{displayId}/config handles malformed JSON gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:322:24\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.779Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 24,
                        "line": 322
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-8591bbc73d4c5e4cc0a8",
              "file": "contract/display-config.test.ts",
              "line": 304,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config handles malformed JSON gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 179,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:335:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 31,
                          "line": 335
                        },
                        "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m\n \u001b[90m 337 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 31,
                            "line": 335
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 333 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m\n \u001b[90m 337 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'VALIDATION_ERROR'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:335:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.792Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 31,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-e18496b8cf444880a3cb",
              "file": "contract/display-config.test.ts",
              "line": 325,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config updates display configuration successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-15cc480a48557f540f45",
              "file": "contract/display-config.test.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config allows partial updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-a24fa2609c0db925d787",
              "file": "contract/display-config.test.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates carousel_interval constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-16b15ebbb27390ce70d1",
              "file": "contract/display-config.test.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates max_content_items constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-9118a7c66cd93aa2e945",
              "file": "contract/display-config.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates prayer_time_position enum",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-5c2372681bc772e2c730",
              "file": "contract/display-config.test.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates display_name length",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-77b305533ee07bfce749",
              "file": "contract/display-config.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates auto_refresh_interval range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-41dd7f7e3423aa34d486",
              "file": "contract/display-config.test.ts",
              "line": 262,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config rejects updates to immutable fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-dce8acda99a2a51bd81a",
              "file": "contract/display-config.test.ts",
              "line": 283,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-aaad754c940c09cd5b6e",
              "file": "contract/display-config.test.ts",
              "line": 304,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config handles malformed JSON gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b759f8051d469dbe373d",
              "file": "contract/display-config.test.ts",
              "line": 325,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config updates display configuration successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-dc8d4cef80c66ba280d1",
              "file": "contract/display-config.test.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config allows partial updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-598146acb33e9a2fcddd",
              "file": "contract/display-config.test.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates carousel_interval constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b30e619d5adfb4c7acf3",
              "file": "contract/display-config.test.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates max_content_items constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-245ee676db03cb382361",
              "file": "contract/display-config.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates prayer_time_position enum",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-c6c85603706104135c32",
              "file": "contract/display-config.test.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates display_name length",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-8e17679fcbe887ebafd7",
              "file": "contract/display-config.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates auto_refresh_interval range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-78ae5e1294ceaa8bae98",
              "file": "contract/display-config.test.ts",
              "line": 262,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config rejects updates to immutable fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-ffd86634d18a96497b07",
              "file": "contract/display-config.test.ts",
              "line": 283,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-2325d986fccb35df0b23",
              "file": "contract/display-config.test.ts",
              "line": 304,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config handles malformed JSON gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-67eab55dbc7d545b3e47",
              "file": "contract/display-config.test.ts",
              "line": 325,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config updates display configuration successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-4aa8c4e29e4d435a7c43",
              "file": "contract/display-config.test.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config allows partial updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-ad94264d041d413208fc",
              "file": "contract/display-config.test.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates carousel_interval constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-314d78ec8c20408ceed4",
              "file": "contract/display-config.test.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates max_content_items constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-61a5ed0b5107f47b688b",
              "file": "contract/display-config.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates prayer_time_position enum",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-44d35c3244facd8da022",
              "file": "contract/display-config.test.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates display_name length",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-6521ffbc9972192be0aa",
              "file": "contract/display-config.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates auto_refresh_interval range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-bd6a59b097c45dc92760",
              "file": "contract/display-config.test.ts",
              "line": 262,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config rejects updates to immutable fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-40063fd047c1a0667ece",
              "file": "contract/display-config.test.ts",
              "line": 283,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b4052ef0261e36f11d2b",
              "file": "contract/display-config.test.ts",
              "line": 304,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config handles malformed JSON gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-e3b4339af258945cb018",
              "file": "contract/display-config.test.ts",
              "line": 325,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config updates display configuration successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-417b0f1277aded8998ef",
              "file": "contract/display-config.test.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config allows partial updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b8f519d648161baa4cb1",
              "file": "contract/display-config.test.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates carousel_interval constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b15a8cc0a0e0c10f0cbd",
              "file": "contract/display-config.test.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates max_content_items constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-62b98eef7769570e452a",
              "file": "contract/display-config.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates prayer_time_position enum",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-64674548915733454cdc",
              "file": "contract/display-config.test.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates display_name length",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-015ec55c38238b5c8b8d",
              "file": "contract/display-config.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config validates auto_refresh_interval range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-70ce2d3dee589b84ee01",
              "file": "contract/display-config.test.ts",
              "line": 262,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config rejects updates to immutable fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-e8129c59cb052c4934f2",
              "file": "contract/display-config.test.ts",
              "line": 283,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-36a90b7b140ea5769f6b",
              "file": "contract/display-config.test.ts",
              "line": 304,
              "column": 7
            },
            {
              "title": "PUT /displays/{displayId}/config handles malformed JSON gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-13b1b1f960fa10ef188e",
              "file": "contract/display-config.test.ts",
              "line": 325,
              "column": 7
            }
          ]
        },
        {
          "title": "Display Configuration API Error Handling",
          "file": "contract/display-config.test.ts",
          "line": 342,
          "column": 6,
          "specs": [
            {
              "title": "validates UUID format for display ID",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 188,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:350:34",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 34,
                          "line": 350
                        },
                        "snippet": "\u001b[0m \u001b[90m 348 |\u001b[39m       \u001b[32m`${BASE_URL}/displays/${invalidFormatId}/config`\u001b[39m\n \u001b[90m 349 |\u001b[39m     )\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 350 |\u001b[39m     expect(getResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 351 |\u001b[39m\n \u001b[90m 352 |\u001b[39m     \u001b[90m// Test PUT  \u001b[39m\n \u001b[90m 353 |\u001b[39m     \u001b[36mconst\u001b[39m putResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mput(\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 34,
                            "line": 350
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 348 |\u001b[39m       \u001b[32m`${BASE_URL}/displays/${invalidFormatId}/config`\u001b[39m\n \u001b[90m 349 |\u001b[39m     )\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 350 |\u001b[39m     expect(getResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 351 |\u001b[39m\n \u001b[90m 352 |\u001b[39m     \u001b[90m// Test PUT  \u001b[39m\n \u001b[90m 353 |\u001b[39m     \u001b[36mconst\u001b[39m putResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mput(\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:350:34\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.795Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 34,
                        "line": 350
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-70e877f552bdc3a892fb",
              "file": "contract/display-config.test.ts",
              "line": 343,
              "column": 7
            },
            {
              "title": "handles database connectivity issues gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 183,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.809Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "31f69af9a13f732a9050-326748102e772c2ff3ac",
              "file": "contract/display-config.test.ts",
              "line": 362,
              "column": 7
            },
            {
              "title": "enforces authentication and authorization",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 177,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:388:24",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                          "column": 24,
                          "line": 388
                        },
                        "snippet": "\u001b[0m \u001b[90m 386 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 387 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 388 |\u001b[39m     expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m401\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 389 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 390 |\u001b[39m\n \u001b[90m 391 |\u001b[39m   test(\u001b[32m'prevents unauthorized configuration updates'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                            "column": 24,
                            "line": 388
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n\u001b[0m \u001b[90m 386 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 387 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 388 |\u001b[39m     expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m401\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 389 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 390 |\u001b[39m\n \u001b[90m 391 |\u001b[39m   test(\u001b[32m'prevents unauthorized configuration updates'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts:388:24\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.825Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-config.test.ts",
                        "column": 24,
                        "line": 388
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "31f69af9a13f732a9050-9da0c0b6aef7e7dd8f53",
              "file": "contract/display-config.test.ts",
              "line": 377,
              "column": 7
            },
            {
              "title": "prevents unauthorized configuration updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 188,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:55.812Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "31f69af9a13f732a9050-19a3b27100c6a291abac",
              "file": "contract/display-config.test.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "validates UUID format for display ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-16fe9a8953515aca493f",
              "file": "contract/display-config.test.ts",
              "line": 343,
              "column": 7
            },
            {
              "title": "handles database connectivity issues gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-8a076d5f04a3b23a9131",
              "file": "contract/display-config.test.ts",
              "line": 362,
              "column": 7
            },
            {
              "title": "enforces authentication and authorization",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-1afe2c6438d421af7f0c",
              "file": "contract/display-config.test.ts",
              "line": 377,
              "column": 7
            },
            {
              "title": "prevents unauthorized configuration updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-a16eb1399c74d9bfc7cc",
              "file": "contract/display-config.test.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "validates UUID format for display ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-361388a3ab53d765894b",
              "file": "contract/display-config.test.ts",
              "line": 343,
              "column": 7
            },
            {
              "title": "handles database connectivity issues gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-755eecf82c05397bc2a4",
              "file": "contract/display-config.test.ts",
              "line": 362,
              "column": 7
            },
            {
              "title": "enforces authentication and authorization",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-772b56f3fea7938089b8",
              "file": "contract/display-config.test.ts",
              "line": 377,
              "column": 7
            },
            {
              "title": "prevents unauthorized configuration updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-522d776cabeafdf0ace8",
              "file": "contract/display-config.test.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "validates UUID format for display ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-6f70783f575f9d86e5f4",
              "file": "contract/display-config.test.ts",
              "line": 343,
              "column": 7
            },
            {
              "title": "handles database connectivity issues gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-35605ee58287e71c4b16",
              "file": "contract/display-config.test.ts",
              "line": 362,
              "column": 7
            },
            {
              "title": "enforces authentication and authorization",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-0c16dbe4f5b7eeb25b8c",
              "file": "contract/display-config.test.ts",
              "line": 377,
              "column": 7
            },
            {
              "title": "prevents unauthorized configuration updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-49dcda0293b8c4814cf5",
              "file": "contract/display-config.test.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "validates UUID format for display ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-61c90a4e6162f78173c4",
              "file": "contract/display-config.test.ts",
              "line": 343,
              "column": 7
            },
            {
              "title": "handles database connectivity issues gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-b4aabe42900d123135a2",
              "file": "contract/display-config.test.ts",
              "line": 362,
              "column": 7
            },
            {
              "title": "enforces authentication and authorization",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-ec8c3cff2bf4956b91b4",
              "file": "contract/display-config.test.ts",
              "line": 377,
              "column": 7
            },
            {
              "title": "prevents unauthorized configuration updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "31f69af9a13f732a9050-966044ed6ead361590ec",
              "file": "contract/display-config.test.ts",
              "line": 391,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "contract/display-content.test.ts",
      "file": "contract/display-content.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Display Content API Contract",
          "file": "contract/display-content.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "GET /displays/{displayId}/content returns top 10 sponsored content with correct structure",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 517,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:24:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 24
                        },
                        "snippet": "\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 24
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:24:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.268Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 24
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-44ff98992715676c8e39",
              "file": "contract/display-content.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns content items with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 383,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:50:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 50
                        },
                        "snippet": "\u001b[0m \u001b[90m 48 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 49 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 50 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 51 |\u001b[39m\n \u001b[90m 52 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m     \u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 50
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 48 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 49 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 50 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 51 |\u001b[39m\n \u001b[90m 52 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m     \u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:50:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.367Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-49090696aa5a2b559229",
              "file": "contract/display-content.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content sorts content by sponsorship amount descending",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:91:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 91
                        },
                        "snippet": "\u001b[0m \u001b[90m 89 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 91 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 92 |\u001b[39m\n \u001b[90m 93 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 94 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 91
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 89 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 91 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 92 |\u001b[39m\n \u001b[90m 93 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 94 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:91:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.421Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 91
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-b0b593e565b3203b662e",
              "file": "contract/display-content.test.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content includes only active content",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 774,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:111:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 111
                        },
                        "snippet": "\u001b[0m \u001b[90m 109 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 110 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 111 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 112 |\u001b[39m\n \u001b[90m 113 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 114 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 111
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 109 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 110 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 111 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 112 |\u001b[39m\n \u001b[90m 113 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 114 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:111:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.008Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-f544aa945dd4d1380505",
              "file": "contract/display-content.test.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates YouTube and image content URLs",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 767,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:129:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 129
                        },
                        "snippet": "\u001b[0m \u001b[90m 127 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 129 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 130 |\u001b[39m\n \u001b[90m 131 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 132 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 129
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 127 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 129 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 130 |\u001b[39m\n \u001b[90m 131 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 132 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:129:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.017Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 129
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-79601493a5dd759a4b60",
              "file": "contract/display-content.test.ts",
              "line": 122,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns 404 for non-existent display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 292,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:56.783Z\"}}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:56.783Z\"}}\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:161:19",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 19,
                          "line": 161
                        },
                        "snippet": "\u001b[0m \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 161 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 164 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 19,
                            "line": 161
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:56.783Z\"}}\u001b[39m\n\n\u001b[0m \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 161 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 164 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:161:19\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:56.489Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 19,
                        "line": 161
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-d019e34332ecdcab4ca3",
              "file": "contract/display-content.test.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates UUID format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 288,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:174:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 174
                        },
                        "snippet": "\u001b[0m \u001b[90m 172 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 174 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 175 |\u001b[39m\n \u001b[90m 176 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 177 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 174
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 172 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 174 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 175 |\u001b[39m\n \u001b[90m 176 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 177 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:174:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.130Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 174
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-e9599eaac546808f544f",
              "file": "contract/display-content.test.ts",
              "line": 166,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content handles server errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 274,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.140Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d7dc3ff055cc27201428-ee963ae7e7a0282ac610",
              "file": "contract/display-content.test.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content respects content limit configuration",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 290,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:206:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 31,
                          "line": 206
                        },
                        "snippet": "\u001b[0m \u001b[90m 204 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 205 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 206 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 31,
                            "line": 206
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 204 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 205 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 206 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:206:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.137Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 31,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-0cc437737cc05c9283ff",
              "file": "contract/display-content.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns top 10 sponsored content with correct structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-0bc1cbd8e82ac5fcf72c",
              "file": "contract/display-content.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns content items with all required fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-24de92878b011e481b99",
              "file": "contract/display-content.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content sorts content by sponsorship amount descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-8d388944e10ce605d00e",
              "file": "contract/display-content.test.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content includes only active content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-01d329e169c63ecb4485",
              "file": "contract/display-content.test.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates YouTube and image content URLs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-3943fc1ebb50d18e4470",
              "file": "contract/display-content.test.ts",
              "line": 122,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-8b30c2fb234a513026bd",
              "file": "contract/display-content.test.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-e31b55bbfe0134d2f67a",
              "file": "contract/display-content.test.ts",
              "line": 166,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content handles server errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-950f38a536685478fa1e",
              "file": "contract/display-content.test.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content respects content limit configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-67cef9cbbfd63279b3e6",
              "file": "contract/display-content.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns top 10 sponsored content with correct structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-27b93a9508601654cc05",
              "file": "contract/display-content.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns content items with all required fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-b2cbb6e851a7c6100eec",
              "file": "contract/display-content.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content sorts content by sponsorship amount descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-ef1a2085097c8bcdaf76",
              "file": "contract/display-content.test.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content includes only active content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-650fd440c3f558a11652",
              "file": "contract/display-content.test.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates YouTube and image content URLs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-0e9911d2d225801fdeb1",
              "file": "contract/display-content.test.ts",
              "line": 122,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-25d3be07bc4340ea29de",
              "file": "contract/display-content.test.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-eafefa511e94be5706dc",
              "file": "contract/display-content.test.ts",
              "line": 166,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content handles server errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-5943be1bca439e145018",
              "file": "contract/display-content.test.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content respects content limit configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-32159bff10184b83d49c",
              "file": "contract/display-content.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns top 10 sponsored content with correct structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-55df7e592b40be35b269",
              "file": "contract/display-content.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns content items with all required fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-3e563471d6490f2d436c",
              "file": "contract/display-content.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content sorts content by sponsorship amount descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-f1333125dc1782d96c12",
              "file": "contract/display-content.test.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content includes only active content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-325727bd014ef1fc15a8",
              "file": "contract/display-content.test.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates YouTube and image content URLs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-d754cc8e6cb664378363",
              "file": "contract/display-content.test.ts",
              "line": 122,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-c0f603fb25552be2fccb",
              "file": "contract/display-content.test.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-70adf48106a1f1eb73fb",
              "file": "contract/display-content.test.ts",
              "line": 166,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content handles server errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-a16c992b939f122ac122",
              "file": "contract/display-content.test.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content respects content limit configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-47fb9de9f578b32347fc",
              "file": "contract/display-content.test.ts",
              "line": 199,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns top 10 sponsored content with correct structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-d020ed632e1acf53d81c",
              "file": "contract/display-content.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns content items with all required fields",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-c4a255bc4f0a0c6bd0ca",
              "file": "contract/display-content.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content sorts content by sponsorship amount descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-5c67df4bc950ec75ad14",
              "file": "contract/display-content.test.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content includes only active content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-d8079d8419e6fea2069b",
              "file": "contract/display-content.test.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates YouTube and image content URLs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-f2078d174befd59ff00e",
              "file": "contract/display-content.test.ts",
              "line": 122,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-7a69aa4f47ce63520c0e",
              "file": "contract/display-content.test.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-01e125b4413fe391f99a",
              "file": "contract/display-content.test.ts",
              "line": 166,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content handles server errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-08eb23aa1e34fc88db08",
              "file": "contract/display-content.test.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/content respects content limit configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-593efc0679a51020dbfd",
              "file": "contract/display-content.test.ts",
              "line": 199,
              "column": 7
            }
          ]
        },
        {
          "title": "Display Content API Authentication & Security",
          "file": "contract/display-content.test.ts",
          "line": 218,
          "column": 6,
          "specs": [
            {
              "title": "requires valid authentication",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:231:24",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                          "column": 24,
                          "line": 231
                        },
                        "snippet": "\u001b[0m \u001b[90m 229 |\u001b[39m\n \u001b[90m 230 |\u001b[39m     \u001b[90m// Should require authentication (401 or handle appropriately)\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 231 |\u001b[39m     expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m401\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 232 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 233 |\u001b[39m\n \u001b[90m 234 |\u001b[39m   test(\u001b[32m'validates display ownership/access'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                            "column": 24,
                            "line": 231
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n\u001b[0m \u001b[90m 229 |\u001b[39m\n \u001b[90m 230 |\u001b[39m     \u001b[90m// Should require authentication (401 or handle appropriately)\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 231 |\u001b[39m     expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m401\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 232 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 233 |\u001b[39m\n \u001b[90m 234 |\u001b[39m   test(\u001b[32m'validates display ownership/access'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts:231:24\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.125Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/display-content.test.ts",
                        "column": 24,
                        "line": 231
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d7dc3ff055cc27201428-24f05db249fc003577cc",
              "file": "contract/display-content.test.ts",
              "line": 219,
              "column": 7
            },
            {
              "title": "validates display ownership/access",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 286,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.135Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d7dc3ff055cc27201428-c2521cf93c485346a890",
              "file": "contract/display-content.test.ts",
              "line": 234,
              "column": 7
            },
            {
              "title": "requires valid authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-962da0c60dd54096ab2b",
              "file": "contract/display-content.test.ts",
              "line": 219,
              "column": 7
            },
            {
              "title": "validates display ownership/access",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-e78622cc2e12fcca4fed",
              "file": "contract/display-content.test.ts",
              "line": 234,
              "column": 7
            },
            {
              "title": "requires valid authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-10168e2ba193e0626674",
              "file": "contract/display-content.test.ts",
              "line": 219,
              "column": 7
            },
            {
              "title": "validates display ownership/access",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-b1a6394ac7f195f45c84",
              "file": "contract/display-content.test.ts",
              "line": 234,
              "column": 7
            },
            {
              "title": "requires valid authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-5527b0abdeb90ab54f72",
              "file": "contract/display-content.test.ts",
              "line": 219,
              "column": 7
            },
            {
              "title": "validates display ownership/access",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-218ca523ccda42ad1950",
              "file": "contract/display-content.test.ts",
              "line": 234,
              "column": 7
            },
            {
              "title": "requires valid authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-93cc1be9476f35137a6a",
              "file": "contract/display-content.test.ts",
              "line": 219,
              "column": 7
            },
            {
              "title": "validates display ownership/access",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d7dc3ff055cc27201428-7ec539213288e7f9bf8b",
              "file": "contract/display-content.test.ts",
              "line": 234,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "contract/prayer-times.test.ts",
      "file": "contract/prayer-times.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Prayer Times API Contract",
          "file": "contract/prayer-times.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "GET /displays/{displayId}/prayer-times returns current day prayer schedule",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 289,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:24:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 24
                        },
                        "snippet": "\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 24
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 22 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 23 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m     expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:24:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.129Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 24
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ed9c61076e63e7f42993",
              "file": "contract/prayer-times.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns valid time formats",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 47,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:54:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 54
                        },
                        "snippet": "\u001b[0m \u001b[90m 52 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 57 |\u001b[39m     \u001b[36mconst\u001b[39m prayerSchedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 54
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 52 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 57 |\u001b[39m     \u001b[36mconst\u001b[39m prayerSchedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:54:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.557Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 54
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-567879bbadd618fc4a89",
              "file": "contract/prayer-times.test.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times supports date query parameter",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 27,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:88:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 88
                        },
                        "snippet": "\u001b[0m \u001b[90m 86 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 87 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m\n \u001b[90m 90 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m     expect(data\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mprayer_date)\u001b[33m.\u001b[39mtoBe(targetDate)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 88
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 86 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 87 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m\n \u001b[90m 90 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m     expect(data\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mprayer_date)\u001b[33m.\u001b[39mtoBe(targetDate)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:88:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.435Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 88
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-2dba8c365f2aef601b39",
              "file": "contract/prayer-times.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates date parameter format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:102:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 102
                        },
                        "snippet": "\u001b[0m \u001b[90m 100 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 101 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 102 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 103 |\u001b[39m\n \u001b[90m 104 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 102
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 100 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 101 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 102 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 103 |\u001b[39m\n \u001b[90m 104 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:102:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.817Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 102
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-894bf6fc1ffcb1857654",
              "file": "contract/prayer-times.test.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns prayer times in logical order",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 51,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:117:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 117
                        },
                        "snippet": "\u001b[0m \u001b[90m 115 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 116 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m\n \u001b[90m 119 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m     \u001b[36mconst\u001b[39m schedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 117
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 115 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 116 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m\n \u001b[90m 119 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m     \u001b[36mconst\u001b[39m schedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:117:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.813Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 117
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-e1169f05c4adaa1f7c21",
              "file": "contract/prayer-times.test.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes data source information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 30,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:150:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 150
                        },
                        "snippet": "\u001b[0m \u001b[90m 148 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 149 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 153 |\u001b[39m     \u001b[36mconst\u001b[39m prayerSchedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 150
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 148 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 149 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 153 |\u001b[39m     \u001b[36mconst\u001b[39m prayerSchedule \u001b[33m=\u001b[39m data\u001b[33m.\u001b[39mdata\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:150:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.443Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 150
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-c08b6e0fb8d1332e630b",
              "file": "contract/prayer-times.test.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns 404 for non-existent display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:57.868Z\"}}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:57.868Z\"}}\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:179:19",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 19,
                          "line": 179
                        },
                        "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 19,
                            "line": 179
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"code\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": null, \"error\": {\"code\": \"NOT_FOUND\", \"message\": \"Display not found or inactive\", \"timestamp\": \"2025-09-21T09:36:57.868Z\"}}\u001b[39m\n\n\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'RESOURCE_NOT_FOUND'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:179:19\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.824Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 19,
                        "line": 179
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-282b8b5384baa0da7b88",
              "file": "contract/prayer-times.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates UUID format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:192:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 192
                        },
                        "snippet": "\u001b[0m \u001b[90m 190 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 195 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 192
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 190 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 195 |\u001b[39m     expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'code'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:192:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.861Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-2ad4e0318d2afc1546e3",
              "file": "contract/prayer-times.test.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times handles future dates appropriately",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 48,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:208:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 208
                        },
                        "snippet": "\u001b[0m \u001b[90m 206 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 209 |\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 211 |\u001b[39m     expect(data\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mprayer_date)\u001b[33m.\u001b[39mtoBe(futureDate)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 208
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 206 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 209 |\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 211 |\u001b[39m     expect(data\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mprayer_date)\u001b[33m.\u001b[39mtoBe(futureDate)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:208:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:57.860Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 208
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-20f04353725fd706273e",
              "file": "contract/prayer-times.test.ts",
              "line": 200,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes overlay position from display config",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 34,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:225:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 31,
                          "line": 225
                        },
                        "snippet": "\u001b[0m \u001b[90m 223 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 226 |\u001b[39m\n \u001b[90m 227 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 228 |\u001b[39m     \u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 31,
                            "line": 225
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 223 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 226 |\u001b[39m\n \u001b[90m 227 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 228 |\u001b[39m     \u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:225:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.001Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 31,
                        "line": 225
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-bff67f761b1410c837ca",
              "file": "contract/prayer-times.test.ts",
              "line": 218,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns current day prayer schedule",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-91c599a5c102a77739d1",
              "file": "contract/prayer-times.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns valid time formats",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-75c788314eac1215707e",
              "file": "contract/prayer-times.test.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times supports date query parameter",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-fdfb7085592897894d62",
              "file": "contract/prayer-times.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates date parameter format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-f9fe291defea1d2a54e1",
              "file": "contract/prayer-times.test.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns prayer times in logical order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-f29d8551c6ba59848fe2",
              "file": "contract/prayer-times.test.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes data source information",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-5706779096f14da6e706",
              "file": "contract/prayer-times.test.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-895dd373eac00da5f6c6",
              "file": "contract/prayer-times.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-1886bf4f3307734bc5d6",
              "file": "contract/prayer-times.test.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times handles future dates appropriately",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-6e256047460563a5c843",
              "file": "contract/prayer-times.test.ts",
              "line": 200,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes overlay position from display config",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-71e7a6a79b69c7e77b67",
              "file": "contract/prayer-times.test.ts",
              "line": 218,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns current day prayer schedule",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-1840e70fc6d8f0bd412c",
              "file": "contract/prayer-times.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns valid time formats",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-4ad82f52c186fe0529d9",
              "file": "contract/prayer-times.test.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times supports date query parameter",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-fbec2f92b58d19b7485c",
              "file": "contract/prayer-times.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates date parameter format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-f6003cc54487c422dfe5",
              "file": "contract/prayer-times.test.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns prayer times in logical order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-883aee195e9a7c7f3cc0",
              "file": "contract/prayer-times.test.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes data source information",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-8e4dcde68769995d95a6",
              "file": "contract/prayer-times.test.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-8b951c6a86ea5f97639a",
              "file": "contract/prayer-times.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-215ea00e5e21857fa266",
              "file": "contract/prayer-times.test.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times handles future dates appropriately",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ce9fcd9312df05b09831",
              "file": "contract/prayer-times.test.ts",
              "line": 200,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes overlay position from display config",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-72c9e3a6155c07182786",
              "file": "contract/prayer-times.test.ts",
              "line": 218,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns current day prayer schedule",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ac5b6582ed6d3db01aff",
              "file": "contract/prayer-times.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns valid time formats",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-b79070be3ed9649440de",
              "file": "contract/prayer-times.test.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times supports date query parameter",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-d8ef4fb8d383c99cf7a7",
              "file": "contract/prayer-times.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates date parameter format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-1643662d71c05e4c82d5",
              "file": "contract/prayer-times.test.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns prayer times in logical order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-6bf2c99bdc8c7a7a5fc1",
              "file": "contract/prayer-times.test.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes data source information",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-60df2a7ef6411ec1823d",
              "file": "contract/prayer-times.test.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-94dbe32a2baba09c37c2",
              "file": "contract/prayer-times.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-52edc8f0c22c0ca0fb62",
              "file": "contract/prayer-times.test.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times handles future dates appropriately",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-404ee7106151dd3e3cea",
              "file": "contract/prayer-times.test.ts",
              "line": 200,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes overlay position from display config",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-4c16b74804983a9ad7e4",
              "file": "contract/prayer-times.test.ts",
              "line": 218,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns current day prayer schedule",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-d99d5a01efa0ca11822b",
              "file": "contract/prayer-times.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns valid time formats",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-baa4b3b31a6f57fbd96b",
              "file": "contract/prayer-times.test.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times supports date query parameter",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-5e5bbf899eec1175fe81",
              "file": "contract/prayer-times.test.ts",
              "line": 80,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates date parameter format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ce832fa47effb7d101d1",
              "file": "contract/prayer-times.test.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns prayer times in logical order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-b2bfc7af531f96a27534",
              "file": "contract/prayer-times.test.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes data source information",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-dced1d069eee399c609c",
              "file": "contract/prayer-times.test.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times returns 404 for non-existent display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-8b028e3679c61ccda099",
              "file": "contract/prayer-times.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times validates UUID format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-386b169978d6e0953ac0",
              "file": "contract/prayer-times.test.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times handles future dates appropriately",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-8f847f95d4a5f6934120",
              "file": "contract/prayer-times.test.ts",
              "line": 200,
              "column": 7
            },
            {
              "title": "GET /displays/{displayId}/prayer-times includes overlay position from display config",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-dcd399975b8b5c6f3566",
              "file": "contract/prayer-times.test.ts",
              "line": 218,
              "column": 7
            }
          ]
        },
        {
          "title": "Prayer Times API Error Handling",
          "file": "contract/prayer-times.test.ts",
          "line": 236,
          "column": 6,
          "specs": [
            {
              "title": "handles JAKIM API service unavailability",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 35,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:250:33",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 33,
                          "line": 250
                        },
                        "snippet": "\u001b[0m \u001b[90m 248 |\u001b[39m     } \u001b[36melse\u001b[39m {\n \u001b[90m 249 |\u001b[39m       \u001b[90m// Should return cached/fallback data\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 250 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 251 |\u001b[39m     }\n \u001b[90m 252 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 253 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 33,
                            "line": 250
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 248 |\u001b[39m     } \u001b[36melse\u001b[39m {\n \u001b[90m 249 |\u001b[39m       \u001b[90m// Should return cached/fallback data\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 250 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 251 |\u001b[39m     }\n \u001b[90m 252 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 253 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:250:33\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.268Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 33,
                        "line": 250
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-a6a2b9bbffc419b426d4",
              "file": "contract/prayer-times.test.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "handles invalid masjid location configuration",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 50,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[400, 500]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[400, 500]\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:261:24",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                          "column": 24,
                          "line": 261
                        },
                        "snippet": "\u001b[0m \u001b[90m 259 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 260 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 261 |\u001b[39m     expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 262 |\u001b[39m\n \u001b[90m 263 |\u001b[39m     \u001b[36mif\u001b[39m (response\u001b[33m.\u001b[39mstatus() \u001b[33m===\u001b[39m \u001b[35m400\u001b[39m) {\n \u001b[90m 264 |\u001b[39m       \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                            "column": 24,
                            "line": 261
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[400, 500]\u001b[39m\n\n\u001b[0m \u001b[90m 259 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 260 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 261 |\u001b[39m     expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 262 |\u001b[39m\n \u001b[90m 263 |\u001b[39m     \u001b[36mif\u001b[39m (response\u001b[33m.\u001b[39mstatus() \u001b[33m===\u001b[39m \u001b[35m400\u001b[39m) {\n \u001b[90m 264 |\u001b[39m       \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts:261:24\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.267Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/contract/prayer-times.test.ts",
                        "column": 24,
                        "line": 261
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-1564a8ca33db03b23a1c",
              "file": "contract/prayer-times.test.ts",
              "line": 254,
              "column": 7
            },
            {
              "title": "provides fallback for historical dates beyond API coverage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 45,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.257Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-30387b391bbf07df35b4",
              "file": "contract/prayer-times.test.ts",
              "line": 269,
              "column": 7
            },
            {
              "title": "handles JAKIM API service unavailability",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-6986940bd317db8c2ad1",
              "file": "contract/prayer-times.test.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "handles invalid masjid location configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-607ccd3be492bcd4133a",
              "file": "contract/prayer-times.test.ts",
              "line": 254,
              "column": 7
            },
            {
              "title": "provides fallback for historical dates beyond API coverage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-1e4d04fc037e0a038e7c",
              "file": "contract/prayer-times.test.ts",
              "line": 269,
              "column": 7
            },
            {
              "title": "handles JAKIM API service unavailability",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-f87eb8fae7ea1b0ef4ec",
              "file": "contract/prayer-times.test.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "handles invalid masjid location configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-6c01dec174a3a08f43e3",
              "file": "contract/prayer-times.test.ts",
              "line": 254,
              "column": 7
            },
            {
              "title": "provides fallback for historical dates beyond API coverage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-093b5a48be27991575a9",
              "file": "contract/prayer-times.test.ts",
              "line": 269,
              "column": 7
            },
            {
              "title": "handles JAKIM API service unavailability",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ac3387c0989a82219337",
              "file": "contract/prayer-times.test.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "handles invalid masjid location configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-5f2e9c0953ab7023b297",
              "file": "contract/prayer-times.test.ts",
              "line": 254,
              "column": 7
            },
            {
              "title": "provides fallback for historical dates beyond API coverage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-6e5b3f92ca0a8853dd9c",
              "file": "contract/prayer-times.test.ts",
              "line": 269,
              "column": 7
            },
            {
              "title": "handles JAKIM API service unavailability",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-f9107ed0b7c4d61f889d",
              "file": "contract/prayer-times.test.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "handles invalid masjid location configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-ea08298c4db618cc2ff1",
              "file": "contract/prayer-times.test.ts",
              "line": 254,
              "column": 7
            },
            {
              "title": "provides fallback for historical dates beyond API coverage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "03431cd7d3fb616fbbf6-28f1ad44663b91ce4876",
              "file": "contract/prayer-times.test.ts",
              "line": 269,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "display-page.spec.ts",
      "file": "display-page.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "TV Display Page",
          "file": "display-page.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should load display page with real data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2018,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Display page body content length: \u001b[33m16780\u001b[39m\n"
                        },
                        {
                          "text": "Display page body preview: Offline ModeUsing cached content(self.__next_f=self.__next_f||[]).push([0])self.__next_f.push([1,\"5:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"SegmentViewNode\\\"]\\n7:\\\"$Sreact.fragment\\\"\\n21:I[\\\"(app-pages-browser)/../../node_m\n"
                        },
                        {
                          "text": "Display page title: E-Masjid TV Display\n"
                        },
                        {
                          "text": "Display page HTML length: \u001b[33m21010\u001b[39m\n"
                        },
                        {
                          "text": "Content carousel found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Prayer times found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Sponsorship found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Offline handler found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Display status found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Welcome text found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Prayer text found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Donation text found: \u001b[33m0\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.304Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "314b53b29f946d4ada56-bf20299aa90db495de70",
              "file": "display-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for API calls and network activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 6285,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Network requests made:\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/display/2f1146ed-2e0e-452c-94a0-f89aa3b371b5\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/_next/static/css/app/layout.css?v=1758447418840\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/_next/static/chunks/webpack.js?v=1758447418840\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/_next/static/chunks/main-app.js?v=1758447418840\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/_next/static/chunks/app-pages-internals.js\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/_next/static/chunks/app/display/%5Bid%5D/page.js\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/api/displays/2f1146ed-2e0e-452c-94a0-f89aa3b371b5/config\n"
                        },
                        {
                          "text": "  - GET http://localhost:3001/api/displays/2f1146ed-2e0e-452c-94a0-f89aa3b371b5/prayer-times\n"
                        },
                        {
                          "text": "API responses:\n"
                        },
                        {
                          "text": "  - http://localhost:3001/api/displays/2f1146ed-2e0e-452c-94a0-f89aa3b371b5/config (404): {\n  data: \u001b[1mnull\u001b[22m,\n  error: {\n    code: \u001b[32m'NOT_FOUND'\u001b[39m,\n    message: \u001b[32m'Display not found or inactive'\u001b[39m,\n    timestamp: \u001b[32m'2025-09-21T09:36:59.871Z'\u001b[39m\n  }\n}\n"
                        },
                        {
                          "text": "  - http://localhost:3001/api/displays/2f1146ed-2e0e-452c-94a0-f89aa3b371b5/prayer-times (404): {\n  data: \u001b[1mnull\u001b[22m,\n  error: {\n    code: \u001b[32m'NOT_FOUND'\u001b[39m,\n    message: \u001b[32m'Display not found or inactive'\u001b[39m,\n    timestamp: \u001b[32m'2025-09-21T09:36:59.910Z'\u001b[39m\n  }\n}\n"
                        },
                        {
                          "text": "Content API called: \u001b[33mfalse\u001b[39m\n"
                        },
                        {
                          "text": "Prayer API called: \u001b[33mfalse\u001b[39m\n"
                        },
                        {
                          "text": "Config API called: \u001b[33mfalse\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.291Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "314b53b29f946d4ada56-ff953a4d75e0c2bf1525",
              "file": "display-page.spec.ts",
              "line": 56,
              "column": 7
            },
            {
              "title": "should test with simple display ID \"1\"",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1942,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Simple ID page body content length: \u001b[33m16639\u001b[39m\n"
                        },
                        {
                          "text": "Simple ID page body preview: Offline ModeUsing cached content(self.__next_f=self.__next_f||[]).push([0])self.__next_f.push([1,\"5:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/next-de\n"
                        },
                        {
                          "text": "Error messages found: \u001b[33m0\u001b[39m\n"
                        },
                        {
                          "text": "Not found messages found: \u001b[33m0\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:36:58.454Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "314b53b29f946d4ada56-4e5956e5446d56b42003",
              "file": "display-page.spec.ts",
              "line": 105,
              "column": 7
            },
            {
              "title": "should load display page with real data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-333d80d04b15a0ae15b1",
              "file": "display-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for API calls and network activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-8d14e2a6a2fd1f9da5f6",
              "file": "display-page.spec.ts",
              "line": 56,
              "column": 7
            },
            {
              "title": "should test with simple display ID \"1\"",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-06f106446c6f210148f5",
              "file": "display-page.spec.ts",
              "line": 105,
              "column": 7
            },
            {
              "title": "should load display page with real data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-e6f813045ca8c2fe1bc7",
              "file": "display-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for API calls and network activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-a10486fa09f7da05ea9c",
              "file": "display-page.spec.ts",
              "line": 56,
              "column": 7
            },
            {
              "title": "should test with simple display ID \"1\"",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-c38ccd020a38b05a1c6a",
              "file": "display-page.spec.ts",
              "line": 105,
              "column": 7
            },
            {
              "title": "should load display page with real data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-d1a5c25cf200c9fc3f76",
              "file": "display-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for API calls and network activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-94866e2d28bbcf4fac67",
              "file": "display-page.spec.ts",
              "line": 56,
              "column": 7
            },
            {
              "title": "should test with simple display ID \"1\"",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-745bc812a841cf20117b",
              "file": "display-page.spec.ts",
              "line": 105,
              "column": 7
            },
            {
              "title": "should load display page with real data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-1cb19d91185e9af7624a",
              "file": "display-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for API calls and network activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-1453a72ea514452407a1",
              "file": "display-page.spec.ts",
              "line": 56,
              "column": 7
            },
            {
              "title": "should test with simple display ID \"1\"",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "314b53b29f946d4ada56-d0be8b1d8fe0efe57a99",
              "file": "display-page.spec.ts",
              "line": 105,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/display-flow.spec.ts",
      "file": "e2e/display-flow.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "TV Display Flow E2E Tests",
          "file": "e2e/display-flow.spec.ts",
          "line": 22,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Initial Loading Flow",
              "file": "e2e/display-flow.spec.ts",
              "line": 41,
              "column": 8,
              "specs": [
                {
                  "title": "should load display page and show loading state",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 3006,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ Display page loaded successfully\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:36:58.321Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-36dc03c8235a5882ad6f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "should initialize display components",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 10390,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:66:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 70,
                              "line": 66
                            },
                            "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m\n \u001b[90m 65 |\u001b[39m       \u001b[90m// Wait for main display components to be present\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 69 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 70,
                                "line": 66
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 64 |\u001b[39m\n \u001b[90m 65 |\u001b[39m       \u001b[90m// Wait for main display components to be present\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 69 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:66:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:01.786Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-dbd0c-itialize-display-components-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-dbd0c-itialize-display-components-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 70,
                            "line": 66
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-62723fd5274b86e850a7",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 61,
                  "column": 9
                },
                {
                  "title": "should establish API connections",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 15953,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"content-carousel\"]')\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived: <element(s) not found>\nTimeout: 15000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"content-carousel\"]')\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived: <element(s) not found>\nTimeout: 15000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:85:37",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 37,
                              "line": 85
                            },
                            "snippet": "\u001b[0m \u001b[90m 83 |\u001b[39m\n \u001b[90m 84 |\u001b[39m       \u001b[90m// Wait for content to be populated\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 85 |\u001b[39m       \u001b[36mawait\u001b[39m expect(contentCarousel)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m'data-loaded'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'true'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 86 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m'data-loaded'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'true'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 87 |\u001b[39m\n \u001b[90m 88 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ API connections established and data loaded'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 37,
                                "line": 85
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m failed\n\nLocator: locator('[data-testid=\"content-carousel\"]')\nExpected string: \u001b[32m\"true\"\u001b[39m\nReceived: <element(s) not found>\nTimeout: 15000ms\n\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 83 |\u001b[39m\n \u001b[90m 84 |\u001b[39m       \u001b[90m// Wait for content to be populated\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 85 |\u001b[39m       \u001b[36mawait\u001b[39m expect(contentCarousel)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m'data-loaded'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'true'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 86 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m'data-loaded'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'true'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 87 |\u001b[39m\n \u001b[90m 88 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ API connections established and data loaded'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:85:37\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:12.702Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-f9972-d-establish-API-connections-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-f9972-d-establish-API-connections-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 37,
                            "line": 85
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-cc18051fb115a0d7f8b3",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 73,
                  "column": 9
                },
                {
                  "title": "should load display page and show loading state",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-812d376566ed8150f972",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "should initialize display components",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-e1a9e6a9c51bc1fc7de4",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 61,
                  "column": 9
                },
                {
                  "title": "should establish API connections",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-051e969fd4a79ccdbd5f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 73,
                  "column": 9
                },
                {
                  "title": "should load display page and show loading state",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-b4396f098a39da4d1e20",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "should initialize display components",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-44595ccc2f9a8901db99",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 61,
                  "column": 9
                },
                {
                  "title": "should establish API connections",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f234bebe19003b9a8e0e",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 73,
                  "column": 9
                },
                {
                  "title": "should load display page and show loading state",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-1bc50b8998e3bc37bb41",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "should initialize display components",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f3c227fe97e83a748468",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 61,
                  "column": 9
                },
                {
                  "title": "should establish API connections",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-ebc84c57cb203b40ad84",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 73,
                  "column": 9
                },
                {
                  "title": "should load display page and show loading state",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-5c4f48a33c0b54419195",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 42,
                  "column": 9
                },
                {
                  "title": "should initialize display components",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-48b1d42a0c3ae9bbe526",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 61,
                  "column": 9
                },
                {
                  "title": "should establish API connections",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9bd54f5e31e30b164f77",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 73,
                  "column": 9
                }
              ]
            },
            {
              "title": "Content Cycling Flow",
              "file": "e2e/display-flow.spec.ts",
              "line": 92,
              "column": 8,
              "specs": [
                {
                  "title": "should cycle through content items automatically",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 49,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 10417,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:98:30",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 30,
                              "line": 98
                            },
                            "snippet": "\u001b[0m \u001b[90m  96 |\u001b[39m       \u001b[90m// Wait for content carousel to load\u001b[39m\n \u001b[90m  97 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  98 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  99 |\u001b[39m\n \u001b[90m 100 |\u001b[39m       \u001b[90m// Check if there are multiple content items\u001b[39m\n \u001b[90m 101 |\u001b[39m       \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid^=\"content-item-\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 30,
                                "line": 98
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m  96 |\u001b[39m       \u001b[90m// Wait for content carousel to load\u001b[39m\n \u001b[90m  97 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  98 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  99 |\u001b[39m\n \u001b[90m 100 |\u001b[39m       \u001b[90m// Check if there are multiple content items\u001b[39m\n \u001b[90m 101 |\u001b[39m       \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid^=\"content-item-\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:98:30\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:29.168Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-52aa8-content-items-automatically-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-52aa8-content-items-automatically-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 30,
                            "line": 98
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-3e0d16c2bd279654a081",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should display different content types correctly",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 30768,
                          "error": {
                            "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n",
                            "stack": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:125:18",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 18,
                              "line": 125
                            },
                            "snippet": "\u001b[0m \u001b[90m 123 |\u001b[39m\n \u001b[90m 124 |\u001b[39m       \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m\n \u001b[90m 127 |\u001b[39m       \u001b[90m// Check for different content types\u001b[39m\n \u001b[90m 128 |\u001b[39m       \u001b[36mconst\u001b[39m contentTypes \u001b[33m=\u001b[39m [\u001b[32m'image'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'youtube_video'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'text_announcement'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'event_poster'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 18,
                                "line": 125
                              },
                              "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 123 |\u001b[39m\n \u001b[90m 124 |\u001b[39m       \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m\n \u001b[90m 127 |\u001b[39m       \u001b[90m// Check for different content types\u001b[39m\n \u001b[90m 128 |\u001b[39m       \u001b[36mconst\u001b[39m contentTypes \u001b[33m=\u001b[39m [\u001b[32m'image'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'youtube_video'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'text_announcement'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'event_poster'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:125:18\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:36:58.880Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-4a095-ent-content-types-correctly-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-4a095-ent-content-types-correctly-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 18,
                            "line": 125
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-ad215033d210fb873b0d",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 121,
                  "column": 9
                },
                {
                  "title": "should handle smooth transitions between content",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 50,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 10412,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:164:30",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 30,
                              "line": 164
                            },
                            "snippet": "\u001b[0m \u001b[90m 162 |\u001b[39m\n \u001b[90m 163 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 164 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 165 |\u001b[39m\n \u001b[90m 166 |\u001b[39m       \u001b[90m// Check if transitions are smooth (no abrupt changes)\u001b[39m\n \u001b[90m 167 |\u001b[39m       \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid^=\"content-item-\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 30,
                                "line": 164
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 162 |\u001b[39m\n \u001b[90m 163 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 164 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 165 |\u001b[39m\n \u001b[90m 166 |\u001b[39m       \u001b[90m// Check if transitions are smooth (no abrupt changes)\u001b[39m\n \u001b[90m 167 |\u001b[39m       \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid^=\"content-item-\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:164:30\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:30.155Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6191d-transitions-between-content-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6191d-transitions-between-content-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 30,
                            "line": 164
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-450b3e95e069b88b891c",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 160,
                  "column": 9
                },
                {
                  "title": "should cycle through content items automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f0e16f74ea311873b032",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should display different content types correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-7701733d34a8547df277",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 121,
                  "column": 9
                },
                {
                  "title": "should handle smooth transitions between content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-78a689e159998e8874d5",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 160,
                  "column": 9
                },
                {
                  "title": "should cycle through content items automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-7d6eb1b2a0d711d1114f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should display different content types correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d849c45f1e7c6f4ea000",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 121,
                  "column": 9
                },
                {
                  "title": "should handle smooth transitions between content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9c203e903a10993df704",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 160,
                  "column": 9
                },
                {
                  "title": "should cycle through content items automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-10e5a6f54c7d6ee3e2bd",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should display different content types correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-1017646a809af7a5db45",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 121,
                  "column": 9
                },
                {
                  "title": "should handle smooth transitions between content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-85969b45aed30386f3d5",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 160,
                  "column": 9
                },
                {
                  "title": "should cycle through content items automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-c8254d402beb3d279771",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should display different content types correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-c1a568b66dccc7b5b994",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 121,
                  "column": 9
                },
                {
                  "title": "should handle smooth transitions between content",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-0a25b0eb5e5a7083a2ca",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 160,
                  "column": 9
                }
              ]
            },
            {
              "title": "Prayer Times Display",
              "file": "e2e/display-flow.spec.ts",
              "line": 187,
              "column": 8,
              "specs": [
                {
                  "title": "should display current prayer times",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 55,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 10406,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:192:35",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 35,
                              "line": 192
                            },
                            "snippet": "\u001b[0m \u001b[90m 190 |\u001b[39m\n \u001b[90m 191 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m       \u001b[90m// Check for prayer time elements\u001b[39m\n \u001b[90m 195 |\u001b[39m       \u001b[36mconst\u001b[39m prayerNames \u001b[33m=\u001b[39m [\u001b[32m'fajr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'sunrise'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'dhuhr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'asr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'maghrib'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'isha'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 35,
                                "line": 192
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 190 |\u001b[39m\n \u001b[90m 191 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m       \u001b[90m// Check for prayer time elements\u001b[39m\n \u001b[90m 195 |\u001b[39m       \u001b[36mconst\u001b[39m prayerNames \u001b[33m=\u001b[39m [\u001b[32m'fajr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'sunrise'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'dhuhr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'asr'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'maghrib'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'isha'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:192:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:41.027Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-be8b5-isplay-current-prayer-times-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-be8b5-isplay-current-prayer-times-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 35,
                            "line": 192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-b4f54b6a6c55642b9d6b",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 188,
                  "column": 9
                },
                {
                  "title": "should show next prayer countdown",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 60,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 10402,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:213:41",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 41,
                              "line": 213
                            },
                            "snippet": "\u001b[0m \u001b[90m 211 |\u001b[39m\n \u001b[90m 212 |\u001b[39m       \u001b[36mconst\u001b[39m nextPrayerCountdown \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"next-prayer-countdown\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m       \u001b[36mawait\u001b[39m expect(nextPrayerCountdown)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 214 |\u001b[39m\n \u001b[90m 215 |\u001b[39m       \u001b[90m// Check countdown format\u001b[39m\n \u001b[90m 216 |\u001b[39m       \u001b[36mconst\u001b[39m countdownText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m nextPrayerCountdown\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 41,
                                "line": 213
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 211 |\u001b[39m\n \u001b[90m 212 |\u001b[39m       \u001b[36mconst\u001b[39m nextPrayerCountdown \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"next-prayer-countdown\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 213 |\u001b[39m       \u001b[36mawait\u001b[39m expect(nextPrayerCountdown)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 214 |\u001b[39m\n \u001b[90m 215 |\u001b[39m       \u001b[90m// Check countdown format\u001b[39m\n \u001b[90m 216 |\u001b[39m       \u001b[36mconst\u001b[39m countdownText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m nextPrayerCountdown\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:213:41\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:51.879Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-f2b32--show-next-prayer-countdown-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-f2b32--show-next-prayer-countdown-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 41,
                            "line": 213
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-a34bc12ed661a20981a1",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "should update prayer times in real-time",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 42,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 10769,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:226:41",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 41,
                              "line": 226
                            },
                            "snippet": "\u001b[0m \u001b[90m 224 |\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mconst\u001b[39m nextPrayerCountdown \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"next-prayer-countdown\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m expect(nextPrayerCountdown)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 227 |\u001b[39m\n \u001b[90m 228 |\u001b[39m       \u001b[90m// Get initial countdown value\u001b[39m\n \u001b[90m 229 |\u001b[39m       \u001b[36mconst\u001b[39m initialCountdown \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m nextPrayerCountdown\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 41,
                                "line": 226
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"next-prayer-countdown\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"next-prayer-countdown\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 224 |\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mconst\u001b[39m nextPrayerCountdown \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"next-prayer-countdown\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m expect(nextPrayerCountdown)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 227 |\u001b[39m\n \u001b[90m 228 |\u001b[39m       \u001b[90m// Get initial countdown value\u001b[39m\n \u001b[90m 229 |\u001b[39m       \u001b[36mconst\u001b[39m initialCountdown \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m nextPrayerCountdown\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:226:41\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:36:58.882Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-358f0-e-prayer-times-in-real-time-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-358f0-e-prayer-times-in-real-time-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 41,
                            "line": 226
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f2b18236e3e19a0f70f8",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 222,
                  "column": 9
                },
                {
                  "title": "should handle prayer time position configuration",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 43,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 10490,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:245:35",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 35,
                              "line": 245
                            },
                            "snippet": "\u001b[0m \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 245 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 246 |\u001b[39m\n \u001b[90m 247 |\u001b[39m       \u001b[90m// Check if overlay has position classes\u001b[39m\n \u001b[90m 248 |\u001b[39m       \u001b[36mconst\u001b[39m overlayClasses \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prayerOverlay\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'class'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 35,
                                "line": 245
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"prayer-times-overlay\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 245 |\u001b[39m       \u001b[36mawait\u001b[39m expect(prayerOverlay)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 246 |\u001b[39m\n \u001b[90m 247 |\u001b[39m       \u001b[90m// Check if overlay has position classes\u001b[39m\n \u001b[90m 248 |\u001b[39m       \u001b[36mconst\u001b[39m overlayClasses \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prayerOverlay\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'class'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:245:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:10.208Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-39c3b-time-position-configuration-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-39c3b-time-position-configuration-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 35,
                            "line": 245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-3d1d4423a8928e55f5d2",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 241,
                  "column": 9
                },
                {
                  "title": "should display current prayer times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-e3bc24970906b12727e8",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 188,
                  "column": 9
                },
                {
                  "title": "should show next prayer countdown",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-510dd4bc1e3a10c5c360",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "should update prayer times in real-time",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d7671aa27b8b82070bfb",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 222,
                  "column": 9
                },
                {
                  "title": "should handle prayer time position configuration",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9ca2685c9a366699e143",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 241,
                  "column": 9
                },
                {
                  "title": "should display current prayer times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-561349bd0ec7243fd5ec",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 188,
                  "column": 9
                },
                {
                  "title": "should show next prayer countdown",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-bfc622abe14cfa97ae5d",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "should update prayer times in real-time",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-60fb35fe7b653eedf7be",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 222,
                  "column": 9
                },
                {
                  "title": "should handle prayer time position configuration",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-00ec986a804823d54c0e",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 241,
                  "column": 9
                },
                {
                  "title": "should display current prayer times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-a7606adfa2c61188fba0",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 188,
                  "column": 9
                },
                {
                  "title": "should show next prayer countdown",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-0aacb5352b675aa672c6",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "should update prayer times in real-time",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-215405d389989b69e127",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 222,
                  "column": 9
                },
                {
                  "title": "should handle prayer time position configuration",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-1853c78540f3a77a7d54",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 241,
                  "column": 9
                },
                {
                  "title": "should display current prayer times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-318424c42ca935b38407",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 188,
                  "column": 9
                },
                {
                  "title": "should show next prayer countdown",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f5ab0410819f6c21424d",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "should update prayer times in real-time",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d5f83a6a00568e34c684",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 222,
                  "column": 9
                },
                {
                  "title": "should handle prayer time position configuration",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-ea0e6ae3a4fc1caa8794",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 241,
                  "column": 9
                }
              ]
            },
            {
              "title": "Display Status and Monitoring",
              "file": "e2e/display-flow.spec.ts",
              "line": 257,
              "column": 8,
              "specs": [
                {
                  "title": "should show display status indicator",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 47,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 10464,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-status\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-status\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-status\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-status\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:262:37",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 37,
                              "line": 262
                            },
                            "snippet": "\u001b[0m \u001b[90m 260 |\u001b[39m\n \u001b[90m 261 |\u001b[39m       \u001b[36mconst\u001b[39m statusIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 262 |\u001b[39m       \u001b[36mawait\u001b[39m expect(statusIndicator)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 263 |\u001b[39m\n \u001b[90m 264 |\u001b[39m       \u001b[90m// Check status states\u001b[39m\n \u001b[90m 265 |\u001b[39m       \u001b[36mconst\u001b[39m possibleStates \u001b[33m=\u001b[39m [\u001b[32m'online'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'loading'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'error'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'offline'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 37,
                                "line": 262
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-status\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-status\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 260 |\u001b[39m\n \u001b[90m 261 |\u001b[39m       \u001b[36mconst\u001b[39m statusIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 262 |\u001b[39m       \u001b[36mawait\u001b[39m expect(statusIndicator)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 263 |\u001b[39m\n \u001b[90m 264 |\u001b[39m       \u001b[90m// Check status states\u001b[39m\n \u001b[90m 265 |\u001b[39m       \u001b[36mconst\u001b[39m possibleStates \u001b[33m=\u001b[39m [\u001b[32m'online'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'loading'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'error'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'offline'\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:262:37\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:21.246Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-16b6d-ow-display-status-indicator-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-16b6d-ow-display-status-indicator-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 37,
                            "line": 262
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d19c7dc8a231cd3ad90c",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "should handle network status changes",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 51,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 13428,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:282:38",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 38,
                              "line": 282
                            },
                            "snippet": "\u001b[0m \u001b[90m 280 |\u001b[39m       \n \u001b[90m 281 |\u001b[39m       \u001b[36mconst\u001b[39m offlineIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-indicator\"], [data-status=\"offline\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 282 |\u001b[39m       \u001b[36mawait\u001b[39m expect(offlineIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 283 |\u001b[39m\n \u001b[90m 284 |\u001b[39m       \u001b[90m// Restore online condition\u001b[39m\n \u001b[90m 285 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 38,
                                "line": 282
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"], [data-status=\"offline\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 280 |\u001b[39m       \n \u001b[90m 281 |\u001b[39m       \u001b[36mconst\u001b[39m offlineIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-indicator\"], [data-status=\"offline\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 282 |\u001b[39m       \u001b[36mawait\u001b[39m expect(offlineIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 283 |\u001b[39m\n \u001b[90m 284 |\u001b[39m       \u001b[90m// Restore online condition\u001b[39m\n \u001b[90m 285 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:282:38\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:32.160Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-474aa-ndle-network-status-changes-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-474aa-ndle-network-status-changes-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 38,
                            "line": 282
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-02c23ab568a8c610fa68",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 272,
                  "column": 9
                },
                {
                  "title": "should display last updated timestamp",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 358,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "ℹ Last updated timestamp not implemented\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:00.567Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-cf52f8cbb04e03dfd750",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 296,
                  "column": 9
                },
                {
                  "title": "should show display status indicator",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-0bde886aaec433ea7228",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "should handle network status changes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-64bed559d6e02c2adc0f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 272,
                  "column": 9
                },
                {
                  "title": "should display last updated timestamp",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-c7e581a41fb2e2286bf8",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 296,
                  "column": 9
                },
                {
                  "title": "should show display status indicator",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-4b3ef522448c490d394d",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "should handle network status changes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-e8e5c79d07ab803a7560",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 272,
                  "column": 9
                },
                {
                  "title": "should display last updated timestamp",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-a264f520292020b06208",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 296,
                  "column": 9
                },
                {
                  "title": "should show display status indicator",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-53442317395a41553f38",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "should handle network status changes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f1c82ed9e94cc1f0348a",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 272,
                  "column": 9
                },
                {
                  "title": "should display last updated timestamp",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-fc6dbd61d237fdce2e78",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 296,
                  "column": 9
                },
                {
                  "title": "should show display status indicator",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-8b3902c9e35f1f8125f9",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 258,
                  "column": 9
                },
                {
                  "title": "should handle network status changes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-3a32742ccb04f1b81f33",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 272,
                  "column": 9
                },
                {
                  "title": "should display last updated timestamp",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-5c1b768a38b174b51c4f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 296,
                  "column": 9
                }
              ]
            },
            {
              "title": "Performance and Responsiveness",
              "file": "e2e/display-flow.spec.ts",
              "line": 315,
              "column": 8,
              "specs": [
                {
                  "title": "should load within acceptable time limits",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 10464,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:322:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 70,
                              "line": 322
                            },
                            "snippet": "\u001b[0m \u001b[90m 320 |\u001b[39m       \n \u001b[90m 321 |\u001b[39m       \u001b[90m// Wait for main content to be visible\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 322 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 323 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 324 |\u001b[39m       \n \u001b[90m 325 |\u001b[39m       \u001b[36mconst\u001b[39m loadTime \u001b[33m=\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow() \u001b[33m-\u001b[39m startTime\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 70,
                                "line": 322
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 320 |\u001b[39m       \n \u001b[90m 321 |\u001b[39m       \u001b[90m// Wait for main content to be visible\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 322 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 323 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 324 |\u001b[39m       \n \u001b[90m 325 |\u001b[39m       \u001b[36mconst\u001b[39m loadTime \u001b[33m=\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow() \u001b[33m-\u001b[39m startTime\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:322:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:00.965Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-8d11f-thin-acceptable-time-limits-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-8d11f-thin-acceptable-time-limits-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 70,
                            "line": 322
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d45ea77d66d55be2f3ce",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "should maintain 60fps during transitions",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 44,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 30451,
                          "error": {
                            "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n",
                            "stack": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:336:18",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 18,
                              "line": 336
                            },
                            "snippet": "\u001b[0m \u001b[90m 334 |\u001b[39m\n \u001b[90m 335 |\u001b[39m       \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 336 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 337 |\u001b[39m\n \u001b[90m 338 |\u001b[39m       \u001b[90m// Monitor frame rate during transition\u001b[39m\n \u001b[90m 339 |\u001b[39m       \u001b[36mconst\u001b[39m performanceEntries \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mevaluate(() \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 18,
                                "line": 336
                              },
                              "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 334 |\u001b[39m\n \u001b[90m 335 |\u001b[39m       \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 336 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 337 |\u001b[39m\n \u001b[90m 338 |\u001b[39m       \u001b[90m// Monitor frame rate during transition\u001b[39m\n \u001b[90m 339 |\u001b[39m       \u001b[36mconst\u001b[39m performanceEntries \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mevaluate(() \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:336:18\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:11.817Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-7917f-in-60fps-during-transitions-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-7917f-in-60fps-during-transitions-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 18,
                            "line": 336
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-325590337f32e602fde7",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 332,
                  "column": 9
                },
                {
                  "title": "should handle memory usage efficiently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 56,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 30319,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ Memory usage: 64000000 → 64000000 (+0.0%)\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:42.750Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-942cc6f75a09a77573e3",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 361,
                  "column": 9
                },
                {
                  "title": "should load within acceptable time limits",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-711ac13e37da11edb381",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "should maintain 60fps during transitions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-b0cc19e170ec8388fa13",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 332,
                  "column": 9
                },
                {
                  "title": "should handle memory usage efficiently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-b1db93df5f65db63e703",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 361,
                  "column": 9
                },
                {
                  "title": "should load within acceptable time limits",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-343505af6ca7dd956338",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "should maintain 60fps during transitions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-bf334e93c6052c566079",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 332,
                  "column": 9
                },
                {
                  "title": "should handle memory usage efficiently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-21144f6e499abcc33c78",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 361,
                  "column": 9
                },
                {
                  "title": "should load within acceptable time limits",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-61c3b2bdac19e6f608b1",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "should maintain 60fps during transitions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-017b12ac36184b512452",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 332,
                  "column": 9
                },
                {
                  "title": "should handle memory usage efficiently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-dd18857395ae33b8ba62",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 361,
                  "column": 9
                },
                {
                  "title": "should load within acceptable time limits",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-0d82629e333c3b5a4931",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "should maintain 60fps during transitions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-7f2d4345be7038b35c8c",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 332,
                  "column": 9
                },
                {
                  "title": "should handle memory usage efficiently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-5c2a1edadc7e2d0365cc",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 361,
                  "column": 9
                }
              ]
            },
            {
              "title": "Accessibility and TV Display Optimization",
              "file": "e2e/display-flow.spec.ts",
              "line": 390,
              "column": 8,
              "specs": [
                {
                  "title": "should have appropriate contrast ratios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 379,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ Text styling appropriate for TV: 24px font\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:00.568Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9ada99f8c145d80a903e",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 391,
                  "column": 9
                },
                {
                  "title": "should support keyboard navigation for accessibility",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 399,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "ℹ No interactive elements found (expected for TV display)\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:00.988Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-4bb64288e07dbe5999d0",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 415,
                  "column": 9
                },
                {
                  "title": "should use TV-appropriate fonts and sizing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 293,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:01.398Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-c6c2d0decd656585149b",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "should have appropriate contrast ratios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-3861e05ffa9edd88fea0",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 391,
                  "column": 9
                },
                {
                  "title": "should support keyboard navigation for accessibility",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d7135484de0be17b3c62",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 415,
                  "column": 9
                },
                {
                  "title": "should use TV-appropriate fonts and sizing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-b2e164a13bfd9b1bae5a",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "should have appropriate contrast ratios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-8ceb4f9000bbb3c78976",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 391,
                  "column": 9
                },
                {
                  "title": "should support keyboard navigation for accessibility",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9d3980758aa99d850b92",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 415,
                  "column": 9
                },
                {
                  "title": "should use TV-appropriate fonts and sizing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-4b9a5db91a9f5c1d98da",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "should have appropriate contrast ratios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d1c2b040c471a510ace9",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 391,
                  "column": 9
                },
                {
                  "title": "should support keyboard navigation for accessibility",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-76a859382b1dca89dd2f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 415,
                  "column": 9
                },
                {
                  "title": "should use TV-appropriate fonts and sizing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-28e8f06384a6acff878e",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "should have appropriate contrast ratios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-7531d69d741765157922",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 391,
                  "column": 9
                },
                {
                  "title": "should support keyboard navigation for accessibility",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-bb2d1909a297aea113ee",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 415,
                  "column": 9
                },
                {
                  "title": "should use TV-appropriate fonts and sizing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-a03aa17ee65032d21e50",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 434,
                  "column": 9
                }
              ]
            },
            {
              "title": "Error Recovery and Resilience",
              "file": "e2e/display-flow.spec.ts",
              "line": 453,
              "column": 8,
              "specs": [
                {
                  "title": "should gracefully handle API failures",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 15400,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:464:36",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 36,
                              "line": 464
                            },
                            "snippet": "\u001b[0m \u001b[90m 462 |\u001b[39m       \u001b[90m// Should show error state or fallback content\u001b[39m\n \u001b[90m 463 |\u001b[39m       \u001b[36mconst\u001b[39m errorIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 465 |\u001b[39m\n \u001b[90m 466 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ API failure handled gracefully'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 467 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 36,
                                "line": 464
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 462 |\u001b[39m       \u001b[90m// Should show error state or fallback content\u001b[39m\n \u001b[90m 463 |\u001b[39m       \u001b[36mconst\u001b[39m errorIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"fallback-content\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 465 |\u001b[39m\n \u001b[90m 466 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ API failure handled gracefully'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 467 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:464:36\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:01.697Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6ae19-cefully-handle-API-failures-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6ae19-cefully-handle-API-failures-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 36,
                            "line": 464
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-83f5160d05c64b7fe9bb",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 454,
                  "column": 9
                },
                {
                  "title": "should retry failed requests automatically",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 20406,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:485:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 70,
                              "line": 485
                            },
                            "snippet": "\u001b[0m \u001b[90m 483 |\u001b[39m\n \u001b[90m 484 |\u001b[39m       \u001b[90m// Should eventually succeed after retries\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 485 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 486 |\u001b[39m       \n \u001b[90m 487 |\u001b[39m       expect(requestCount)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 488 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Request retried ${requestCount} times before success`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 70,
                                "line": 485
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 483 |\u001b[39m\n \u001b[90m 484 |\u001b[39m       \u001b[90m// Should eventually succeed after retries\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 485 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 486 |\u001b[39m       \n \u001b[90m 487 |\u001b[39m       expect(requestCount)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 488 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Request retried ${requestCount} times before success`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:485:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:04.834Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-04899-iled-requests-automatically-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-04899-iled-requests-automatically-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 70,
                            "line": 485
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-82dc39e6cafebe3a13d9",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 469,
                  "column": 9
                },
                {
                  "title": "should maintain functionality during intermittent connectivity",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 10405,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:495:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 70,
                              "line": 495
                            },
                            "snippet": "\u001b[0m \u001b[90m 493 |\u001b[39m\n \u001b[90m 494 |\u001b[39m       \u001b[90m// Wait for initial load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 495 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 496 |\u001b[39m\n \u001b[90m 497 |\u001b[39m       \u001b[90m// Simulate intermittent connectivity\u001b[39m\n \u001b[90m 498 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 70,
                                "line": 495
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 493 |\u001b[39m\n \u001b[90m 494 |\u001b[39m       \u001b[90m// Wait for initial load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 495 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 496 |\u001b[39m\n \u001b[90m 497 |\u001b[39m       \u001b[90m// Simulate intermittent connectivity\u001b[39m\n \u001b[90m 498 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:495:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:25.626Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6a74e-g-intermittent-connectivity-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-6a74e-g-intermittent-connectivity-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 70,
                            "line": 495
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-007b84c50a52d0da4b96",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 491,
                  "column": 9
                },
                {
                  "title": "should gracefully handle API failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-df25eed44a8ac8dd198e",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 454,
                  "column": 9
                },
                {
                  "title": "should retry failed requests automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-35421bb9ddae225a0ee1",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 469,
                  "column": 9
                },
                {
                  "title": "should maintain functionality during intermittent connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-8d402f57d3f52b387edc",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 491,
                  "column": 9
                },
                {
                  "title": "should gracefully handle API failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-699c90f5dd83755e7b91",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 454,
                  "column": 9
                },
                {
                  "title": "should retry failed requests automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-3419da906dd9280ec213",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 469,
                  "column": 9
                },
                {
                  "title": "should maintain functionality during intermittent connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-a71eb72d9c5180c86c9f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 491,
                  "column": 9
                },
                {
                  "title": "should gracefully handle API failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-0d4f36426534d2020027",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 454,
                  "column": 9
                },
                {
                  "title": "should retry failed requests automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-168ad986eaca0fe9144f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 469,
                  "column": 9
                },
                {
                  "title": "should maintain functionality during intermittent connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-94372e423a63504ff893",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 491,
                  "column": 9
                },
                {
                  "title": "should gracefully handle API failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-eb84775bd94254090b6f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 454,
                  "column": 9
                },
                {
                  "title": "should retry failed requests automatically",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-9ee1a40f49c99695b050",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 469,
                  "column": 9
                },
                {
                  "title": "should maintain functionality during intermittent connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-d782aec2d714a39fb784",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 491,
                  "column": 9
                }
              ]
            },
            {
              "title": "Full User Journey",
              "file": "e2e/display-flow.spec.ts",
              "line": 513,
              "column": 8,
              "specs": [
                {
                  "title": "should complete a full display cycle from start to finish",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 53,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 10471,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:522:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                              "column": 70,
                              "line": 522
                            },
                            "snippet": "\u001b[0m \u001b[90m 520 |\u001b[39m\n \u001b[90m 521 |\u001b[39m       \u001b[90m// 2. Wait for all components to initialize\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 522 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 523 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 524 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'2. ✓ All components initialized'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                                "column": 70,
                                "line": 522
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 520 |\u001b[39m\n \u001b[90m 521 |\u001b[39m       \u001b[90m// 2. Wait for all components to initialize\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 522 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 523 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 524 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-status\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'2. ✓ All components initialized'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts:522:70\u001b[22m"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "1. ✓ Page loaded\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:36.489Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-42e3f--cycle-from-start-to-finish-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-display-flow-TV-Displa-42e3f--cycle-from-start-to-finish-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/display-flow.spec.ts",
                            "column": 70,
                            "line": 522
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-dfc089461314143b984b",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 514,
                  "column": 9
                },
                {
                  "title": "should complete a full display cycle from start to finish",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-f641531ecc6e64d307a5",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 514,
                  "column": 9
                },
                {
                  "title": "should complete a full display cycle from start to finish",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-52117a402d311087a92f",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 514,
                  "column": 9
                },
                {
                  "title": "should complete a full display cycle from start to finish",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-79c18bdfa10f99b00f74",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 514,
                  "column": 9
                },
                {
                  "title": "should complete a full display cycle from start to finish",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "45654bcbef09ffe3b3af-23f0114acd859a28ea3b",
                  "file": "e2e/display-flow.spec.ts",
                  "line": 514,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/error-handling.spec.ts",
      "file": "e2e/error-handling.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "TV Display Error Handling E2E Tests",
          "file": "e2e/error-handling.spec.ts",
          "line": 22,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Network Failure Scenarios",
              "file": "e2e/error-handling.spec.ts",
              "line": 44,
              "column": 8,
              "specs": [
                {
                  "title": "should handle complete API server unavailability",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 46,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 15381,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:55:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 55
                            },
                            "snippet": "\u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[90m// Should show error state or fallback content\u001b[39m\n \u001b[90m 54 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 56 |\u001b[39m\n \u001b[90m 57 |\u001b[39m       \u001b[90m// Should show appropriate error message in Bahasa Malaysia\u001b[39m\n \u001b[90m 58 |\u001b[39m       \u001b[36mconst\u001b[39m errorText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m errorState\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 55
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message')\u001b[22m\n\n\n\u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[90m// Should show error state or fallback content\u001b[39m\n \u001b[90m 54 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"api-error\"], .error-message'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 56 |\u001b[39m\n \u001b[90m 57 |\u001b[39m       \u001b[90m// Should show appropriate error message in Bahasa Malaysia\u001b[39m\n \u001b[90m 58 |\u001b[39m       \u001b[36mconst\u001b[39m errorText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m errorState\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:55:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:17.418Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-0a632-e-API-server-unavailability-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-0a632-e-API-server-unavailability-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 55
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-cbe8d5454184820f5810",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should handle intermittent network connectivity",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 52,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 20451,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:81:36",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 36,
                              "line": 81
                            },
                            "snippet": "\u001b[0m \u001b[90m 79 |\u001b[39m       \u001b[90m// Should eventually load some content despite intermittent failures\u001b[39m\n \u001b[90m 80 |\u001b[39m       \u001b[36mconst\u001b[39m contentOrError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 81 |\u001b[39m       \u001b[36mawait\u001b[39m expect(contentOrError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 82 |\u001b[39m\n \u001b[90m 83 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Intermittent connectivity handled (${requestCount} requests attempted)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 84 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 36,
                                "line": 81
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 79 |\u001b[39m       \u001b[90m// Should eventually load some content despite intermittent failures\u001b[39m\n \u001b[90m 80 |\u001b[39m       \u001b[36mconst\u001b[39m contentOrError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 81 |\u001b[39m       \u001b[36mawait\u001b[39m expect(contentOrError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 82 |\u001b[39m\n \u001b[90m 83 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Intermittent connectivity handled (${requestCount} requests attempted)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 84 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:81:36\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:33.263Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-5e509-ittent-network-connectivity-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-5e509-ittent-network-connectivity-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 36,
                            "line": 81
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-0edaca53472402303af3",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 64,
                  "column": 9
                },
                {
                  "title": "should handle slow API responses and timeouts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 61,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 30419,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  30000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 30000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  30000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 30000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:106:36",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 36,
                              "line": 106
                            },
                            "snippet": "\u001b[0m \u001b[90m 104 |\u001b[39m       \u001b[90m// Should eventually timeout and show error or fallback\u001b[39m\n \u001b[90m 105 |\u001b[39m       \u001b[36mconst\u001b[39m errorOrContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 106 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorOrContent)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 107 |\u001b[39m\n \u001b[90m 108 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Slow API responses handled with timeout mechanism'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 109 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 36,
                                "line": 106
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  30000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 30000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 104 |\u001b[39m       \u001b[90m// Should eventually timeout and show error or fallback\u001b[39m\n \u001b[90m 105 |\u001b[39m       \u001b[36mconst\u001b[39m errorOrContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 106 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorOrContent)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 107 |\u001b[39m\n \u001b[90m 108 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Slow API responses handled with timeout mechanism'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 109 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:106:36\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:54.170Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-e1d89--API-responses-and-timeouts-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-e1d89--API-responses-and-timeouts-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 36,
                            "line": 106
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f9c2f38ab0351b849099",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should gracefully handle DNS resolution failures",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 70,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 15628,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:124:30",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 30,
                              "line": 124
                            },
                            "snippet": "\u001b[0m \u001b[90m 122 |\u001b[39m       \u001b[90m// If specific network error not found, check for general error state\u001b[39m\n \u001b[90m 123 |\u001b[39m       \u001b[36mconst\u001b[39m anyError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m       \u001b[36mawait\u001b[39m expect(anyError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m\n \u001b[90m 126 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ DNS resolution failure handled gracefully'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 30,
                                "line": 124
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 122 |\u001b[39m       \u001b[90m// If specific network error not found, check for general error state\u001b[39m\n \u001b[90m 123 |\u001b[39m       \u001b[36mconst\u001b[39m anyError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], .error-message, [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m       \u001b[36mawait\u001b[39m expect(anyError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m\n \u001b[90m 126 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ DNS resolution failure handled gracefully'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:124:30\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:25.048Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-e980a-dle-DNS-resolution-failures-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-e980a-dle-DNS-resolution-failures-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 30,
                            "line": 124
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-5bc88973d3abe6b0258e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should handle mixed API endpoint failures",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 54,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 15422,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:150:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 150
                            },
                            "snippet": "\u001b[0m \u001b[90m 148 |\u001b[39m       \u001b[90m// Or show general error state\u001b[39m\n \u001b[90m 149 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Mixed API endpoint failures handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 153 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 150
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 148 |\u001b[39m       \u001b[90m// Or show general error state\u001b[39m\n \u001b[90m 149 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Mixed API endpoint failures handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 153 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:150:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:40.063Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-a765c-mixed-API-endpoint-failures-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-a765c-mixed-API-endpoint-failures-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-1eb253f6c7676e048e36",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 129,
                  "column": 9
                },
                {
                  "title": "should handle complete API server unavailability",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-807b9ccb26d3de883640",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should handle intermittent network connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-b9e520edde2033646b69",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 64,
                  "column": 9
                },
                {
                  "title": "should handle slow API responses and timeouts",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-63690a3a65f56fc3d780",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should gracefully handle DNS resolution failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-6c977dcca7be964039da",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should handle mixed API endpoint failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-63986ed9f6abf4f1ef63",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 129,
                  "column": 9
                },
                {
                  "title": "should handle complete API server unavailability",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-1e7c649cc0deda4fe31e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should handle intermittent network connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8c43150c4317239df608",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 64,
                  "column": 9
                },
                {
                  "title": "should handle slow API responses and timeouts",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f5f89a634482b04669b0",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should gracefully handle DNS resolution failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-44c4371c093014bd92b6",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should handle mixed API endpoint failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-38c303c60395494c2d4d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 129,
                  "column": 9
                },
                {
                  "title": "should handle complete API server unavailability",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-b4016e782372bea6c29d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should handle intermittent network connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-13df446bb7d2cdee42cf",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 64,
                  "column": 9
                },
                {
                  "title": "should handle slow API responses and timeouts",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-845778977ffaa247e837",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should gracefully handle DNS resolution failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-6bc06c2af1f385e2d83c",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should handle mixed API endpoint failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-442295992336f41d3483",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 129,
                  "column": 9
                },
                {
                  "title": "should handle complete API server unavailability",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-494c699cfe9218e9bd59",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should handle intermittent network connectivity",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-e925cd0aebea70ad0244",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 64,
                  "column": 9
                },
                {
                  "title": "should handle slow API responses and timeouts",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-7945d46541ec048178f4",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should gracefully handle DNS resolution failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-9a8fe18a3dfccc35422f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should handle mixed API endpoint failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-dd41e3ef2b1c4099146a",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 129,
                  "column": 9
                }
              ]
            },
            {
              "title": "Data Corruption and Invalid Response Scenarios",
              "file": "e2e/error-handling.spec.ts",
              "line": 156,
              "column": 8,
              "specs": [
                {
                  "title": "should handle malformed JSON responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 62,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 15419,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:173:30",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 30,
                              "line": 173
                            },
                            "snippet": "\u001b[0m \u001b[90m 171 |\u001b[39m       \n \u001b[90m 172 |\u001b[39m       \u001b[36mconst\u001b[39m anyError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], .error-message'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 173 |\u001b[39m       \u001b[36mawait\u001b[39m expect(anyError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 174 |\u001b[39m\n \u001b[90m 175 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Malformed JSON responses handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 176 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 30,
                                "line": 173
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], .error-message')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], .error-message')\u001b[22m\n\n\n\u001b[0m \u001b[90m 171 |\u001b[39m       \n \u001b[90m 172 |\u001b[39m       \u001b[36mconst\u001b[39m anyError \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], .error-message'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 173 |\u001b[39m       \u001b[36mawait\u001b[39m expect(anyError)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 174 |\u001b[39m\n \u001b[90m 175 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Malformed JSON responses handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 176 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:173:30\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:55.987Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-256ec-le-malformed-JSON-responses-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-256ec-le-malformed-JSON-responses-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 30,
                            "line": 173
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-114ed308c747ac1ad337",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 157,
                  "column": 9
                },
                {
                  "title": "should handle missing required fields in API responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 67,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 15374,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:214:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 214
                            },
                            "snippet": "\u001b[0m \u001b[90m 212 |\u001b[39m       \n \u001b[90m 213 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 214 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 215 |\u001b[39m\n \u001b[90m 216 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Missing required fields handled with validation errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 217 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 214
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 212 |\u001b[39m       \n \u001b[90m 213 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 214 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 215 |\u001b[39m\n \u001b[90m 216 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Missing required fields handled with validation errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 217 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:214:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:11.858Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-bd620-red-fields-in-API-responses-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-bd620-red-fields-in-API-responses-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 214
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8a5182354b429661b469",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "should handle corrupted image and video URLs",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 71,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 15404,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:273:30",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 30,
                              "line": 273
                            },
                            "snippet": "\u001b[0m \u001b[90m 271 |\u001b[39m       \u001b[90m// Should show placeholder or skip broken content\u001b[39m\n \u001b[90m 272 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 273 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 274 |\u001b[39m\n \u001b[90m 275 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Corrupted media URLs handled (${mediaErrorCount} media errors detected)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 276 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 30,
                                "line": 273
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 271 |\u001b[39m       \u001b[90m// Should show placeholder or skip broken content\u001b[39m\n \u001b[90m 272 |\u001b[39m       \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 273 |\u001b[39m       \u001b[36mawait\u001b[39m expect(carousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 274 |\u001b[39m\n \u001b[90m 275 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Corrupted media URLs handled (${mediaErrorCount} media errors detected)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 276 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:273:30\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:27.704Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-b894f-rupted-image-and-video-URLs-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-b894f-rupted-image-and-video-URLs-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 30,
                            "line": 273
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f730533daccd58a94e1b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle invalid prayer times data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 57,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 452,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:318:34",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 34,
                              "line": 318
                            },
                            "snippet": "\u001b[0m \u001b[90m 316 |\u001b[39m       ])\u001b[33m;\u001b[39m\n \u001b[90m 317 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 318 |\u001b[39m       expect(prayerStateVisible)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 319 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Invalid prayer times data handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 321 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 34,
                                "line": 318
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 316 |\u001b[39m       ])\u001b[33m;\u001b[39m\n \u001b[90m 317 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 318 |\u001b[39m       expect(prayerStateVisible)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 319 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Invalid prayer times data handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 321 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:318:34\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:46.042Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-7d139-e-invalid-prayer-times-data-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-7d139-e-invalid-prayer-times-data-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 34,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-74225838590fdd246c2e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "should handle inconsistent data types in responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 58,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 15390,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:356:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 356
                            },
                            "snippet": "\u001b[0m \u001b[90m 354 |\u001b[39m       \n \u001b[90m 355 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 356 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 357 |\u001b[39m\n \u001b[90m 358 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Inconsistent data types handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 359 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 356
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 354 |\u001b[39m       \n \u001b[90m 355 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 356 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 357 |\u001b[39m\n \u001b[90m 358 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Inconsistent data types handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 359 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:356:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:46.946Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-dab93-ent-data-types-in-responses-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-dab93-ent-data-types-in-responses-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 356
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-ccd102ba10de3c6b8e43",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "should handle malformed JSON responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-d2b7cc1004e9c1929793",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 157,
                  "column": 9
                },
                {
                  "title": "should handle missing required fields in API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a5209610bd616179e14b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "should handle corrupted image and video URLs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-cfdaeea02953eceec232",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle invalid prayer times data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-2c64331410110a14b163",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "should handle inconsistent data types in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-9aafc1f4c0b5e26e1966",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "should handle malformed JSON responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-706b0cec61bfd65c47eb",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 157,
                  "column": 9
                },
                {
                  "title": "should handle missing required fields in API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a3fd8cf987b54c894770",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "should handle corrupted image and video URLs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-196705ff5a9f101f7d90",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle invalid prayer times data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-b7281f84d46ee846752b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "should handle inconsistent data types in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-0fd6dc7ea26666e40d1d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "should handle malformed JSON responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8a00770ef0001c98e0b6",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 157,
                  "column": 9
                },
                {
                  "title": "should handle missing required fields in API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-95d8bcf5ca6f3677befc",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "should handle corrupted image and video URLs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-cb54bc25dcf90a31530e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle invalid prayer times data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a56ed31092adc32590f0",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "should handle inconsistent data types in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-1fc6c36b1a1287289e58",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "should handle malformed JSON responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-21bafc4cd3f98024489f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 157,
                  "column": 9
                },
                {
                  "title": "should handle missing required fields in API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-e68a19c966557611eacc",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "should handle corrupted image and video URLs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f8c73f95094e231d19ab",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "should handle invalid prayer times data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-77ee688922f365890afd",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "should handle inconsistent data types in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-1b5e8fd2aa57e092ea2f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 322,
                  "column": 9
                }
              ]
            },
            {
              "title": "Recovery and Resilience Mechanisms",
              "file": "e2e/error-handling.spec.ts",
              "line": 362,
              "column": 8,
              "specs": [
                {
                  "title": "should implement exponential backoff for retries",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 64,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 25432,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:385:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 385
                            },
                            "snippet": "\u001b[0m \u001b[90m 383 |\u001b[39m       \u001b[90m// Should eventually succeed or show final error\u001b[39m\n \u001b[90m 384 |\u001b[39m       \u001b[36mconst\u001b[39m finalState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 385 |\u001b[39m       \u001b[36mawait\u001b[39m expect(finalState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 386 |\u001b[39m\n \u001b[90m 387 |\u001b[39m       \u001b[90m// Verify exponential backoff pattern\u001b[39m\n \u001b[90m 388 |\u001b[39m       \u001b[36mif\u001b[39m (attemptTimes\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m2\u001b[39m) {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 385
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 383 |\u001b[39m       \u001b[90m// Should eventually succeed or show final error\u001b[39m\n \u001b[90m 384 |\u001b[39m       \u001b[36mconst\u001b[39m finalState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"], [data-testid=\"error-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 385 |\u001b[39m       \u001b[36mawait\u001b[39m expect(finalState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 386 |\u001b[39m\n \u001b[90m 387 |\u001b[39m       \u001b[90m// Verify exponential backoff pattern\u001b[39m\n \u001b[90m 388 |\u001b[39m       \u001b[36mif\u001b[39m (attemptTimes\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m2\u001b[39m) {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:385:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:02.810Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-40cac-nential-backoff-for-retries-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-40cac-nential-backoff-for-retries-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 385
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-bbe247767532f4adeaa6",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 363,
                  "column": 9
                },
                {
                  "title": "should maintain display state during temporary failures",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 72,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 15390,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:405:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 70,
                              "line": 405
                            },
                            "snippet": "\u001b[0m \u001b[90m 403 |\u001b[39m       \n \u001b[90m 404 |\u001b[39m       \u001b[90m// Wait for initial load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 405 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 406 |\u001b[39m\n \u001b[90m 407 |\u001b[39m       \u001b[90m// Capture initial state\u001b[39m\n \u001b[90m 408 |\u001b[39m       \u001b[36mconst\u001b[39m initialContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m.\u001b[39minnerHTML()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 70,
                                "line": 405
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 403 |\u001b[39m       \n \u001b[90m 404 |\u001b[39m       \u001b[90m// Wait for initial load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 405 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 406 |\u001b[39m\n \u001b[90m 407 |\u001b[39m       \u001b[90m// Capture initial state\u001b[39m\n \u001b[90m 408 |\u001b[39m       \u001b[36mconst\u001b[39m initialContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m.\u001b[39minnerHTML()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:405:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:28.734Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-26cc9-e-during-temporary-failures-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-26cc9-e-during-temporary-failures-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 70,
                            "line": 405
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-06ed5e2c80ef3d1c7115",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 400,
                  "column": 9
                },
                {
                  "title": "should gracefully degrade functionality with partial service failures",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 59,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 15419,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:460:70",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 70,
                              "line": 460
                            },
                            "snippet": "\u001b[0m \u001b[90m 458 |\u001b[39m\n \u001b[90m 459 |\u001b[39m       \u001b[90m// Content should still work\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 460 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m       \u001b[90m// Prayer times should show error or be hidden\u001b[39m\n \u001b[90m 463 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 70,
                                "line": 460
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 458 |\u001b[39m\n \u001b[90m 459 |\u001b[39m       \u001b[90m// Content should still work\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 460 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m       \u001b[90m// Prayer times should show error or be hidden\u001b[39m\n \u001b[90m 463 |\u001b[39m       \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:460:70\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:37:47.455Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-7783d-th-partial-service-failures-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-7783d-th-partial-service-failures-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 70,
                            "line": 460
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-80f4d40150184b13897d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should recover automatically when services come back online",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 65,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 15470,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:491:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 491
                            },
                            "snippet": "\u001b[0m \u001b[90m 489 |\u001b[39m       \u001b[90m// Should show error state initially\u001b[39m\n \u001b[90m 490 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 491 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 492 |\u001b[39m\n \u001b[90m 493 |\u001b[39m       \u001b[90m// Simulate service recovery\u001b[39m\n \u001b[90m 494 |\u001b[39m       serviceDown \u001b[33m=\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 491
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 489 |\u001b[39m       \u001b[90m// Should show error state initially\u001b[39m\n \u001b[90m 490 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 491 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 492 |\u001b[39m\n \u001b[90m 493 |\u001b[39m       \u001b[90m// Simulate service recovery\u001b[39m\n \u001b[90m 494 |\u001b[39m       serviceDown \u001b[33m=\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:491:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:03.416Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-38f19-n-services-come-back-online-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-38f19-n-services-come-back-online-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 491
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-d51c79c4b03fa8695fe2",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 475,
                  "column": 9
                },
                {
                  "title": "should implement exponential backoff for retries",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-94c2c595caef37bb8b21",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 363,
                  "column": 9
                },
                {
                  "title": "should maintain display state during temporary failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-2285cddbbadbe52848c5",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 400,
                  "column": 9
                },
                {
                  "title": "should gracefully degrade functionality with partial service failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-88349350fe6f062b819a",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should recover automatically when services come back online",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-b033df6567e659cada2c",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 475,
                  "column": 9
                },
                {
                  "title": "should implement exponential backoff for retries",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-e8af1677c1a6b1f7d6f7",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 363,
                  "column": 9
                },
                {
                  "title": "should maintain display state during temporary failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a0e0467c029d05cd9d04",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 400,
                  "column": 9
                },
                {
                  "title": "should gracefully degrade functionality with partial service failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-7fd11614f4c71c2a5464",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should recover automatically when services come back online",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-6cf7a5babc52072a00f9",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 475,
                  "column": 9
                },
                {
                  "title": "should implement exponential backoff for retries",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-007d599178ef8d1d1145",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 363,
                  "column": 9
                },
                {
                  "title": "should maintain display state during temporary failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8b9eb2adbc67cf432d1b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 400,
                  "column": 9
                },
                {
                  "title": "should gracefully degrade functionality with partial service failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-9128162e7e339bc6dfdf",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should recover automatically when services come back online",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-9061fbb4c719212f5aff",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 475,
                  "column": 9
                },
                {
                  "title": "should implement exponential backoff for retries",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-6cc8e0e5f9d4c95245ab",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 363,
                  "column": 9
                },
                {
                  "title": "should maintain display state during temporary failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-46fbc46cfafba0241c62",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 400,
                  "column": 9
                },
                {
                  "title": "should gracefully degrade functionality with partial service failures",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-78bd9f127dcfcc0c59b8",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should recover automatically when services come back online",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-7a09bb6330c6ebfd026b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 475,
                  "column": 9
                }
              ]
            },
            {
              "title": "User Experience During Errors",
              "file": "e2e/error-handling.spec.ts",
              "line": 510,
              "column": 8,
              "specs": [
                {
                  "title": "should display user-friendly error messages in Bahasa Malaysia",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 1027,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "ℹ Network Error: No specific error message found\n"
                            },
                            {
                              "text": "ℹ Server Error: No specific error message found\n"
                            },
                            {
                              "text": "ℹ Not Found Error: No specific error message found\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:19.355Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-464c0f36dfad0bd13cbf",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 511,
                  "column": 9
                },
                {
                  "title": "should maintain basic display functionality during errors",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 69,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 15380,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:568:35",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 35,
                              "line": 568
                            },
                            "snippet": "\u001b[0m \u001b[90m 566 |\u001b[39m       \u001b[90m// Should show some form of fallback or error state\u001b[39m\n \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m fallbackState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 568 |\u001b[39m       \u001b[36mawait\u001b[39m expect(fallbackState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 569 |\u001b[39m\n \u001b[90m 570 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Basic display functionality maintained during content errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 571 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 35,
                                "line": 568
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  15000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 15000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 566 |\u001b[39m       \u001b[90m// Should show some form of fallback or error state\u001b[39m\n \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m fallbackState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"fallback-content\"], [data-testid=\"error-state\"], [data-testid=\"empty-state\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 568 |\u001b[39m       \u001b[36mawait\u001b[39m expect(fallbackState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 569 |\u001b[39m\n \u001b[90m 570 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Basic display functionality maintained during content errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 571 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:568:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:20.527Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-4b932-functionality-during-errors-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-4b932-functionality-during-errors-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 35,
                            "line": 568
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a42fcf47b58f21c6c65d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 554,
                  "column": 9
                },
                {
                  "title": "should provide offline indicators when appropriate",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 63,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 97,
                          "error": {
                            "message": "Error: page.goto: net::ERR_INTERNET_DISCONNECTED at http://localhost:3001/display/test-display-error-001\nCall log:\n\u001b[2m  - navigating to \"http://localhost:3001/display/test-display-error-001\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_INTERNET_DISCONNECTED at http://localhost:3001/display/test-display-error-001\nCall log:\n\u001b[2m  - navigating to \"http://localhost:3001/display/test-display-error-001\", waiting until \"load\"\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:577:18",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 18,
                              "line": 577
                            },
                            "snippet": "\u001b[0m \u001b[90m 575 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 576 |\u001b[39m       \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 577 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`/display/${MOCK_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 578 |\u001b[39m\n \u001b[90m 579 |\u001b[39m       \u001b[90m// Wait for offline detection\u001b[39m\n \u001b[90m 580 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 18,
                                "line": 577
                              },
                              "message": "Error: page.goto: net::ERR_INTERNET_DISCONNECTED at http://localhost:3001/display/test-display-error-001\nCall log:\n\u001b[2m  - navigating to \"http://localhost:3001/display/test-display-error-001\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 575 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mcontext()\u001b[33m.\u001b[39msetOffline(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 576 |\u001b[39m       \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 577 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`/display/${MOCK_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 578 |\u001b[39m\n \u001b[90m 579 |\u001b[39m       \u001b[90m// Wait for offline detection\u001b[39m\n \u001b[90m 580 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:577:18\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:02.761Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-7bbda-indicators-when-appropriate-Chrome-TV-Display/test-failed-1.png"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 18,
                            "line": 577
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-79f5d6b0d21e382aea02",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "should display user-friendly error messages in Bahasa Malaysia",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-2dade1ddf922ba368ad3",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 511,
                  "column": 9
                },
                {
                  "title": "should maintain basic display functionality during errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8a819b74db61ae337683",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 554,
                  "column": 9
                },
                {
                  "title": "should provide offline indicators when appropriate",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-61f4d1ba4ff49c15e6cb",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "should display user-friendly error messages in Bahasa Malaysia",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-fad1d2e617d6b836a02e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 511,
                  "column": 9
                },
                {
                  "title": "should maintain basic display functionality during errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-96f6ffb035c3a4e63c4d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 554,
                  "column": 9
                },
                {
                  "title": "should provide offline indicators when appropriate",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-5afacbb1171f4d2fe838",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "should display user-friendly error messages in Bahasa Malaysia",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-dd6c858cdd66f739d4cb",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 511,
                  "column": 9
                },
                {
                  "title": "should maintain basic display functionality during errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-7383ae6fd626353fa042",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 554,
                  "column": 9
                },
                {
                  "title": "should provide offline indicators when appropriate",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-732073ff4c5b952a46e2",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "should display user-friendly error messages in Bahasa Malaysia",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-39c9619a94a8d052f40e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 511,
                  "column": 9
                },
                {
                  "title": "should maintain basic display functionality during errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-3dd7bff6330a59b99038",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 554,
                  "column": 9
                },
                {
                  "title": "should provide offline indicators when appropriate",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-345982463ff452a51b1e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 573,
                  "column": 9
                }
              ]
            },
            {
              "title": "Error Logging and Monitoring",
              "file": "e2e/error-handling.spec.ts",
              "line": 606,
              "column": 8,
              "specs": [
                {
                  "title": "should capture console errors for monitoring",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5370,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ Captured 4 console errors for monitoring\n"
                            },
                            {
                              "text": "  Error 1: Failed to load resource: the server responded with a status of 500 (Internal Server Error)...\n"
                            },
                            {
                              "text": "  Error 2: Failed to load config: SyntaxError: Unexpected token 'S', \"Server Error\" is not valid JSON...\n"
                            },
                            {
                              "text": "  Error 3: Failed to load resource: the server responded with a status of 500 (Internal Server Error)...\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:03.417Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-37a9bfad6617cc99b64b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 607,
                  "column": 9
                },
                {
                  "title": "should handle JavaScript runtime errors gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3359,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ JavaScript runtime errors handled gracefully (1 errors captured)\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:08.953Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f5ab188c04ea09cdc906",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 637,
                  "column": 9
                },
                {
                  "title": "should capture console errors for monitoring",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-f8dd277a5cbff7b923b6",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 607,
                  "column": 9
                },
                {
                  "title": "should handle JavaScript runtime errors gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-c22e59bbd8ce33f7896c",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 637,
                  "column": 9
                },
                {
                  "title": "should capture console errors for monitoring",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-af9530869fd8c662e38f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 607,
                  "column": 9
                },
                {
                  "title": "should handle JavaScript runtime errors gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-b856d7426ba338220e6e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 637,
                  "column": 9
                },
                {
                  "title": "should capture console errors for monitoring",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-51cbe8427d5c96ebbab2",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 607,
                  "column": 9
                },
                {
                  "title": "should handle JavaScript runtime errors gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-370f880a32a2e8694ebc",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 637,
                  "column": 9
                },
                {
                  "title": "should capture console errors for monitoring",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-4309271ee09c8e821712",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 607,
                  "column": 9
                },
                {
                  "title": "should handle JavaScript runtime errors gracefully",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-cb2d6deca5a6f3d25db4",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 637,
                  "column": 9
                }
              ]
            },
            {
              "title": "Edge Cases and Boundary Conditions",
              "file": "e2e/error-handling.spec.ts",
              "line": 670,
              "column": 8,
              "specs": [
                {
                  "title": "should handle extremely large API responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 402,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:704:29",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 29,
                              "line": 704
                            },
                            "snippet": "\u001b[0m \u001b[90m 702 |\u001b[39m       \u001b[90m// Should handle large response without crashing\u001b[39m\n \u001b[90m 703 |\u001b[39m       \u001b[36mconst\u001b[39m contentLoaded \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 704 |\u001b[39m       expect(contentLoaded)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 705 |\u001b[39m\n \u001b[90m 706 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Large API response handled (${largeContent.length} items, ~${Math.round(JSON.stringify(largeContent).length / 1024)}KB)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 707 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 29,
                                "line": 704
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 702 |\u001b[39m       \u001b[90m// Should handle large response without crashing\u001b[39m\n \u001b[90m 703 |\u001b[39m       \u001b[36mconst\u001b[39m contentLoaded \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 704 |\u001b[39m       expect(contentLoaded)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 705 |\u001b[39m\n \u001b[90m 706 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`✓ Large API response handled (${largeContent.length} items, ~${Math.round(JSON.stringify(largeContent).length / 1024)}KB)`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 707 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:704:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:12.322Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-b65b4-tremely-large-API-responses-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-b65b4-tremely-large-API-responses-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 29,
                            "line": 704
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-591dd74cdb4eacfcccac",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 671,
                  "column": 9
                },
                {
                  "title": "should handle concurrent error scenarios",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 68,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 20429,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:727:32",
                            "location": {
                              "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                              "column": 32,
                              "line": 727
                            },
                            "snippet": "\u001b[0m \u001b[90m 725 |\u001b[39m       \u001b[90m// Should handle multiple concurrent errors\u001b[39m\n \u001b[90m 726 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 727 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 728 |\u001b[39m\n \u001b[90m 729 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Concurrent error scenarios handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 730 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                                "column": 32,
                                "line": 727
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  20000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 20000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"], [data-status=\"error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 725 |\u001b[39m       \u001b[90m// Should handle multiple concurrent errors\u001b[39m\n \u001b[90m 726 |\u001b[39m       \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"error-state\"], [data-status=\"error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 727 |\u001b[39m       \u001b[36mawait\u001b[39m expect(errorState)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m20000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 728 |\u001b[39m\n \u001b[90m 729 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m'✓ Concurrent error scenarios handled'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 730 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts:727:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:13.051Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-eac62--concurrent-error-scenarios-Chrome-TV-Display/test-failed-1.png"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/e2e-error-handling-TV-Disp-eac62--concurrent-error-scenarios-Chrome-TV-Display/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/e2e/error-handling.spec.ts",
                            "column": 32,
                            "line": 727
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-6c61b8567f11b40a3078",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 709,
                  "column": 9
                },
                {
                  "title": "should handle memory constraints and cleanup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Chrome TV Display",
                      "projectName": "Chrome TV Display",
                      "results": [
                        {
                          "workerIndex": 73,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 2339,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "✓ Memory constraints handled with proper cleanup\n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-21T09:38:33.929Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-c63afdc7e7ae684cf15f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 732,
                  "column": 9
                },
                {
                  "title": "should handle extremely large API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-d5c0595024aac3a1502f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 671,
                  "column": 9
                },
                {
                  "title": "should handle concurrent error scenarios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-158b1cb5e4ef521bf38a",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 709,
                  "column": 9
                },
                {
                  "title": "should handle memory constraints and cleanup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "4K TV Display",
                      "projectName": "4K TV Display",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-04a3febd0605ac5a6f4e",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 732,
                  "column": 9
                },
                {
                  "title": "should handle extremely large API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-08d818f2eb80f69d24f2",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 671,
                  "column": 9
                },
                {
                  "title": "should handle concurrent error scenarios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-e895b1088fbd68727bd8",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 709,
                  "column": 9
                },
                {
                  "title": "should handle memory constraints and cleanup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "TV Kiosk Mode",
                      "projectName": "TV Kiosk Mode",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-4ecec7641b81a3e8061d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 732,
                  "column": 9
                },
                {
                  "title": "should handle extremely large API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-88ee95d433ed3fefe35f",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 671,
                  "column": 9
                },
                {
                  "title": "should handle concurrent error scenarios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-5f252da31c0a334c62a7",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 709,
                  "column": 9
                },
                {
                  "title": "should handle memory constraints and cleanup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Firefox TV",
                      "projectName": "Firefox TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-8a3c5c239bd6c1f5f24d",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 732,
                  "column": 9
                },
                {
                  "title": "should handle extremely large API responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-5f23832c6d1b3318c71c",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 671,
                  "column": 9
                },
                {
                  "title": "should handle concurrent error scenarios",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-a67d7fd1b8da1cb3319b",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 709,
                  "column": 9
                },
                {
                  "title": "should handle memory constraints and cleanup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Safari TV",
                      "projectName": "Safari TV",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "a0db6d0307f9ada1ff80-0cb622adae26a0d7dff0",
                  "file": "e2e/error-handling.spec.ts",
                  "line": 732,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "home-page.spec.ts",
      "file": "home-page.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "TV Display Home Page",
          "file": "home-page.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should load home page and show basic content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2861,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Body content: E-Masjid TV DisplayDigital signage system for Malaysian mosquesDisplay IDEnter the unique ID for your TV displayLaunch TV DisplaySystem Features✓ Content Carousel✓ Prayer Times✓ Sponsorship Display✓ Offline Support✓ Real-time Monitoring✓ Touch NavigationVersion 1.0 | Built for Malaysian mosques(self.__next_f=self.__next_f||[]).push([0])self.__next_f.push([1,\"5:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"SegmentViewNode\\\"]\\n7:\\\"$Sreact.fragment\\\"\\n21:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/layout-router.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"\\\"]\\n23:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/render-from-template-context.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"\\\"]\\n34:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/client-page.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"ClientPageRoot\\\"]\\n35:I[\\\"(app-pages-browser)/./src/app/page.tsx\\\",[\\\"app/page\\\",\\\"static/chunks/app/page.js\\\"],\\\"default\\\"]\\n37:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/lib/framework/boundary-components.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"OutletBoundary\\\"]\\n3e:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/metadata/async-metadata.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"AsyncMetadataOutlet\\\"]\\n46:I[\\\"(app-pages-browser)/../../node_\"])self.__next_f.push([1,\"modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/lib/framework/boundary-components.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"ViewportBoundary\\\"]\\n4c:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/lib/framework/boundary-components.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"MetadataBoundary\\\"]\\n51:\\\"$Sreact.suspense\\\"\\n55:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/builtin/global-error.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"\\\"]\\n:HL[\\\"/_next/static/css/app/layout.css?v=1758447493357\\\",\\\"style\\\"]\\n:N1758447493360.5042\\n3:\\\"$EObject.defineProperty(()=\\u003e{ctx.componentMod.preloadStyle(fullHref,ctx.renderOpts.crossOrigin,ctx.nonce)},\\\\\\\"name\\\\\\\",{value:\\\\\\\"\\\\\\\"})\\\"\\n2:{\\\"name\\\":\\\"Preloads\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{\\\"preloadCallbacks\\\":[\\\"$3\\\"]}}\\n4:[]\\n6:[]\\n8:[[\\\"Array.map\\\",\\\"\\\",0,0,0,0,false]]\\nb:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/layout-router.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"\\\"]\\ne:I[\\\"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.3_@babel+core@7.28.4_@playwright+test@1.55.0_babel-plugin-react-compiler@19.1.0-rc._t7fhhg7hckzzauqqrdlpdcfffi/node_modules/next/dist/client/components/render-from-template-context.js\\\",[\\\"app-pages-internals\\\",\\\"static/chunks/app-pages-internals.js\\\"],\\\"\\\"]\\nf:{}\\n10:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\nd:{\\\"children\\\":[\\\"$\\\",\\\"$Le\\\",null,\\\"$f\\\",null,\\\"$10\\\",1]}\\n11:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\nc:{\\\"parallelRouterKey\\\":\\\"chi\"])self.__next_f.push([1,\"ldren\\\",\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$7\\\",null,\\\"$d\\\",null,\\\"$11\\\",0],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$Y\\\",\\\"forbidden\\\":\\\"$undefined\\\",\\\"unauthorized\\\":\\\"$undefined\\\",\\\"segmentViewBoundaries\\\":\\\"$Y\\\"}\\n12:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\na:{\\\"name\\\":\\\"RootLayout\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{\\\"children\\\":[\\\"$\\\",\\\"$Lb\\\",null,\\\"$c\\\",null,\\\"$12\\\",1],\\\"params\\\":\\\"$Y\\\"}}\\n13:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",18,87,17,1,false]]\\n14:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",22,88,17,1,false]]\\n15:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",24,96,17,1,false]]\\n16:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",32,96,17,1,false]]\\n17:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",40,96,17,1,false]]\\n18:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",48,96,17,1,false]]\\n19:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",56,96,17,1,false]]\\n1a:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",64,96,17,1,false]]\\n1b:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",72,96,17,1,false]]\\n1c:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",80,96,17,1,false]]\\n1d:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",88,96,17,1,false]]\\n1e:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",96,96,17,1,false]]\\n1f:[[\\\"RootLayout\\\",\\\"webpack-internal:///(rsc)/./src/app/layout.tsx\\\",110,88,17,1,false]]\\n20:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n22:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n24:[]\\n26:{\\\"name\\\":\\\"NotFound\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n27:{\\\"name\\\":\\\"HTTPAccessErrorFallback\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"owner\\\":\\\"$26\\\",\\\"stack\\\":[],\\\"props\\\":{\\\"status\\\":404,\\\"message\\\":\\\"This page could not be found.\\\"}}\\n28:[]\\n29:[]\\n2a:[]\\n2b:[]\\n2c:[]\\n2d:[]\\n2e:[]\\n2f:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n30:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n31:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n32:[[\\\"Fun\"])self.__next_f.push([1,\"ction.all\\\",\\\"\\\",0,0,0,0,true]]\\n33:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n36:[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]]\\n3a:\\\"$EObject.defineProperty(async function getViewportReady() {\\\\n        await viewport();\\\\n        return undefined;\\\\n    },\\\\\\\"name\\\\\\\",{value:\\\\\\\"getViewportReady\\\\\\\"})\\\"\\n39:{\\\"name\\\":\\\"__next_outlet_boundary__\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]],\\\"props\\\":{\\\"ready\\\":\\\"$3a\\\"}}\\n3c:{\\\"name\\\":\\\"StreamingMetadataOutletImpl\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[[\\\"Function.all\\\",\\\"\\\",0,0,0,0,true]],\\\"props\\\":{}}\\n3d:[]\\n40:[]\\n42:{\\\"name\\\":\\\"NonIndex\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{\\\"pagePath\\\":\\\"/\\\",\\\"statusCode\\\":200,\\\"isPossibleServerAction\\\":false}}\\n44:{\\\"name\\\":\\\"ViewportTree\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n45:[]\\n48:{\\\"name\\\":\\\"__next_viewport_boundary__\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"owner\\\":\\\"$44\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n4a:{\\\"name\\\":\\\"MetadataTree\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n4b:[]\\n4e:{\\\"name\\\":\\\"__next_metadata_boundary__\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"owner\\\":\\\"$4a\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n4f:[]\\n50:[]\\n53:{\\\"name\\\":\\\"MetadataResolver\\\",\\\"key\\\":null,\\\"env\\\":\\\"Server\\\",\\\"owner\\\":\\\"$4e\\\",\\\"stack\\\":[],\\\"props\\\":{}}\\n56:[]\\n57:[]\\n58:[]\\n59:[]\\n5a:[]\\n5b:[]\\n5c:[]\\n1:D\\\"$2\\\"\\n1:null\\n9:D\\\"$a\\\"\\n25:D\\\"$26\\\"\\n25:D\\\"$27\\\"\\n\"])self.__next_f.push([1,\"25:[[\\\"$\\\",\\\"title\\\",null,{\\\"children\\\":\\\"404: This page could not be found.\\\"},\\\"$27\\\",\\\"$28\\\",1],[\\\"$\\\",\\\"div\\\",null,{\\\"style\\\":{\\\"fontFamily\\\":\\\"system-ui,\\\\\\\"Segoe UI\\\\\\\",Roboto,Helvetica,Arial,sans-serif,\\\\\\\"Apple Color Emoji\\\\\\\",\\\\\\\"Segoe UI Emoji\\\\\\\"\\\",\\\"height\\\":\\\"100vh\\\",\\\"textAlign\\\":\\\"center\\\",\\\"display\\\":\\\"flex\\\",\\\"flexDirection\\\":\\\"column\\\",\\\"alignItems\\\":\\\"center\\\",\\\"justifyContent\\\":\\\"center\\\"},\\\"children\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"style\\\",null,{\\\"dangerouslySetInnerHTML\\\":{\\\"__html\\\":\\\"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}\\\"}},\\\"$27\\\",\\\"$2b\\\",1],[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"next-error-h1\\\",\\\"style\\\":{\\\"display\\\":\\\"inline-block\\\",\\\"margin\\\":\\\"0 20px 0 0\\\",\\\"padding\\\":\\\"0 23px 0 0\\\",\\\"fontSize\\\":24,\\\"fontWeight\\\":500,\\\"verticalAlign\\\":\\\"top\\\",\\\"lineHeight\\\":\\\"49px\\\"},\\\"children\\\":404},\\\"$27\\\",\\\"$2c\\\",1],[\\\"$\\\",\\\"div\\\",null,{\\\"style\\\":{\\\"display\\\":\\\"inline-block\\\"},\\\"children\\\":[\\\"$\\\",\\\"h2\\\",null,{\\\"style\\\":{\\\"fontSize\\\":14,\\\"fontWeight\\\":400,\\\"lineHeight\\\":\\\"49px\\\",\\\"margin\\\":0},\\\"children\\\":\\\"This page could not be found.\\\"},\\\"$27\\\",\\\"$2e\\\",1]},\\\"$27\\\",\\\"$2d\\\",1]]},\\\"$27\\\",\\\"$2a\\\",1]},\\\"$27\\\",\\\"$29\\\",1]]\\n\"])self.__next_f.push([1,\"9:[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"en\\\",\\\"suppressHydrationWarning\\\":true,\\\"children\\\":[[\\\"$\\\",\\\"head\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1, user-scalable=no\\\"},\\\"$a\\\",\\\"$15\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"format-detection\\\",\\\"content\\\":\\\"telephone=no, date=no, email=no, address=no\\\"},\\\"$a\\\",\\\"$16\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"theme-color\\\",\\\"content\\\":\\\"#000000\\\"},\\\"$a\\\",\\\"$17\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"httpEquiv\\\":\\\"X-UA-Compatible\\\",\\\"content\\\":\\\"IE=edge\\\"},\\\"$a\\\",\\\"$18\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"mobile-web-app-capable\\\",\\\"content\\\":\\\"yes\\\"},\\\"$a\\\",\\\"$19\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"apple-mobile-web-app-capable\\\",\\\"content\\\":\\\"yes\\\"},\\\"$a\\\",\\\"$1a\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"name\\\":\\\"apple-mobile-web-app-status-bar-style\\\",\\\"content\\\":\\\"black-translucent\\\"},\\\"$a\\\",\\\"$1b\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"httpEquiv\\\":\\\"Cache-Control\\\",\\\"content\\\":\\\"no-cache, no-store, must-revalidate\\\"},\\\"$a\\\",\\\"$1c\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"httpEquiv\\\":\\\"Pragma\\\",\\\"content\\\":\\\"no-cache\\\"},\\\"$a\\\",\\\"$1d\\\",1],[\\\"$\\\",\\\"meta\\\",null,{\\\"httpEquiv\\\":\\\"Expires\\\",\\\"content\\\":\\\"0\\\"},\\\"$a\\\",\\\"$1e\\\",1]]},\\\"$a\\\",\\\"$14\\\",1],[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"antialiased\\\",\\\"children\\\":[\\\"$\\\",\\\"$L21\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$L23\\\",null,{},null,\\\"$22\\\",1],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"$L5\\\",\\\"c-not-found\\\",{\\\"type\\\":\\\"not-found\\\",\\\"pagePath\\\":\\\"__next_builtin__not-found.js\\\",\\\"children\\\":[\\\"$25\\\",[]]},null,\\\"$24\\\",0],\\\"forbidden\\\":\\\"$undefined\\\",\\\"unauthorized\\\":\\\"$undefined\\\",\\\"segmentViewBoundaries\\\":[[\\\"$\\\",\\\"$L5\\\",null,{\\\"type\\\":\\\"boundary:not-found\\\",\\\"pagePath\\\":\\\"__next_builtin__not-found.js@boundary\\\"},null,\\\"$2f\\\",1],\\\"$undefined\\\",\\\"$undefined\\\",[\\\"$\\\",\\\"$L5\\\",null,{\\\"type\\\":\\\"boundary:global-error\\\",\\\"pagePath\\\":\\\"__next_builtin__global-error.js\\\"},null,\\\"$30\\\",1]]},null,\\\"$20\\\",1]},\\\"$a\\\",\\\"$1f\\\",1]]},\\\"$a\\\",\\\"$13\\\",1]\\n\"])self.__next_f.push([1,\"38:D\\\"$39\\\"\\n3b:D\\\"$3c\\\"\\n3b:[\\\"$\\\",\\\"$L3e\\\",null,{\\\"promise\\\":\\\"$@3f\\\"},\\\"$3c\\\",\\\"$3d\\\",1]\\n41:D\\\"$42\\\"\\n41:null\\n43:D\\\"$44\\\"\\n47:D\\\"$48\\\"\\n43:[[\\\"$\\\",\\\"$L46\\\",null,{\\\"children\\\":\\\"$L47\\\"},\\\"$44\\\",\\\"$45\\\",1],null]\\n49:D\\\"$4a\\\"\\n4d:D\\\"$4e\\\"\\n52:D\\\"$53\\\"\\n4d:[\\\"$\\\",\\\"div\\\",null,{\\\"hidden\\\":true,\\\"children\\\":[\\\"$\\\",\\\"$51\\\",null,{\\\"fallback\\\":null,\\\"children\\\":\\\"$L52\\\"},\\\"$4e\\\",\\\"$50\\\",1]},\\\"$4e\\\",\\\"$4f\\\",1]\\n49:[\\\"$\\\",\\\"$L4c\\\",null,{\\\"children\\\":\\\"$4d\\\"},\\\"$4a\\\",\\\"$4b\\\",1]\\n54:[]\\n\"])self.__next_f.push([1,\"0:{\\\"P\\\":\\\"$1\\\",\\\"b\\\":\\\"development\\\",\\\"p\\\":\\\"\\\",\\\"c\\\":[\\\"\\\",\\\"\\\"],\\\"i\\\":false,\\\"f\\\":[[[\\\"\\\",{\\\"children\\\":[\\\"__PAGE__\\\",{}]},\\\"$undefined\\\",\\\"$undefined\\\",true],[\\\"\\\",[\\\"$\\\",\\\"$L5\\\",\\\"layout\\\",{\\\"type\\\":\\\"layout\\\",\\\"pagePath\\\":\\\"layout.tsx\\\",\\\"children\\\":[\\\"$\\\",\\\"$7\\\",\\\"c\\\",{\\\"children\\\":[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/_next/static/css/app/layout.css?v=1758447493357\\\",\\\"precedence\\\":\\\"next_static/css/app/layout.css\\\",\\\"crossOrigin\\\":\\\"$undefined\\\",\\\"nonce\\\":\\\"$undefined\\\"},null,\\\"$8\\\",0]],\\\"$9\\\"]},null,\\\"$6\\\",1]},null,\\\"$4\\\",0],{\\\"children\\\":[\\\"__PAGE__\\\",[\\\"$\\\",\\\"$7\\\",\\\"c\\\",{\\\"children\\\":[[\\\"$\\\",\\\"$L5\\\",\\\"c-page\\\",{\\\"type\\\":\\\"page\\\",\\\"pagePath\\\":\\\"page.tsx\\\",\\\"children\\\":[\\\"$\\\",\\\"$L34\\\",null,{\\\"Component\\\":\\\"$35\\\",\\\"searchParams\\\":{},\\\"params\\\":{}},null,\\\"$33\\\",1]},null,\\\"$32\\\",1],null,[\\\"$\\\",\\\"$L37\\\",null,{\\\"children\\\":[\\\"$L38\\\",\\\"$3b\\\"]},null,\\\"$36\\\",1]]},null,\\\"$31\\\",0],{},null,false]},null,false],[\\\"$\\\",\\\"$7\\\",\\\"h\\\",{\\\"children\\\":[\\\"$41\\\",\\\"$43\\\",\\\"$49\\\"]},null,\\\"$40\\\",0],false]],\\\"m\\\":\\\"$W54\\\",\\\"G\\\":[\\\"$55\\\",[\\\"$\\\",\\\"$L5\\\",\\\"ge-svn\\\",{\\\"type\\\":\\\"global-error\\\",\\\"pagePath\\\":\\\"__next_builtin__global-error.js\\\",\\\"children\\\":[]},null,\\\"$56\\\",0]],\\\"s\\\":false,\\\"S\\\":false}\\n\"])self.__next_f.push([1,\"47:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"charSet\\\":\\\"utf-8\\\"},\\\"$39\\\",\\\"$57\\\",0],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"},\\\"$39\\\",\\\"$58\\\",0]]\\n38:null\\n3f:{\\\"metadata\\\":[[\\\"$\\\",\\\"title\\\",\\\"0\\\",{\\\"children\\\":\\\"E-Masjid TV Display\\\"},\\\"$3c\\\",\\\"$59\\\",0],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"name\\\":\\\"description\\\",\\\"content\\\":\\\"Digital signage system for Malaysian mosques\\\"},\\\"$3c\\\",\\\"$5a\\\",0],[\\\"$\\\",\\\"meta\\\",\\\"2\\\",{\\\"name\\\":\\\"keywords\\\",\\\"content\\\":\\\"mosque, masjid, digital signage, TV display, prayer times, sponsorship\\\"},\\\"$3c\\\",\\\"$5b\\\",0],[\\\"$\\\",\\\"meta\\\",\\\"3\\\",{\\\"name\\\":\\\"robots\\\",\\\"content\\\":\\\"noindex, nofollow\\\"},\\\"$3c\\\",\\\"$5c\\\",0]],\\\"error\\\":null,\\\"digest\\\":\\\"$undefined\\\"}\\n52:\\\"$3f:metadata\\\"\\n\"])\n"
                        },
                        {
                          "text": "Page title: E-Masjid TV Display\n"
                        },
                        {
                          "text": "HTML length: \u001b[33m19247\u001b[39m\n"
                        },
                        {
                          "text": "HTML preview: <!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link rel=\"stylesheet\" href=\"/_next/static/css/app/layout.css?v=1758447493357\" data-precedence=\"next_static/css/app/layout.css\"><link rel=\"preload\" as=\"script\" fetchpriority=\"low\" href=\"/_next/static/chunks/webpack.js?v=1758447493357\"><script src=\"/_next/static/chunks/main-app.js?v=1758\n"
                        },
                        {
                          "text": "H1 elements found: \u001b[33m1\u001b[39m\n"
                        },
                        {
                          "text": "H1 text: E-Masjid TV Display\n"
                        },
                        {
                          "text": "Forms found: \u001b[33m1\u001b[39m\n"
                        },
                        {
                          "text": "Input fields found: \u001b[33m1\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:13.309Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d186ff7d110502c4a7d9-1d6e859c9bfe664091a1",
              "file": "home-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for JavaScript errors and loading state",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 5473,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "All console logs: [\n  \u001b[32m'info: %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold'\u001b[39m\n]\n"
                        },
                        {
                          "text": "JavaScript errors: []\n"
                        },
                        {
                          "text": "React loaded: \u001b[33mfalse\u001b[39m\n"
                        },
                        {
                          "text": "Next.js loaded: \u001b[33mfalse\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:16.178Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d186ff7d110502c4a7d9-dfb8a05eeb12a6ed65f7",
              "file": "home-page.spec.ts",
              "line": 66,
              "column": 7
            },
            {
              "title": "should load home page and show basic content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-aa800eb8327368718363",
              "file": "home-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for JavaScript errors and loading state",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-ed98fd5c7215f9224e8c",
              "file": "home-page.spec.ts",
              "line": 66,
              "column": 7
            },
            {
              "title": "should load home page and show basic content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-51e97828b4193a97287f",
              "file": "home-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for JavaScript errors and loading state",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-9e53b748d58625703c8a",
              "file": "home-page.spec.ts",
              "line": 66,
              "column": 7
            },
            {
              "title": "should load home page and show basic content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-f0764d3628469eab20e8",
              "file": "home-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for JavaScript errors and loading state",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-3be24b83abb7e636aa1a",
              "file": "home-page.spec.ts",
              "line": 66,
              "column": 7
            },
            {
              "title": "should load home page and show basic content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-01a5c9d5ec8c11ec6ece",
              "file": "home-page.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should check for JavaScript errors and loading state",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d186ff7d110502c4a7d9-3c4aa217eb7f628f6a17",
              "file": "home-page.spec.ts",
              "line": 66,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "hydration-fix.spec.ts",
      "file": "hydration-fix.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Hydration Fix Validation",
          "file": "hydration-fix.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should not have hydration mismatch errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 9922,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "All errors: [\n  \u001b[32m'Failed to load resource: the server responded with a status of 404 (Not Found)'\u001b[39m,\n  \u001b[32m'Failed to load resource: the server responded with a status of 404 (Not Found)'\u001b[39m\n]\n"
                        },
                        {
                          "text": "All warnings: []\n"
                        },
                        {
                          "text": "Hydration errors: []\n"
                        },
                        {
                          "text": "Hydration warnings: []\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:21.658Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "eb19abbc0b26b027ed8c-3607a8ce0ff55dbdb199",
              "file": "hydration-fix.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should not have hydration mismatch errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb19abbc0b26b027ed8c-e099a9e1b20082dcaf9a",
              "file": "hydration-fix.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should not have hydration mismatch errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb19abbc0b26b027ed8c-2fd2e2b8caa9ef490886",
              "file": "hydration-fix.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should not have hydration mismatch errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb19abbc0b26b027ed8c-81b9a4e7c24189432c0b",
              "file": "hydration-fix.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should not have hydration mismatch errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb19abbc0b26b027ed8c-6186427f22f46c967c20",
              "file": "hydration-fix.spec.ts",
              "line": 4,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration/content-carousel.test.ts",
      "file": "integration/content-carousel.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Content Carousel Integration Tests",
          "file": "integration/content-carousel.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "displays content carousel with sponsored items in ranking order",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10402,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:24:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                          "column": 16,
                          "line": 24
                        },
                        "snippet": "\u001b[0m \u001b[90m 22 |\u001b[39m   test(\u001b[32m'displays content carousel with sponsored items in ranking order'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 23 |\u001b[39m     \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[90m// Verify carousel container is visible\u001b[39m\n \u001b[90m 27 |\u001b[39m     \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 24
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 22 |\u001b[39m   test(\u001b[32m'displays content carousel with sponsored items in ranking order'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 23 |\u001b[39m     \u001b[90m// Wait for content to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 25 |\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[90m// Verify carousel container is visible\u001b[39m\n \u001b[90m 27 |\u001b[39m     \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:24:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:31.589Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-85d5d-ored-items-in-ranking-order-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-85d5d-ored-items-in-ranking-order-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-85d5d-ored-items-in-ranking-order-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                        "column": 16,
                        "line": 24
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-dca302db08094e310e4a",
              "file": "integration/content-carousel.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "transitions between content items automatically",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 60123,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 44
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 42 |\u001b[39m\n \u001b[90m 43 |\u001b[39m   test(\u001b[32m'transitions between content items automatically'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 44 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 45 |\u001b[39m\n \u001b[90m 46 |\u001b[39m     \u001b[90m// Get initial content item\u001b[39m\n \u001b[90m 47 |\u001b[39m     \u001b[36mconst\u001b[39m activeItem \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-active=\"true\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:44:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:36.225Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-28152-content-items-automatically-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-28152-content-items-automatically-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-28152-content-items-automatically-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-f0b049a696e70d2c9f5b",
              "file": "integration/content-carousel.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "displays YouTube videos with proper embedding",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60091,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 63
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 61 |\u001b[39m\n \u001b[90m 62 |\u001b[39m   test(\u001b[32m'displays YouTube videos with proper embedding'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 64 |\u001b[39m\n \u001b[90m 65 |\u001b[39m     \u001b[90m// Look for YouTube video content\u001b[39m\n \u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m youtubeItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-type=\"youtube_video\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:63:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:36.502Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-2d936-ideos-with-proper-embedding-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-2d936-ideos-with-proper-embedding-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-2d936-ideos-with-proper-embedding-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-ac320cdd50e4fad464b0",
              "file": "integration/content-carousel.test.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "displays image content with proper scaling for TV",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 60114,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 87
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 85 |\u001b[39m\n \u001b[90m 86 |\u001b[39m   test(\u001b[32m'displays image content with proper scaling for TV'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 87 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 88 |\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[90m// Look for image content\u001b[39m\n \u001b[90m 90 |\u001b[39m     \u001b[36mconst\u001b[39m imageItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-type=\"image\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:87:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:41.164Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-49937--with-proper-scaling-for-TV-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-49937--with-proper-scaling-for-TV-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-49937--with-proper-scaling-for-TV-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-b55e8004b7dd20a0760c",
              "file": "integration/content-carousel.test.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "shows content titles in Bahasa Malaysia",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 60122,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 108
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 106 |\u001b[39m\n \u001b[90m 107 |\u001b[39m   test(\u001b[32m'shows content titles in Bahasa Malaysia'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 108 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 109 |\u001b[39m\n \u001b[90m 110 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 111 |\u001b[39m     \u001b[36mconst\u001b[39m firstItem \u001b[33m=\u001b[39m contentItems\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:108:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:42.316Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-eca7e-t-titles-in-Bahasa-Malaysia-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-eca7e-t-titles-in-Bahasa-Malaysia-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-eca7e-t-titles-in-Bahasa-Malaysia-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-4858c7d71f3100fc2f4d",
              "file": "integration/content-carousel.test.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "respects carousel interval configuration",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 60113,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 122
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 120 |\u001b[39m\n \u001b[90m 121 |\u001b[39m   test(\u001b[32m'respects carousel interval configuration'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 122 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 123 |\u001b[39m\n \u001b[90m 124 |\u001b[39m     \u001b[90m// Mock API response to set specific interval\u001b[39m\n \u001b[90m 125 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mroute(\u001b[32m`**/api/displays/${SAMPLE_DISPLAY_ID}/content`\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m (route) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:122:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:43.595Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-7042f-usel-interval-configuration-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-7042f-usel-interval-configuration-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-7042f-usel-interval-configuration-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-c4305ce8f525b432da96",
              "file": "integration/content-carousel.test.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "handles empty content gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 10882,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"no-content-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"no-content-message\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"no-content-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"no-content-message\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:200:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                          "column": 31,
                          "line": 200
                        },
                        "snippet": "\u001b[0m \u001b[90m 198 |\u001b[39m     \u001b[90m// Should show placeholder or message\u001b[39m\n \u001b[90m 199 |\u001b[39m     \u001b[36mconst\u001b[39m placeholder \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"no-content-message\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m     \u001b[36mawait\u001b[39m expect(placeholder)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m\n \u001b[90m 202 |\u001b[39m     \u001b[36mconst\u001b[39m placeholderText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m placeholder\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m     expect(placeholderText)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Tiada kandungan'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Bahasa Malaysia\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 31,
                            "line": 200
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"no-content-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"no-content-message\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 198 |\u001b[39m     \u001b[90m// Should show placeholder or message\u001b[39m\n \u001b[90m 199 |\u001b[39m     \u001b[36mconst\u001b[39m placeholder \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"no-content-message\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m     \u001b[36mawait\u001b[39m expect(placeholder)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m\n \u001b[90m 202 |\u001b[39m     \u001b[36mconst\u001b[39m placeholderText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m placeholder\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m     expect(placeholderText)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Tiada kandungan'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Bahasa Malaysia\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:200:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:44.697Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3821-es-empty-content-gracefully-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3821-es-empty-content-gracefully-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3821-es-empty-content-gracefully-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                        "column": 31,
                        "line": 200
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-ac36688070b3b90b0066",
              "file": "integration/content-carousel.test.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "maintains smooth 60fps animations during transitions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 60183,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 207
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 205 |\u001b[39m\n \u001b[90m 206 |\u001b[39m   test(\u001b[32m'maintains smooth 60fps animations during transitions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Monitor frame rate during transition\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mlet\u001b[39m frameCount \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:207:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:38:56.184Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-94ed0-imations-during-transitions-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-94ed0-imations-during-transitions-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-94ed0-imations-during-transitions-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-ebfdb2567abd52fdf399",
              "file": "integration/content-carousel.test.ts",
              "line": 206,
              "column": 7
            },
            {
              "title": "displays content items in responsive TV layout",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 60139,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 239
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 237 |\u001b[39m\n \u001b[90m 238 |\u001b[39m   test(\u001b[32m'displays content items in responsive TV layout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 240 |\u001b[39m\n \u001b[90m 241 |\u001b[39m     \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 242 |\u001b[39m     \u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:239:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:36.900Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-48beb-ems-in-responsive-TV-layout-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-48beb-ems-in-responsive-TV-layout-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-48beb-ems-in-responsive-TV-layout-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-94fea4a54917603c1281",
              "file": "integration/content-carousel.test.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "preloads next content for smooth transitions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60132,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 259
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 257 |\u001b[39m\n \u001b[90m 258 |\u001b[39m   test(\u001b[32m'preloads next content for smooth transitions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 259 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 260 |\u001b[39m\n \u001b[90m 261 |\u001b[39m     \u001b[90m// Check that next content item is preloaded\u001b[39m\n \u001b[90m 262 |\u001b[39m     \u001b[36mconst\u001b[39m preloadedItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-preloaded=\"true\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:259:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:36.961Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-dc707-tent-for-smooth-transitions-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-dc707-tent-for-smooth-transitions-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-dc707-tent-for-smooth-transitions-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-b78e2aab688067eac5ed",
              "file": "integration/content-carousel.test.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "displays content carousel with sponsored items in ranking order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-834b51b051abe03a985f",
              "file": "integration/content-carousel.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "transitions between content items automatically",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-8884c1222c30bcdeace8",
              "file": "integration/content-carousel.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "displays YouTube videos with proper embedding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-a66068da9e6e558b1e83",
              "file": "integration/content-carousel.test.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "displays image content with proper scaling for TV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-5d6faffefbc0b17f1f27",
              "file": "integration/content-carousel.test.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "shows content titles in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-825a8e7a3af5cef3c59a",
              "file": "integration/content-carousel.test.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "respects carousel interval configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-5f4cd10194fe7e5b03ae",
              "file": "integration/content-carousel.test.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "handles empty content gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-b4c75ffe4fc64e384f75",
              "file": "integration/content-carousel.test.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "maintains smooth 60fps animations during transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-fbfecd4c8249d452cde6",
              "file": "integration/content-carousel.test.ts",
              "line": 206,
              "column": 7
            },
            {
              "title": "displays content items in responsive TV layout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-dca2690c14e553ad26d3",
              "file": "integration/content-carousel.test.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "preloads next content for smooth transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-53df16cc6e986d67e350",
              "file": "integration/content-carousel.test.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "displays content carousel with sponsored items in ranking order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d59cf33684e14e595cd6",
              "file": "integration/content-carousel.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "transitions between content items automatically",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-907ac55639294184fea2",
              "file": "integration/content-carousel.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "displays YouTube videos with proper embedding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d7dc42fdaa4bf42ebf8d",
              "file": "integration/content-carousel.test.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "displays image content with proper scaling for TV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-804bbe3bae15d4f9acd2",
              "file": "integration/content-carousel.test.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "shows content titles in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-3569cd3f82a27ca6b281",
              "file": "integration/content-carousel.test.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "respects carousel interval configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-2f579787a00478e8aaa0",
              "file": "integration/content-carousel.test.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "handles empty content gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-1a0b758ce638714e404d",
              "file": "integration/content-carousel.test.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "maintains smooth 60fps animations during transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d6ee470268e88db6c674",
              "file": "integration/content-carousel.test.ts",
              "line": 206,
              "column": 7
            },
            {
              "title": "displays content items in responsive TV layout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-2e7e9c4d06a4206d6407",
              "file": "integration/content-carousel.test.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "preloads next content for smooth transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-c4f1ade95d481c2c5029",
              "file": "integration/content-carousel.test.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "displays content carousel with sponsored items in ranking order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-c24aa42c1337e7c4ebe2",
              "file": "integration/content-carousel.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "transitions between content items automatically",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-e9f1951b52fea762b849",
              "file": "integration/content-carousel.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "displays YouTube videos with proper embedding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-39a558a79ff4af54f248",
              "file": "integration/content-carousel.test.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "displays image content with proper scaling for TV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-0ade9a74beb9d29b10d9",
              "file": "integration/content-carousel.test.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "shows content titles in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-c89821d6ec6d8faa7875",
              "file": "integration/content-carousel.test.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "respects carousel interval configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-656b3f0fc34fc9651006",
              "file": "integration/content-carousel.test.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "handles empty content gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d2d9baa39b8e9c0ca8b1",
              "file": "integration/content-carousel.test.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "maintains smooth 60fps animations during transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d54f7f886cdfa6fe2b46",
              "file": "integration/content-carousel.test.ts",
              "line": 206,
              "column": 7
            },
            {
              "title": "displays content items in responsive TV layout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-4bdeabcad6f4166b60b4",
              "file": "integration/content-carousel.test.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "preloads next content for smooth transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-28b94feafb738c5def7a",
              "file": "integration/content-carousel.test.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "displays content carousel with sponsored items in ranking order",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-995c7b514f2ea7eedf29",
              "file": "integration/content-carousel.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "transitions between content items automatically",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-477bac9279b7a3615dbc",
              "file": "integration/content-carousel.test.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "displays YouTube videos with proper embedding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-8a000e830c8e81f2b8d7",
              "file": "integration/content-carousel.test.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "displays image content with proper scaling for TV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-e8b722e7c2db85c104ff",
              "file": "integration/content-carousel.test.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "shows content titles in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-ea75b776efba7fca463b",
              "file": "integration/content-carousel.test.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "respects carousel interval configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-3bce88c6feb6c4ba4a58",
              "file": "integration/content-carousel.test.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "handles empty content gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-a1bfb7c13015ee1140d7",
              "file": "integration/content-carousel.test.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "maintains smooth 60fps animations during transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-4d2a1db05ca64a7747a7",
              "file": "integration/content-carousel.test.ts",
              "line": 206,
              "column": 7
            },
            {
              "title": "displays content items in responsive TV layout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-d4d91d84e7f5c2cf4e09",
              "file": "integration/content-carousel.test.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "preloads next content for smooth transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-2c07ea045319eaf9367c",
              "file": "integration/content-carousel.test.ts",
              "line": 258,
              "column": 7
            }
          ]
        },
        {
          "title": "Content Carousel Error Handling",
          "file": "integration/content-carousel.test.ts",
          "line": 275,
          "column": 6,
          "specs": [
            {
              "title": "handles API failures gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10550,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-error\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-error\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:286:32",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                          "column": 32,
                          "line": 286
                        },
                        "snippet": "\u001b[0m \u001b[90m 284 |\u001b[39m     \u001b[90m// Should show error message or fallback content\u001b[39m\n \u001b[90m 285 |\u001b[39m     \u001b[36mconst\u001b[39m errorMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 286 |\u001b[39m     \u001b[36mawait\u001b[39m expect(errorMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 287 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 288 |\u001b[39m\n \u001b[90m 289 |\u001b[39m   test(\u001b[32m'handles slow content loading'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 32,
                            "line": 286
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-error\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-error\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 284 |\u001b[39m     \u001b[90m// Should show error message or fallback content\u001b[39m\n \u001b[90m 285 |\u001b[39m     \u001b[36mconst\u001b[39m errorMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-error\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 286 |\u001b[39m     \u001b[36mawait\u001b[39m expect(errorMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 287 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 288 |\u001b[39m\n \u001b[90m 289 |\u001b[39m   test(\u001b[32m'handles slow content loading'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:286:32\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:41.767Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-90c58-les-API-failures-gracefully-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-90c58-les-API-failures-gracefully-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-90c58-les-API-failures-gracefully-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                        "column": 32,
                        "line": 286
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-2af371f47641c97e13b9",
              "file": "integration/content-carousel.test.ts",
              "line": 276,
              "column": 7
            },
            {
              "title": "handles slow content loading",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10618,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-loading\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-loading\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-loading\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-loading\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:316:36",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                          "column": 36,
                          "line": 316
                        },
                        "snippet": "\u001b[0m \u001b[90m 314 |\u001b[39m     \u001b[90m// Should show loading state\u001b[39m\n \u001b[90m 315 |\u001b[39m     \u001b[36mconst\u001b[39m loadingIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-loading\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 316 |\u001b[39m     \u001b[36mawait\u001b[39m expect(loadingIndicator)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 317 |\u001b[39m\n \u001b[90m 318 |\u001b[39m     \u001b[90m// Eventually should load content\u001b[39m\n \u001b[90m 319 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 36,
                            "line": 316
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-loading\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-loading\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 314 |\u001b[39m     \u001b[90m// Should show loading state\u001b[39m\n \u001b[90m 315 |\u001b[39m     \u001b[36mconst\u001b[39m loadingIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-loading\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 316 |\u001b[39m     \u001b[36mawait\u001b[39m expect(loadingIndicator)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 317 |\u001b[39m\n \u001b[90m 318 |\u001b[39m     \u001b[90m// Eventually should load content\u001b[39m\n \u001b[90m 319 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:316:36\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:42.952Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-82d20-andles-slow-content-loading-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-82d20-andles-slow-content-loading-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-82d20-andles-slow-content-loading-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                        "column": 36,
                        "line": 316
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-ed841d62b0d7d7affb03",
              "file": "integration/content-carousel.test.ts",
              "line": 289,
              "column": 7
            },
            {
              "title": "handles invalid YouTube URLs gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 60104,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts",
                            "column": 16,
                            "line": 345
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 343 |\u001b[39m\n \u001b[90m 344 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 346 |\u001b[39m\n \u001b[90m 347 |\u001b[39m     \u001b[90m// Should show fallback or error state for invalid video\u001b[39m\n \u001b[90m 348 |\u001b[39m     \u001b[36mconst\u001b[39m errorState \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"video-error\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/content-carousel.test.ts:345:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:44.213Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3480-lid-YouTube-URLs-gracefully-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3480-lid-YouTube-URLs-gracefully-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-content-carous-b3480-lid-YouTube-URLs-gracefully-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "09700bafaeacb324e417-6c53582caba492dd0bec",
              "file": "integration/content-carousel.test.ts",
              "line": 322,
              "column": 7
            },
            {
              "title": "handles API failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-152f6c6cf0ed98209eed",
              "file": "integration/content-carousel.test.ts",
              "line": 276,
              "column": 7
            },
            {
              "title": "handles slow content loading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-77b1f4a8b14d58cb72ae",
              "file": "integration/content-carousel.test.ts",
              "line": 289,
              "column": 7
            },
            {
              "title": "handles invalid YouTube URLs gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-9b8078352a8ecd88b5d8",
              "file": "integration/content-carousel.test.ts",
              "line": 322,
              "column": 7
            },
            {
              "title": "handles API failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-55be991bca55baf50fb8",
              "file": "integration/content-carousel.test.ts",
              "line": 276,
              "column": 7
            },
            {
              "title": "handles slow content loading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-8547f129a2c07e6f235d",
              "file": "integration/content-carousel.test.ts",
              "line": 289,
              "column": 7
            },
            {
              "title": "handles invalid YouTube URLs gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-0ac5ec05b8fee9a4db02",
              "file": "integration/content-carousel.test.ts",
              "line": 322,
              "column": 7
            },
            {
              "title": "handles API failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-b5efcdfe12768dedcdf0",
              "file": "integration/content-carousel.test.ts",
              "line": 276,
              "column": 7
            },
            {
              "title": "handles slow content loading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-407ff066a2dcac276893",
              "file": "integration/content-carousel.test.ts",
              "line": 289,
              "column": 7
            },
            {
              "title": "handles invalid YouTube URLs gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-760edb2c74696d7e5846",
              "file": "integration/content-carousel.test.ts",
              "line": 322,
              "column": 7
            },
            {
              "title": "handles API failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-4f74389df36f92e7599e",
              "file": "integration/content-carousel.test.ts",
              "line": 276,
              "column": 7
            },
            {
              "title": "handles slow content loading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-c61a5c13132d3dd5e1e3",
              "file": "integration/content-carousel.test.ts",
              "line": 289,
              "column": 7
            },
            {
              "title": "handles invalid YouTube URLs gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "09700bafaeacb324e417-c62e781d469b17546009",
              "file": "integration/content-carousel.test.ts",
              "line": 322,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration/multi-display.test.ts",
      "file": "integration/multi-display.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Multi-Display Configuration Integration Tests",
          "file": "integration/multi-display.test.ts",
          "line": 18,
          "column": 6,
          "specs": [
            {
              "title": "each display shows content according to its own configuration",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 60090,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 18,
                            "line": 117
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 115 |\u001b[39m\n \u001b[90m 116 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${display.id}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m     }\n \u001b[90m 119 |\u001b[39m\n \u001b[90m 120 |\u001b[39m     \u001b[90m// Verify each display shows correct number of content items\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:117:18\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:52.859Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--13382-ng-to-its-own-configuration-Chrome-TV-Display/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--13382-ng-to-its-own-configuration-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--13382-ng-to-its-own-configuration-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-b56a9cd80a6f936c62cb",
              "file": "integration/multi-display.test.ts",
              "line": 19,
              "column": 7
            },
            {
              "title": "displays can be configured independently through API",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1397,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:195:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                          "column": 31,
                          "line": 195
                        },
                        "snippet": "\u001b[0m \u001b[90m 193 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 194 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 195 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 196 |\u001b[39m\n \u001b[90m 197 |\u001b[39m     \u001b[36mconst\u001b[39m responseData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 198 |\u001b[39m     expect(responseData\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mdisplay_name)\u001b[33m.\u001b[39mtoBe(updatedConfig\u001b[33m.\u001b[39mdisplay_name)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 31,
                            "line": 195
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 193 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 194 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 195 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 196 |\u001b[39m\n \u001b[90m 197 |\u001b[39m     \u001b[36mconst\u001b[39m responseData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 198 |\u001b[39m     expect(responseData\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mdisplay_name)\u001b[33m.\u001b[39mtoBe(updatedConfig\u001b[33m.\u001b[39mdisplay_name)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:195:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:54.309Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--8095a-d-independently-through-API-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--8095a-d-independently-through-API-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--8095a-d-independently-through-API-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                        "column": 31,
                        "line": 195
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-b92a5d17f6d82b315aa0",
              "file": "integration/multi-display.test.ts",
              "line": 138,
              "column": 7
            },
            {
              "title": "supports different masjids with isolated display configurations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 60163,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 16,
                            "line": 301
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 299 |\u001b[39m\n \u001b[90m 300 |\u001b[39m     \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall([\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m       pages[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m,\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m       pages[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\n \u001b[90m 303 |\u001b[39m     ])\u001b[33m;\u001b[39m\n \u001b[90m 304 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:301:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:56.881Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--14094-ated-display-configurations-Chrome-TV-Display/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--14094-ated-display-configurations-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--14094-ated-display-configurations-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-26f831ea3e25fc0e032e",
              "file": "integration/multi-display.test.ts",
              "line": 202,
              "column": 7
            },
            {
              "title": "maintains display identity and heartbeat tracking",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 88,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 60162,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 16,
                            "line": 341
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 339 |\u001b[39m\n \u001b[90m 340 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${MAIN_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 341 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 342 |\u001b[39m\n \u001b[90m 343 |\u001b[39m     \u001b[90m// Wait for heartbeat to be sent\u001b[39m\n \u001b[90m 344 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:341:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:39:57.288Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--88abe-tity-and-heartbeat-tracking-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--88abe-tity-and-heartbeat-tracking-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--88abe-tity-and-heartbeat-tracking-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-263cc52fe1d5d8d68823",
              "file": "integration/multi-display.test.ts",
              "line": 328,
              "column": 7
            },
            {
              "title": "handles display activation and deactivation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 89,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 60197,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 16,
                            "line": 380
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 378 |\u001b[39m\n \u001b[90m 379 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${MAIN_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 380 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 381 |\u001b[39m\n \u001b[90m 382 |\u001b[39m     \u001b[90m// Verify active display shows content\u001b[39m\n \u001b[90m 383 |\u001b[39m     \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:380:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:37.747Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--02150-activation-and-deactivation-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--02150-activation-and-deactivation-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--02150-activation-and-deactivation-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-5c5b6a964caa6fe38016",
              "file": "integration/multi-display.test.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "supports display-specific auto-refresh intervals",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 90,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60176,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 16,
                            "line": 438
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 436 |\u001b[39m\n \u001b[90m 437 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${MAIN_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 438 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 439 |\u001b[39m\n \u001b[90m 440 |\u001b[39m     \u001b[90m// Initial request\u001b[39m\n \u001b[90m 441 |\u001b[39m     expect(contentRequestCount)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:438:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:37.746Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--2630c-ific-auto-refresh-intervals-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--2630c-ific-auto-refresh-intervals-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--2630c-ific-auto-refresh-intervals-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-8d4a70ae4b8cdccaea9d",
              "file": "integration/multi-display.test.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "handles concurrent display configurations without conflicts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 91,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 283,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at forEach (/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:509:22)\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:508:13",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                          "column": 22,
                          "line": 509
                        },
                        "snippet": "\u001b[0m \u001b[90m 507 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(configPromises)\u001b[33m;\u001b[39m\n \u001b[90m 508 |\u001b[39m     results\u001b[33m.\u001b[39mforEach(status \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       expect(status)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 510 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 511 |\u001b[39m\n \u001b[90m 512 |\u001b[39m     \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(contexts\u001b[33m.\u001b[39mmap(context \u001b[33m=>\u001b[39m context\u001b[33m.\u001b[39mclose()))\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 22,
                            "line": 509
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 507 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(configPromises)\u001b[33m;\u001b[39m\n \u001b[90m 508 |\u001b[39m     results\u001b[33m.\u001b[39mforEach(status \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       expect(status)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 510 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 511 |\u001b[39m\n \u001b[90m 512 |\u001b[39m     \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(contexts\u001b[33m.\u001b[39mmap(context \u001b[33m=>\u001b[39m context\u001b[33m.\u001b[39mclose()))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at forEach (/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:509:22)\u001b[22m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:508:13\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:44.926Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--46ed6-gurations-without-conflicts-Chrome-TV-Display/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--46ed6-gurations-without-conflicts-Chrome-TV-Display/test-failed-3.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--46ed6-gurations-without-conflicts-Chrome-TV-Display/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                        "column": 22,
                        "line": 509
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-46a224573ed169299ce3",
              "file": "integration/multi-display.test.ts",
              "line": 457,
              "column": 7
            },
            {
              "title": "each display shows content according to its own configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-518833471869fda9c4d9",
              "file": "integration/multi-display.test.ts",
              "line": 19,
              "column": 7
            },
            {
              "title": "displays can be configured independently through API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-2bd7c4e6c2c51f78f4f8",
              "file": "integration/multi-display.test.ts",
              "line": 138,
              "column": 7
            },
            {
              "title": "supports different masjids with isolated display configurations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-67e6a00d662c77415c42",
              "file": "integration/multi-display.test.ts",
              "line": 202,
              "column": 7
            },
            {
              "title": "maintains display identity and heartbeat tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-337abf6c0a5ab555a2f8",
              "file": "integration/multi-display.test.ts",
              "line": 328,
              "column": 7
            },
            {
              "title": "handles display activation and deactivation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-9dd6f81abb289fa940e2",
              "file": "integration/multi-display.test.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "supports display-specific auto-refresh intervals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-d70408c8e7213d58c846",
              "file": "integration/multi-display.test.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "handles concurrent display configurations without conflicts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-967ad76292da1a9cecdf",
              "file": "integration/multi-display.test.ts",
              "line": 457,
              "column": 7
            },
            {
              "title": "each display shows content according to its own configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-87d8a2d2bae0b0171e89",
              "file": "integration/multi-display.test.ts",
              "line": 19,
              "column": 7
            },
            {
              "title": "displays can be configured independently through API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-c7468cf00ef4e4361b1e",
              "file": "integration/multi-display.test.ts",
              "line": 138,
              "column": 7
            },
            {
              "title": "supports different masjids with isolated display configurations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-ec5ad5292078480e5c0c",
              "file": "integration/multi-display.test.ts",
              "line": 202,
              "column": 7
            },
            {
              "title": "maintains display identity and heartbeat tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-85e2d18099b65c16228e",
              "file": "integration/multi-display.test.ts",
              "line": 328,
              "column": 7
            },
            {
              "title": "handles display activation and deactivation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-868fc12070f4345f4206",
              "file": "integration/multi-display.test.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "supports display-specific auto-refresh intervals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-04564de665dfe667df2b",
              "file": "integration/multi-display.test.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "handles concurrent display configurations without conflicts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-a1ab0ce274a1ad133065",
              "file": "integration/multi-display.test.ts",
              "line": 457,
              "column": 7
            },
            {
              "title": "each display shows content according to its own configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-8146956fb26acdae11fa",
              "file": "integration/multi-display.test.ts",
              "line": 19,
              "column": 7
            },
            {
              "title": "displays can be configured independently through API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-84500f92fc9860b11fa0",
              "file": "integration/multi-display.test.ts",
              "line": 138,
              "column": 7
            },
            {
              "title": "supports different masjids with isolated display configurations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-19bb11f4c68e8c696308",
              "file": "integration/multi-display.test.ts",
              "line": 202,
              "column": 7
            },
            {
              "title": "maintains display identity and heartbeat tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-8dbad21d1df0f6d0346f",
              "file": "integration/multi-display.test.ts",
              "line": 328,
              "column": 7
            },
            {
              "title": "handles display activation and deactivation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-96da3d4195eb874fcfda",
              "file": "integration/multi-display.test.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "supports display-specific auto-refresh intervals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-04ec6eb1e7449f10b639",
              "file": "integration/multi-display.test.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "handles concurrent display configurations without conflicts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-b1e6a58b4923cb733b7c",
              "file": "integration/multi-display.test.ts",
              "line": 457,
              "column": 7
            },
            {
              "title": "each display shows content according to its own configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-18a6ec4f9aaa42858d77",
              "file": "integration/multi-display.test.ts",
              "line": 19,
              "column": 7
            },
            {
              "title": "displays can be configured independently through API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-ec88d6b6cfd1a41d867d",
              "file": "integration/multi-display.test.ts",
              "line": 138,
              "column": 7
            },
            {
              "title": "supports different masjids with isolated display configurations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-c2d920c763d1d64b7724",
              "file": "integration/multi-display.test.ts",
              "line": 202,
              "column": 7
            },
            {
              "title": "maintains display identity and heartbeat tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-14616b29d40c1c134ab9",
              "file": "integration/multi-display.test.ts",
              "line": 328,
              "column": 7
            },
            {
              "title": "handles display activation and deactivation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-747855dfe426c259687b",
              "file": "integration/multi-display.test.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "supports display-specific auto-refresh intervals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-e88715cdd5e50a284a17",
              "file": "integration/multi-display.test.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "handles concurrent display configurations without conflicts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-4afd3655e9902bc3714d",
              "file": "integration/multi-display.test.ts",
              "line": 457,
              "column": 7
            }
          ]
        },
        {
          "title": "Multi-Display Error Handling",
          "file": "integration/multi-display.test.ts",
          "line": 516,
          "column": 6,
          "specs": [
            {
              "title": "handles display configuration conflicts gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 92,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 223,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:534:31",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                          "column": 31,
                          "line": 534
                        },
                        "snippet": "\u001b[0m \u001b[90m 532 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 533 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 534 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 535 |\u001b[39m\n \u001b[90m 536 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 537 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'CONFIGURATION_CONFLICT'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 31,
                            "line": 534
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 532 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 533 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 534 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 535 |\u001b[39m\n \u001b[90m 536 |\u001b[39m     \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 537 |\u001b[39m     expect(error\u001b[33m.\u001b[39mcode)\u001b[33m.\u001b[39mtoBe(\u001b[32m'CONFIGURATION_CONFLICT'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:534:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:45.907Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--38800-ration-conflicts-gracefully-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--38800-ration-conflicts-gracefully-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                        "column": 31,
                        "line": 534
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-c0ecbd0c4ed0f345804d",
              "file": "integration/multi-display.test.ts",
              "line": 517,
              "column": 7
            },
            {
              "title": "handles display not found scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 93,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11878,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-not-found\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-not-found\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-not-found\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-not-found\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:547:35",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                          "column": 35,
                          "line": 547
                        },
                        "snippet": "\u001b[0m \u001b[90m 545 |\u001b[39m     \u001b[90m// Should show display not found message\u001b[39m\n \u001b[90m 546 |\u001b[39m     \u001b[36mconst\u001b[39m notFoundMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-not-found\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m     \u001b[36mawait\u001b[39m expect(notFoundMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 548 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 549 |\u001b[39m\n \u001b[90m 550 |\u001b[39m   test(\u001b[32m'handles masjid access restrictions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 35,
                            "line": 547
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"display-not-found\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"display-not-found\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 545 |\u001b[39m     \u001b[90m// Should show display not found message\u001b[39m\n \u001b[90m 546 |\u001b[39m     \u001b[36mconst\u001b[39m notFoundMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"display-not-found\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m     \u001b[36mawait\u001b[39m expect(notFoundMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 548 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 549 |\u001b[39m\n \u001b[90m 550 |\u001b[39m   test(\u001b[32m'handles masjid access restrictions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:547:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:47.114Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--e43f3-display-not-found-scenarios-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--e43f3-display-not-found-scenarios-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--e43f3-display-not-found-scenarios-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                        "column": 35,
                        "line": 547
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-1e9f28cd434687675683",
              "file": "integration/multi-display.test.ts",
              "line": 540,
              "column": 7
            },
            {
              "title": "handles masjid access restrictions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 94,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11493,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"access-denied\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"access-denied\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"access-denied\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"access-denied\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:564:32",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                          "column": 32,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m     \u001b[90m// Should show access denied message\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[36mconst\u001b[39m accessDenied \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"access-denied\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     \u001b[36mawait\u001b[39m expect(accessDenied)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   test(\u001b[32m'handles display offline status tracking'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 32,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"access-denied\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"access-denied\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 562 |\u001b[39m     \u001b[90m// Should show access denied message\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[36mconst\u001b[39m accessDenied \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"access-denied\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     \u001b[36mawait\u001b[39m expect(accessDenied)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   test(\u001b[32m'handles display offline status tracking'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:564:32\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:53.734Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--1d8b0--masjid-access-restrictions-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--1d8b0--masjid-access-restrictions-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--1d8b0--masjid-access-restrictions-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                        "column": 32,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-fe4c7ce20933e8e2f137",
              "file": "integration/multi-display.test.ts",
              "line": 550,
              "column": 7
            },
            {
              "title": "handles display offline status tracking",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 95,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 60136,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts",
                            "column": 16,
                            "line": 574
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 572 |\u001b[39m\n \u001b[90m 573 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${MAIN_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 574 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 575 |\u001b[39m\n \u001b[90m 576 |\u001b[39m     \u001b[90m// Display should continue functioning despite heartbeat failure\u001b[39m\n \u001b[90m 577 |\u001b[39m     \u001b[36mconst\u001b[39m carousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/multi-display.test.ts:574:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:58.203Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--9edd9-lay-offline-status-tracking-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--9edd9-lay-offline-status-tracking-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-multi-display--9edd9-lay-offline-status-tracking-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-c982c0673317fd5bd83b",
              "file": "integration/multi-display.test.ts",
              "line": 567,
              "column": 7
            },
            {
              "title": "handles display configuration conflicts gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-2a9d4403447150707b01",
              "file": "integration/multi-display.test.ts",
              "line": 517,
              "column": 7
            },
            {
              "title": "handles display not found scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-e5e6816f4b1fd3efea8b",
              "file": "integration/multi-display.test.ts",
              "line": 540,
              "column": 7
            },
            {
              "title": "handles masjid access restrictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-458463bb4097dce83e4e",
              "file": "integration/multi-display.test.ts",
              "line": 550,
              "column": 7
            },
            {
              "title": "handles display offline status tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-801a0daab65a0c72bd9f",
              "file": "integration/multi-display.test.ts",
              "line": 567,
              "column": 7
            },
            {
              "title": "handles display configuration conflicts gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-e5cf7cc06a8711b21607",
              "file": "integration/multi-display.test.ts",
              "line": 517,
              "column": 7
            },
            {
              "title": "handles display not found scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-cda0408e3b532fb84393",
              "file": "integration/multi-display.test.ts",
              "line": 540,
              "column": 7
            },
            {
              "title": "handles masjid access restrictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-b3421dcb589282ae6827",
              "file": "integration/multi-display.test.ts",
              "line": 550,
              "column": 7
            },
            {
              "title": "handles display offline status tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-6bc0c6465eae31c05d77",
              "file": "integration/multi-display.test.ts",
              "line": 567,
              "column": 7
            },
            {
              "title": "handles display configuration conflicts gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-884f0d9f70a1cb8dcde3",
              "file": "integration/multi-display.test.ts",
              "line": 517,
              "column": 7
            },
            {
              "title": "handles display not found scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-97f0727ca1ed03941244",
              "file": "integration/multi-display.test.ts",
              "line": 540,
              "column": 7
            },
            {
              "title": "handles masjid access restrictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-16f64950b3198983d8d8",
              "file": "integration/multi-display.test.ts",
              "line": 550,
              "column": 7
            },
            {
              "title": "handles display offline status tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-3094b2f33d490020e6f0",
              "file": "integration/multi-display.test.ts",
              "line": 567,
              "column": 7
            },
            {
              "title": "handles display configuration conflicts gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-d55ca233391b5258cbbd",
              "file": "integration/multi-display.test.ts",
              "line": 517,
              "column": 7
            },
            {
              "title": "handles display not found scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-4485391eea201f268a6e",
              "file": "integration/multi-display.test.ts",
              "line": 540,
              "column": 7
            },
            {
              "title": "handles masjid access restrictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-68edb9225c497d8368e2",
              "file": "integration/multi-display.test.ts",
              "line": 550,
              "column": 7
            },
            {
              "title": "handles display offline status tracking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1810c9b854a55d5aa7e0-5cfec6a3d3c1eaaa6ca6",
              "file": "integration/multi-display.test.ts",
              "line": 567,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration/offline-mode.test.ts",
      "file": "integration/offline-mode.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Offline Mode Integration Tests",
          "file": "integration/offline-mode.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "displays cached content when API is unavailable",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 60119,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 54
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 52 |\u001b[39m\n \u001b[90m 53 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m     \u001b[90m// Verify content loads normally\u001b[39m\n \u001b[90m 57 |\u001b[39m     \u001b[36mconst\u001b[39m contentItems \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:54:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:40:58.769Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cab79-ent-when-API-is-unavailable-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cab79-ent-when-API-is-unavailable-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cab79-ent-when-API-is-unavailable-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-08854e77a41df829b360",
              "file": "integration/offline-mode.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "displays fallback prayer times when JAKIM API is unavailable",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 97,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 60118,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 104
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 102 |\u001b[39m\n \u001b[90m 103 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 104 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 105 |\u001b[39m\n \u001b[90m 106 |\u001b[39m     \u001b[90m// Verify prayer times load normally\u001b[39m\n \u001b[90m 107 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:104:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:00.191Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-059e3-en-JAKIM-API-is-unavailable-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-059e3-en-JAKIM-API-is-unavailable-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-059e3-en-JAKIM-API-is-unavailable-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-d185b101fe50b2b96c11",
              "file": "integration/offline-mode.test.ts",
              "line": 81,
              "column": 7
            },
            {
              "title": "continues carousel operation during network interruptions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 60110,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 169
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 167 |\u001b[39m\n \u001b[90m 168 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 169 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 170 |\u001b[39m\n \u001b[90m 171 |\u001b[39m     \u001b[90m// Get initial active content\u001b[39m\n \u001b[90m 172 |\u001b[39m     \u001b[36mconst\u001b[39m initialActive \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-active=\"true\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:169:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:06.324Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-e98a7-uring-network-interruptions-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-e98a7-uring-network-interruptions-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-e98a7-uring-network-interruptions-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-61692d078b37535b86a2",
              "file": "integration/offline-mode.test.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "displays appropriate offline messaging in Bahasa Malaysia",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10901,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-message\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-message\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:200:34",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 34,
                          "line": 200
                        },
                        "snippet": "\u001b[0m \u001b[90m 198 |\u001b[39m     \u001b[90m// Should show offline message\u001b[39m\n \u001b[90m 199 |\u001b[39m     \u001b[36mconst\u001b[39m offlineMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-message\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m     \u001b[36mawait\u001b[39m expect(offlineMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m\n \u001b[90m 202 |\u001b[39m     \u001b[36mconst\u001b[39m messageText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m offlineMessage\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 34,
                            "line": 200
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-message\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-message\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 198 |\u001b[39m     \u001b[90m// Should show offline message\u001b[39m\n \u001b[90m 199 |\u001b[39m     \u001b[36mconst\u001b[39m offlineMessage \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-message\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m     \u001b[36mawait\u001b[39m expect(offlineMessage)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m\n \u001b[90m 202 |\u001b[39m     \u001b[36mconst\u001b[39m messageText \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m offlineMessage\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:200:34\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:38.808Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6b297-essaging-in-Bahasa-Malaysia-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6b297-essaging-in-Bahasa-Malaysia-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6b297-essaging-in-Bahasa-Malaysia-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 34,
                        "line": 200
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-970e5fecaabeba3fa0db",
              "file": "integration/offline-mode.test.ts",
              "line": 190,
              "column": 7
            },
            {
              "title": "automatically reconnects when network is restored",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 10898,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:248:36",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 36,
                          "line": 248
                        },
                        "snippet": "\u001b[0m \u001b[90m 246 |\u001b[39m     \u001b[90m// Should show offline state initially\u001b[39m\n \u001b[90m 247 |\u001b[39m     \u001b[36mconst\u001b[39m offlineIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-indicator\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 248 |\u001b[39m     \u001b[36mawait\u001b[39m expect(offlineIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 249 |\u001b[39m\n \u001b[90m 250 |\u001b[39m     \u001b[90m// Restore network\u001b[39m\n \u001b[90m 251 |\u001b[39m     networkAvailable \u001b[33m=\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 36,
                            "line": 248
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"offline-indicator\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"offline-indicator\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 246 |\u001b[39m     \u001b[90m// Should show offline state initially\u001b[39m\n \u001b[90m 247 |\u001b[39m     \u001b[36mconst\u001b[39m offlineIndicator \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"offline-indicator\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 248 |\u001b[39m     \u001b[36mawait\u001b[39m expect(offlineIndicator)\u001b[33m.\u001b[39mtoBeVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 249 |\u001b[39m\n \u001b[90m 250 |\u001b[39m     \u001b[90m// Restore network\u001b[39m\n \u001b[90m 251 |\u001b[39m     networkAvailable \u001b[33m=\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:248:36\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:38.785Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-ada7f-ts-when-network-is-restored-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-ada7f-ts-when-network-is-restored-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-ada7f-ts-when-network-is-restored-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 36,
                        "line": 248
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-fe8307a35d20ebf01cdd",
              "file": "integration/offline-mode.test.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "gracefully handles partial network failures",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10784,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:301:35",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 35,
                          "line": 301
                        },
                        "snippet": "\u001b[0m \u001b[90m 299 |\u001b[39m     \u001b[90m// Content should load successfully\u001b[39m\n \u001b[90m 300 |\u001b[39m     \u001b[36mconst\u001b[39m contentCarousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m     \u001b[36mawait\u001b[39m expect(contentCarousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m\n \u001b[90m 303 |\u001b[39m     \u001b[90m// Prayer times should show fallback or cached data\u001b[39m\n \u001b[90m 304 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 35,
                            "line": 301
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('[data-testid=\"content-carousel\"]')\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  10000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 299 |\u001b[39m     \u001b[90m// Content should load successfully\u001b[39m\n \u001b[90m 300 |\u001b[39m     \u001b[36mconst\u001b[39m contentCarousel \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m     \u001b[36mawait\u001b[39m expect(contentCarousel)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m\n \u001b[90m 303 |\u001b[39m     \u001b[90m// Prayer times should show fallback or cached data\u001b[39m\n \u001b[90m 304 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:301:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:50.296Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-73d55-es-partial-network-failures-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-73d55-es-partial-network-failures-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-73d55-es-partial-network-failures-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 35,
                        "line": 301
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-1db3c2ab1a22232d2f7d",
              "file": "integration/offline-mode.test.ts",
              "line": 268,
              "column": 7
            },
            {
              "title": "maintains display configuration during offline periods",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 60175,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 336
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 334 |\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 336 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 337 |\u001b[39m\n \u001b[90m 338 |\u001b[39m     \u001b[90m// Verify initial configuration is applied\u001b[39m\n \u001b[90m 339 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:336:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:50.296Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cf151-tion-during-offline-periods-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cf151-tion-during-offline-periods-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-cf151-tion-during-offline-periods-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-bdc98eea90e674a0cf2c",
              "file": "integration/offline-mode.test.ts",
              "line": 316,
              "column": 7
            },
            {
              "title": "handles image loading failures in offline mode",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 103,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 60195,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 395
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 393 |\u001b[39m\n \u001b[90m 394 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 395 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 396 |\u001b[39m\n \u001b[90m 397 |\u001b[39m     \u001b[90m// Should show placeholder or fallback for failed images\u001b[39m\n \u001b[90m 398 |\u001b[39m     \u001b[36mconst\u001b[39m imageContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-type=\"image\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:395:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:59.182Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-92ef3-ng-failures-in-offline-mode-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-92ef3-ng-failures-in-offline-mode-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-92ef3-ng-failures-in-offline-mode-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-b6baa37aec360cd34d62",
              "file": "integration/offline-mode.test.ts",
              "line": 364,
              "column": 7
            },
            {
              "title": "provides offline status indicators for administrators",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 104,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1520,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:436:28",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 28,
                          "line": 436
                        },
                        "snippet": "\u001b[0m \u001b[90m 434 |\u001b[39m     }\n \u001b[90m 435 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m     expect(foundIndicator)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 438 |\u001b[39m\n \u001b[90m 439 |\u001b[39m   test(\u001b[32m'handles YouTube video playback in offline scenarios'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 28,
                            "line": 436
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 434 |\u001b[39m     }\n \u001b[90m 435 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m     expect(foundIndicator)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 438 |\u001b[39m\n \u001b[90m 439 |\u001b[39m   test(\u001b[32m'handles YouTube video playback in offline scenarios'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:436:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:41:59.977Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-89d74-dicators-for-administrators-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-89d74-dicators-for-administrators-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-89d74-dicators-for-administrators-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 28,
                        "line": 436
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-09a75e09653892e81ab5",
              "file": "integration/offline-mode.test.ts",
              "line": 411,
              "column": 7
            },
            {
              "title": "handles YouTube video playback in offline scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 105,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 60088,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 465
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 463 |\u001b[39m\n \u001b[90m 464 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m`${BASE_URL}/display/${SAMPLE_DISPLAY_ID}`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 465 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 466 |\u001b[39m\n \u001b[90m 467 |\u001b[39m     \u001b[36mconst\u001b[39m youtubeContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"content-item\"][data-type=\"youtube_video\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 468 |\u001b[39m     \u001b[36mawait\u001b[39m expect(youtubeContent)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:465:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:01.387Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6bf7e-ayback-in-offline-scenarios-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6bf7e-ayback-in-offline-scenarios-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-6bf7e-ayback-in-offline-scenarios-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-dcdd3b9e2c23def78138",
              "file": "integration/offline-mode.test.ts",
              "line": 439,
              "column": 7
            },
            {
              "title": "displays cached content when API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-3adacccfa366a6d4c30e",
              "file": "integration/offline-mode.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "displays fallback prayer times when JAKIM API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-1b8a907570269af1a8cd",
              "file": "integration/offline-mode.test.ts",
              "line": 81,
              "column": 7
            },
            {
              "title": "continues carousel operation during network interruptions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-26a64d31f3bd6ac4bc13",
              "file": "integration/offline-mode.test.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "displays appropriate offline messaging in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-19cb1ab60e19a3676772",
              "file": "integration/offline-mode.test.ts",
              "line": 190,
              "column": 7
            },
            {
              "title": "automatically reconnects when network is restored",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-05889e85096780803197",
              "file": "integration/offline-mode.test.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "gracefully handles partial network failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-a30a6a193c0f4784f1e9",
              "file": "integration/offline-mode.test.ts",
              "line": 268,
              "column": 7
            },
            {
              "title": "maintains display configuration during offline periods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-f6863510587f6a825c52",
              "file": "integration/offline-mode.test.ts",
              "line": 316,
              "column": 7
            },
            {
              "title": "handles image loading failures in offline mode",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-de98a373a3daa36222fb",
              "file": "integration/offline-mode.test.ts",
              "line": 364,
              "column": 7
            },
            {
              "title": "provides offline status indicators for administrators",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-b61c49235450aa3a5df7",
              "file": "integration/offline-mode.test.ts",
              "line": 411,
              "column": 7
            },
            {
              "title": "handles YouTube video playback in offline scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-06cb11293a1cdb64d55b",
              "file": "integration/offline-mode.test.ts",
              "line": 439,
              "column": 7
            },
            {
              "title": "displays cached content when API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-4350e7e553a0bdaa4b6e",
              "file": "integration/offline-mode.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "displays fallback prayer times when JAKIM API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-012ca8f8b4dd92ca2e22",
              "file": "integration/offline-mode.test.ts",
              "line": 81,
              "column": 7
            },
            {
              "title": "continues carousel operation during network interruptions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-46077d5e911ca1c84a0b",
              "file": "integration/offline-mode.test.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "displays appropriate offline messaging in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-20c2ecb9b53dbbf8737c",
              "file": "integration/offline-mode.test.ts",
              "line": 190,
              "column": 7
            },
            {
              "title": "automatically reconnects when network is restored",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-bed438457c3141e853de",
              "file": "integration/offline-mode.test.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "gracefully handles partial network failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-f2f4fb4b2f6e47090b2f",
              "file": "integration/offline-mode.test.ts",
              "line": 268,
              "column": 7
            },
            {
              "title": "maintains display configuration during offline periods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-94904160197316460e59",
              "file": "integration/offline-mode.test.ts",
              "line": 316,
              "column": 7
            },
            {
              "title": "handles image loading failures in offline mode",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-c084613747df7b8d94f3",
              "file": "integration/offline-mode.test.ts",
              "line": 364,
              "column": 7
            },
            {
              "title": "provides offline status indicators for administrators",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-2f589bf2055c22a4a3d8",
              "file": "integration/offline-mode.test.ts",
              "line": 411,
              "column": 7
            },
            {
              "title": "handles YouTube video playback in offline scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-69f1e947e49a02b4bc58",
              "file": "integration/offline-mode.test.ts",
              "line": 439,
              "column": 7
            },
            {
              "title": "displays cached content when API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-aa7d509946b4edb7cf82",
              "file": "integration/offline-mode.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "displays fallback prayer times when JAKIM API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-99ec76da8e109e3cc122",
              "file": "integration/offline-mode.test.ts",
              "line": 81,
              "column": 7
            },
            {
              "title": "continues carousel operation during network interruptions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-f47604097ca305b22d8f",
              "file": "integration/offline-mode.test.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "displays appropriate offline messaging in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-bfb26bb1849a18a69204",
              "file": "integration/offline-mode.test.ts",
              "line": 190,
              "column": 7
            },
            {
              "title": "automatically reconnects when network is restored",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-eab017ecf8149aaf503b",
              "file": "integration/offline-mode.test.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "gracefully handles partial network failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-2c03bff3acc20358b107",
              "file": "integration/offline-mode.test.ts",
              "line": 268,
              "column": 7
            },
            {
              "title": "maintains display configuration during offline periods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-df23a6c1eacba837713b",
              "file": "integration/offline-mode.test.ts",
              "line": 316,
              "column": 7
            },
            {
              "title": "handles image loading failures in offline mode",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-07a5907cabecb958f672",
              "file": "integration/offline-mode.test.ts",
              "line": 364,
              "column": 7
            },
            {
              "title": "provides offline status indicators for administrators",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-2132bf8a8986d6fa46f9",
              "file": "integration/offline-mode.test.ts",
              "line": 411,
              "column": 7
            },
            {
              "title": "handles YouTube video playback in offline scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-cdc36a9deb4fe730d387",
              "file": "integration/offline-mode.test.ts",
              "line": 439,
              "column": 7
            },
            {
              "title": "displays cached content when API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-9fc2e447137c859394f9",
              "file": "integration/offline-mode.test.ts",
              "line": 17,
              "column": 7
            },
            {
              "title": "displays fallback prayer times when JAKIM API is unavailable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-31d6228e868263e957be",
              "file": "integration/offline-mode.test.ts",
              "line": 81,
              "column": 7
            },
            {
              "title": "continues carousel operation during network interruptions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-d7988fe9f631337e7726",
              "file": "integration/offline-mode.test.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "displays appropriate offline messaging in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-f6a13339d94397a1be33",
              "file": "integration/offline-mode.test.ts",
              "line": 190,
              "column": 7
            },
            {
              "title": "automatically reconnects when network is restored",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-6ec0deacef20be441363",
              "file": "integration/offline-mode.test.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "gracefully handles partial network failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-6e940e2398f6abf1086e",
              "file": "integration/offline-mode.test.ts",
              "line": 268,
              "column": 7
            },
            {
              "title": "maintains display configuration during offline periods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-7cd4b682c61a7a29aa3d",
              "file": "integration/offline-mode.test.ts",
              "line": 316,
              "column": 7
            },
            {
              "title": "handles image loading failures in offline mode",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-407b002ae067d6180819",
              "file": "integration/offline-mode.test.ts",
              "line": 364,
              "column": 7
            },
            {
              "title": "provides offline status indicators for administrators",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-79f5570bbb6cc2549c74",
              "file": "integration/offline-mode.test.ts",
              "line": 411,
              "column": 7
            },
            {
              "title": "handles YouTube video playback in offline scenarios",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-32f5b0c101d9379a5e53",
              "file": "integration/offline-mode.test.ts",
              "line": 439,
              "column": 7
            }
          ]
        },
        {
          "title": "Offline Mode Error Recovery",
          "file": "integration/offline-mode.test.ts",
          "line": 487,
          "column": 6,
          "specs": [
            {
              "title": "implements exponential backoff for reconnection attempts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 106,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 31266,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:524:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 16,
                          "line": 524
                        },
                        "snippet": "\u001b[0m \u001b[90m 522 |\u001b[39m\n \u001b[90m 523 |\u001b[39m     \u001b[90m// Wait for recovery\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 524 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m     \u001b[90m// Verify exponential backoff was used\u001b[39m\n \u001b[90m 527 |\u001b[39m     expect(attemptCount)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 16,
                            "line": 524
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 522 |\u001b[39m\n \u001b[90m 523 |\u001b[39m     \u001b[90m// Wait for recovery\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 524 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m     \u001b[90m// Verify exponential backoff was used\u001b[39m\n \u001b[90m 527 |\u001b[39m     expect(attemptCount)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:524:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:01.996Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-eda72-f-for-reconnection-attempts-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-eda72-f-for-reconnection-attempts-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-eda72-f-for-reconnection-attempts-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 16,
                        "line": 524
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-1abc96071cd51d83c988",
              "file": "integration/offline-mode.test.ts",
              "line": 488,
              "column": 7
            },
            {
              "title": "logs offline events for troubleshooting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 107,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6184,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:562:27",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                          "column": 27,
                          "line": 562
                        },
                        "snippet": "\u001b[0m \u001b[90m 560 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 561 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 562 |\u001b[39m     expect(hasOfflineLog)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 563 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 564 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                            "column": 27,
                            "line": 562
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 560 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 561 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 562 |\u001b[39m     expect(hasOfflineLog)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 563 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 564 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts:562:27\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:02.457Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-15fc3--events-for-troubleshooting-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-15fc3--events-for-troubleshooting-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-offline-mode-O-15fc3--events-for-troubleshooting-Chrome-TV-Display/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/offline-mode.test.ts",
                        "column": 27,
                        "line": 562
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "8ba51043f9329ab80733-d68ab756d13d25fb9be4",
              "file": "integration/offline-mode.test.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "implements exponential backoff for reconnection attempts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-cb3a947bfa30323d994c",
              "file": "integration/offline-mode.test.ts",
              "line": 488,
              "column": 7
            },
            {
              "title": "logs offline events for troubleshooting",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-1e86cb6a4b699c840e4f",
              "file": "integration/offline-mode.test.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "implements exponential backoff for reconnection attempts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-c36f75dc68ada17e4d65",
              "file": "integration/offline-mode.test.ts",
              "line": 488,
              "column": 7
            },
            {
              "title": "logs offline events for troubleshooting",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-840ba6d31bcc4bc8bc3b",
              "file": "integration/offline-mode.test.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "implements exponential backoff for reconnection attempts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-0ba473a608da16aa5ad4",
              "file": "integration/offline-mode.test.ts",
              "line": 488,
              "column": 7
            },
            {
              "title": "logs offline events for troubleshooting",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-5dfffb39dff3d0adbfd4",
              "file": "integration/offline-mode.test.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "implements exponential backoff for reconnection attempts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-6178df0531dd088aa18b",
              "file": "integration/offline-mode.test.ts",
              "line": 488,
              "column": 7
            },
            {
              "title": "logs offline events for troubleshooting",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "8ba51043f9329ab80733-967ea436c1fdb4e33bf3",
              "file": "integration/offline-mode.test.ts",
              "line": 538,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration/prayer-overlay.test.ts",
      "file": "integration/prayer-overlay.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Prayer Times Overlay Integration Tests",
          "file": "integration/prayer-overlay.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "displays prayer times overlay on top of content carousel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 108,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 60111,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 23
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"content-carousel\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 21 |\u001b[39m\n \u001b[90m 22 |\u001b[39m   test(\u001b[32m'displays prayer times overlay on top of content carousel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 24 |\u001b[39m     \n \u001b[90m 25 |\u001b[39m     \u001b[90m// Verify prayer times overlay is visible\u001b[39m\n \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:23:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:07.106Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-e5439--on-top-of-content-carousel-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-e5439--on-top-of-content-carousel-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-e5439--on-top-of-content-carousel-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e2d73ef0d9e21d3ce927",
              "file": "integration/prayer-overlay.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "displays current day prayer times with correct format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 109,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 60114,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 41
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 39 |\u001b[39m\n \u001b[90m 40 |\u001b[39m   test(\u001b[32m'displays current day prayer times with correct format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 41 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 42 |\u001b[39m\n \u001b[90m 43 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 44 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:41:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:09.728Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-748c8-r-times-with-correct-format-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-748c8-r-times-with-correct-format-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-748c8-r-times-with-correct-format-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e964c8a794c0ad7249b6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "displays prayer names in Bahasa Malaysia",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 110,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60102,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 66
                          },
                          "message": "Error: page.waitForSelector: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 64 |\u001b[39m\n \u001b[90m 65 |\u001b[39m   test(\u001b[32m'displays prayer names in Bahasa Malaysia'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m\n \u001b[90m 68 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 69 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:66:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:34.196Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-1b56b-er-names-in-Bahasa-Malaysia-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-1b56b-er-names-in-Bahasa-Malaysia-Chrome-TV-Display/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-1b56b-er-names-in-Bahasa-Malaysia-Chrome-TV-Display/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1cdacbb21954d86f56ee-d2a058840230561d3eb3",
              "file": "integration/prayer-overlay.test.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "respects prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 111,
                      "parallelIndex": 5,
                      "status": "interrupted",
                      "duration": 56949,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:116:18",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 18,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m\n \u001b[90m 115 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m\n \u001b[90m 118 |\u001b[39m       \u001b[36mconst\u001b[39m overlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m       \u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 18,
                            "line": 116
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 114 |\u001b[39m\n \u001b[90m 115 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mreload()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m\n \u001b[90m 118 |\u001b[39m       \u001b[36mconst\u001b[39m overlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m       \u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:116:18\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:42:51.332Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-bbbb7-time-position-configuration-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-bbbb7-time-position-configuration-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 18,
                        "line": 116
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-6de90b4a3480f1dfe23d",
              "file": "integration/prayer-overlay.test.ts",
              "line": 89,
              "column": 7
            },
            {
              "title": "updates prayer times automatically at midnight",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 112,
                      "parallelIndex": 1,
                      "status": "interrupted",
                      "duration": 48272,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:127:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 16,
                          "line": 127
                        },
                        "snippet": "\u001b[0m \u001b[90m 125 |\u001b[39m\n \u001b[90m 126 |\u001b[39m   test(\u001b[32m'updates prayer times automatically at midnight'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 127 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 128 |\u001b[39m\n \u001b[90m 129 |\u001b[39m     \u001b[90m// Get initial prayer date\u001b[39m\n \u001b[90m 130 |\u001b[39m     \u001b[36mconst\u001b[39m dateDisplay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-date\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 127
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 125 |\u001b[39m\n \u001b[90m 126 |\u001b[39m   test(\u001b[32m'updates prayer times automatically at midnight'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 127 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 128 |\u001b[39m\n \u001b[90m 129 |\u001b[39m     \u001b[90m// Get initial prayer date\u001b[39m\n \u001b[90m 130 |\u001b[39m     \u001b[36mconst\u001b[39m dateDisplay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-date\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:127:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:43:00.069Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-d397b-s-automatically-at-midnight-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-d397b-s-automatically-at-midnight-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 16,
                        "line": 127
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-6c54dfb117f483d1b3ea",
              "file": "integration/prayer-overlay.test.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "highlights current or next prayer time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 4,
                      "status": "interrupted",
                      "duration": 46366,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:180:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 16,
                          "line": 180
                        },
                        "snippet": "\u001b[0m \u001b[90m 178 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 179 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 180 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 181 |\u001b[39m\n \u001b[90m 182 |\u001b[39m     \u001b[90m// Next prayer (Asr) should be highlighted\u001b[39m\n \u001b[90m 183 |\u001b[39m     \u001b[36mconst\u001b[39m asrTime \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"asr-time\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 180
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 178 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 179 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 180 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 181 |\u001b[39m\n \u001b[90m 182 |\u001b[39m     \u001b[90m// Next prayer (Asr) should be highlighted\u001b[39m\n \u001b[90m 183 |\u001b[39m     \u001b[36mconst\u001b[39m asrTime \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"asr-time\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:180:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:43:02.001Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-01ce7-current-or-next-prayer-time-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-01ce7-current-or-next-prayer-time-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 16,
                        "line": 180
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e8bd986728b440c37ef1",
              "file": "integration/prayer-overlay.test.ts",
              "line": 171,
              "column": 7
            },
            {
              "title": "displays prayer times in TV-optimized font size and contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 114,
                      "parallelIndex": 0,
                      "status": "interrupted",
                      "duration": 40518,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:198:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 16,
                          "line": 198
                        },
                        "snippet": "\u001b[0m \u001b[90m 196 |\u001b[39m\n \u001b[90m 197 |\u001b[39m   test(\u001b[32m'displays prayer times in TV-optimized font size and contrast'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 198 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 201 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 198
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 196 |\u001b[39m\n \u001b[90m 197 |\u001b[39m   test(\u001b[32m'displays prayer times in TV-optimized font size and contrast'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 198 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 201 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:198:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:43:07.819Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-d8ded-ized-font-size-and-contrast-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-d8ded-ized-font-size-and-contrast-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 16,
                        "line": 198
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-09db65bee00304abbb35",
              "file": "integration/prayer-overlay.test.ts",
              "line": 197,
              "column": 7
            },
            {
              "title": "maintains overlay visibility during content transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 115,
                      "parallelIndex": 3,
                      "status": "interrupted",
                      "duration": 37996,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:222:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 16,
                          "line": 222
                        },
                        "snippet": "\u001b[0m \u001b[90m 220 |\u001b[39m\n \u001b[90m 221 |\u001b[39m   test(\u001b[32m'maintains overlay visibility during content transitions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 222 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n \u001b[90m 225 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 222
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 220 |\u001b[39m\n \u001b[90m 221 |\u001b[39m   test(\u001b[32m'maintains overlay visibility during content transitions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 222 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"content-carousel\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n \u001b[90m 225 |\u001b[39m     \u001b[36mconst\u001b[39m prayerOverlay \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:222:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:43:10.370Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-8ef91--during-content-transitions-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-8ef91--during-content-transitions-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 16,
                        "line": 222
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-4da404f71fa2099dca30",
              "file": "integration/prayer-overlay.test.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "handles JAKIM API data source correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [
                    {
                      "workerIndex": 116,
                      "parallelIndex": 2,
                      "status": "interrupted",
                      "duration": 13459,
                      "error": {
                        "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n",
                        "stack": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:242:16",
                        "location": {
                          "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                          "column": 16,
                          "line": 242
                        },
                        "snippet": "\u001b[0m \u001b[90m 240 |\u001b[39m\n \u001b[90m 241 |\u001b[39m   test(\u001b[32m'handles JAKIM API data source correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 242 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m     \u001b[90m// Verify data source is displayed or logged\u001b[39m\n \u001b[90m 245 |\u001b[39m     \u001b[36mconst\u001b[39m dataSource \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"data-source\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                            "column": 16,
                            "line": 242
                          },
                          "message": "Error: page.waitForSelector: Test ended.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"prayer-times-overlay\"]') to be visible\u001b[22m\n\n\n\u001b[0m \u001b[90m 240 |\u001b[39m\n \u001b[90m 241 |\u001b[39m   test(\u001b[32m'handles JAKIM API data source correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 242 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'[data-testid=\"prayer-times-overlay\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m     \u001b[90m// Verify data source is displayed or logged\u001b[39m\n \u001b[90m 245 |\u001b[39m     \u001b[36mconst\u001b[39m dataSource \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"data-source\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts:242:16\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-21T09:43:34.881Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-bdff7-M-API-data-source-correctly-Chrome-TV-Display/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/test-results/integration-prayer-overlay-bdff7-M-API-data-source-correctly-Chrome-TV-Display/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/rohaizan/Codes/ai-gen/agent-1-emasjid-my/apps/tv-display/tests/integration/prayer-overlay.test.ts",
                        "column": 16,
                        "line": 242
                      }
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-1f595d12a293f9725a29",
              "file": "integration/prayer-overlay.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "adapts to different TV viewport sizes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-c0726060d654763da803",
              "file": "integration/prayer-overlay.test.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "shows current Islamic date alongside prayer times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-1e1994da7f7d1705f31c",
              "file": "integration/prayer-overlay.test.ts",
              "line": 287,
              "column": 7
            },
            {
              "title": "displays prayer times overlay on top of content carousel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-bcfcdec952255697d13e",
              "file": "integration/prayer-overlay.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "displays current day prayer times with correct format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-08e80beca3dd90fba5f4",
              "file": "integration/prayer-overlay.test.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "displays prayer names in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-ac892df79d8e23157e91",
              "file": "integration/prayer-overlay.test.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "respects prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-16eb39f294b0724ce4e0",
              "file": "integration/prayer-overlay.test.ts",
              "line": 89,
              "column": 7
            },
            {
              "title": "updates prayer times automatically at midnight",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-8e4e61767e1a6f16831c",
              "file": "integration/prayer-overlay.test.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "highlights current or next prayer time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-de0e2d1d5d6acb8019f3",
              "file": "integration/prayer-overlay.test.ts",
              "line": 171,
              "column": 7
            },
            {
              "title": "displays prayer times in TV-optimized font size and contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-671d05ef7fa8e0857437",
              "file": "integration/prayer-overlay.test.ts",
              "line": 197,
              "column": 7
            },
            {
              "title": "maintains overlay visibility during content transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-02eec3f7bf6210ff26d0",
              "file": "integration/prayer-overlay.test.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "handles JAKIM API data source correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-d017697283a61de45485",
              "file": "integration/prayer-overlay.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "adapts to different TV viewport sizes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-8a4a138ed3dd3b94aca6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "shows current Islamic date alongside prayer times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-4e261c119dcfd2d2cfd2",
              "file": "integration/prayer-overlay.test.ts",
              "line": 287,
              "column": 7
            },
            {
              "title": "displays prayer times overlay on top of content carousel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-dfab85d37fc952cea6b7",
              "file": "integration/prayer-overlay.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "displays current day prayer times with correct format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-c46067264ef680ce7b69",
              "file": "integration/prayer-overlay.test.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "displays prayer names in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e523c9743da948c6fb71",
              "file": "integration/prayer-overlay.test.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "respects prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-1001b6ddace60fe03157",
              "file": "integration/prayer-overlay.test.ts",
              "line": 89,
              "column": 7
            },
            {
              "title": "updates prayer times automatically at midnight",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-9892aeab8f2afef5023f",
              "file": "integration/prayer-overlay.test.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "highlights current or next prayer time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-12c0d7163266e9a57cd6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 171,
              "column": 7
            },
            {
              "title": "displays prayer times in TV-optimized font size and contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-64b6fa4ae70a2099613d",
              "file": "integration/prayer-overlay.test.ts",
              "line": 197,
              "column": 7
            },
            {
              "title": "maintains overlay visibility during content transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e110bf7edaffa1966aad",
              "file": "integration/prayer-overlay.test.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "handles JAKIM API data source correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-21038e014b5fae55ee6d",
              "file": "integration/prayer-overlay.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "adapts to different TV viewport sizes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-4a1fda5b1bdbfeaa3541",
              "file": "integration/prayer-overlay.test.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "shows current Islamic date alongside prayer times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-fca19ed2359207a85168",
              "file": "integration/prayer-overlay.test.ts",
              "line": 287,
              "column": 7
            },
            {
              "title": "displays prayer times overlay on top of content carousel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-28781fcc51ed6448cad4",
              "file": "integration/prayer-overlay.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "displays current day prayer times with correct format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-76b9dccca04260e24175",
              "file": "integration/prayer-overlay.test.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "displays prayer names in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-77ad70618cf44af29ffe",
              "file": "integration/prayer-overlay.test.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "respects prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-dac22764e19654d18951",
              "file": "integration/prayer-overlay.test.ts",
              "line": 89,
              "column": 7
            },
            {
              "title": "updates prayer times automatically at midnight",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-9edfedb007eb01be1f73",
              "file": "integration/prayer-overlay.test.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "highlights current or next prayer time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-6e784d6ae893de286466",
              "file": "integration/prayer-overlay.test.ts",
              "line": 171,
              "column": 7
            },
            {
              "title": "displays prayer times in TV-optimized font size and contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-0909111579f658733325",
              "file": "integration/prayer-overlay.test.ts",
              "line": 197,
              "column": 7
            },
            {
              "title": "maintains overlay visibility during content transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-a5beec5af93eb076f030",
              "file": "integration/prayer-overlay.test.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "handles JAKIM API data source correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-9aef34614d10e7278bda",
              "file": "integration/prayer-overlay.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "adapts to different TV viewport sizes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-b8be7c2bb265b46d1cf2",
              "file": "integration/prayer-overlay.test.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "shows current Islamic date alongside prayer times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e180930ad953595cb467",
              "file": "integration/prayer-overlay.test.ts",
              "line": 287,
              "column": 7
            },
            {
              "title": "displays prayer times overlay on top of content carousel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-e8c84fb0896f9f1224f6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "displays current day prayer times with correct format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-4dc49fcf4a3bfcc3def2",
              "file": "integration/prayer-overlay.test.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "displays prayer names in Bahasa Malaysia",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-3e7b3b8bf02b63ec0a1c",
              "file": "integration/prayer-overlay.test.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "respects prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-6a6bbe78853dec5b9807",
              "file": "integration/prayer-overlay.test.ts",
              "line": 89,
              "column": 7
            },
            {
              "title": "updates prayer times automatically at midnight",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-b19e40afe6fe5539ce9d",
              "file": "integration/prayer-overlay.test.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "highlights current or next prayer time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-849f7636aeba274c538d",
              "file": "integration/prayer-overlay.test.ts",
              "line": 171,
              "column": 7
            },
            {
              "title": "displays prayer times in TV-optimized font size and contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-6eeeb28835e9383dd542",
              "file": "integration/prayer-overlay.test.ts",
              "line": 197,
              "column": 7
            },
            {
              "title": "maintains overlay visibility during content transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-37ecb5813f1ef3f47d77",
              "file": "integration/prayer-overlay.test.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "handles JAKIM API data source correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-a0d04dfd83874267a66c",
              "file": "integration/prayer-overlay.test.ts",
              "line": 241,
              "column": 7
            },
            {
              "title": "adapts to different TV viewport sizes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-3baaf8d88be6439b4e51",
              "file": "integration/prayer-overlay.test.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "shows current Islamic date alongside prayer times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-dfe32324c37304b6b8b6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 287,
              "column": 7
            }
          ]
        },
        {
          "title": "Prayer Times Overlay Error Handling",
          "file": "integration/prayer-overlay.test.ts",
          "line": 309,
          "column": 6,
          "specs": [
            {
              "title": "handles prayer times API failure gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-1279232bb0cf52a03821",
              "file": "integration/prayer-overlay.test.ts",
              "line": 310,
              "column": 7
            },
            {
              "title": "handles invalid prayer times data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-9e30a739fff99428f9d2",
              "file": "integration/prayer-overlay.test.ts",
              "line": 329,
              "column": 7
            },
            {
              "title": "handles missing prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-269cd7d5026eb2b93498",
              "file": "integration/prayer-overlay.test.ts",
              "line": 356,
              "column": 7
            },
            {
              "title": "handles timezone and location changes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-c140e0cd1f99099b5e58",
              "file": "integration/prayer-overlay.test.ts",
              "line": 385,
              "column": 7
            },
            {
              "title": "handles prayer times API failure gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-5f98e8512a6760d1ff9f",
              "file": "integration/prayer-overlay.test.ts",
              "line": 310,
              "column": 7
            },
            {
              "title": "handles invalid prayer times data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-77c8ffbbf9fb9b126a65",
              "file": "integration/prayer-overlay.test.ts",
              "line": 329,
              "column": 7
            },
            {
              "title": "handles missing prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-69cacbd44ff3bd9ab851",
              "file": "integration/prayer-overlay.test.ts",
              "line": 356,
              "column": 7
            },
            {
              "title": "handles timezone and location changes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-29babdb9ff91189b4bbb",
              "file": "integration/prayer-overlay.test.ts",
              "line": 385,
              "column": 7
            },
            {
              "title": "handles prayer times API failure gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-1bdc8c6628160a59adab",
              "file": "integration/prayer-overlay.test.ts",
              "line": 310,
              "column": 7
            },
            {
              "title": "handles invalid prayer times data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-caec2f1448ac0f5c8805",
              "file": "integration/prayer-overlay.test.ts",
              "line": 329,
              "column": 7
            },
            {
              "title": "handles missing prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-127b04f25190b9c9f315",
              "file": "integration/prayer-overlay.test.ts",
              "line": 356,
              "column": 7
            },
            {
              "title": "handles timezone and location changes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-edb51f3d2e3c37d563c2",
              "file": "integration/prayer-overlay.test.ts",
              "line": 385,
              "column": 7
            },
            {
              "title": "handles prayer times API failure gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-921c0f7e0b12ea9d0cdc",
              "file": "integration/prayer-overlay.test.ts",
              "line": 310,
              "column": 7
            },
            {
              "title": "handles invalid prayer times data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-dfb193807fcfb4073db6",
              "file": "integration/prayer-overlay.test.ts",
              "line": 329,
              "column": 7
            },
            {
              "title": "handles missing prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-598396e0efb50941afdb",
              "file": "integration/prayer-overlay.test.ts",
              "line": 356,
              "column": 7
            },
            {
              "title": "handles timezone and location changes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-a4556d5072059f8a2831",
              "file": "integration/prayer-overlay.test.ts",
              "line": 385,
              "column": 7
            },
            {
              "title": "handles prayer times API failure gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-fa8d04a0a6887edf48be",
              "file": "integration/prayer-overlay.test.ts",
              "line": 310,
              "column": 7
            },
            {
              "title": "handles invalid prayer times data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-14d07878d946034317b5",
              "file": "integration/prayer-overlay.test.ts",
              "line": 329,
              "column": 7
            },
            {
              "title": "handles missing prayer time position configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-396984e62193d6ad10ae",
              "file": "integration/prayer-overlay.test.ts",
              "line": 356,
              "column": 7
            },
            {
              "title": "handles timezone and location changes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1cdacbb21954d86f56ee-4322cad15702a641a67e",
              "file": "integration/prayer-overlay.test.ts",
              "line": 385,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration/sponsorship-ranking.test.ts",
      "file": "integration/sponsorship-ranking.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Sponsorship Ranking Integration Tests",
          "file": "integration/sponsorship-ranking.test.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "displays content in descending order of sponsorship amount",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-573ed9f95ec652240942",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 90,
              "column": 7
            },
            {
              "title": "higher sponsors get more display time in carousel rotation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-57feebc7288d82df8e00",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 118,
              "column": 7
            },
            {
              "title": "displays sponsorship amount prominently for high-value sponsors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-85bb43ec0d73ad41c367",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "applies sponsor tier visual differentiation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e3b1e2bbbc2d63e5b9c4",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "handles equal sponsorship amounts with secondary sorting criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-06b1ba77a685d3e71fdf",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "respects max content items limit while maintaining sponsorship ranking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-8d24c9bc555f874c7671",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 233,
              "column": 7
            },
            {
              "title": "updates sponsorship ranking when content is refreshed",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-4c50abf32ba3b8b475c9",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 318,
              "column": 7
            },
            {
              "title": "displays sponsorship information in multiple languages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e0c277fde9d9ad02df01",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 375,
              "column": 7
            },
            {
              "title": "handles sponsorship amount formatting and currency display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-b0ae2f0b28409c591225",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "maintains sponsorship ranking consistency across page reloads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-72900841db88386d8fb0",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 410,
              "column": 7
            },
            {
              "title": "displays content in descending order of sponsorship amount",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-24e236a8af41e77d2b95",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 90,
              "column": 7
            },
            {
              "title": "higher sponsors get more display time in carousel rotation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-346a428083e01f4dd3c7",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 118,
              "column": 7
            },
            {
              "title": "displays sponsorship amount prominently for high-value sponsors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-c2c03a82b1987378e57c",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "applies sponsor tier visual differentiation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-d44a3ee29e7bcf7870f5",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "handles equal sponsorship amounts with secondary sorting criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-1ea7e971fa5e38130aa9",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "respects max content items limit while maintaining sponsorship ranking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-c764f705ab18040681fe",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 233,
              "column": 7
            },
            {
              "title": "updates sponsorship ranking when content is refreshed",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-38ff24d0f4801f7133f8",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 318,
              "column": 7
            },
            {
              "title": "displays sponsorship information in multiple languages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-d851e321683aabdd8e95",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 375,
              "column": 7
            },
            {
              "title": "handles sponsorship amount formatting and currency display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e64638a629cade27d1a9",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "maintains sponsorship ranking consistency across page reloads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5e97c78a2d3bd71e6928",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 410,
              "column": 7
            },
            {
              "title": "displays content in descending order of sponsorship amount",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e6b810834cf89f2a5f7d",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 90,
              "column": 7
            },
            {
              "title": "higher sponsors get more display time in carousel rotation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-3085efe410ff2c20c076",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 118,
              "column": 7
            },
            {
              "title": "displays sponsorship amount prominently for high-value sponsors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e768cfe4b7efa1777d7c",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "applies sponsor tier visual differentiation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5ef8f5e740aaaa57830d",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "handles equal sponsorship amounts with secondary sorting criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5f384f12b9396c5bbd97",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "respects max content items limit while maintaining sponsorship ranking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5c6d659b29a78cfe177c",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 233,
              "column": 7
            },
            {
              "title": "updates sponsorship ranking when content is refreshed",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-a74d24d84df504938139",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 318,
              "column": 7
            },
            {
              "title": "displays sponsorship information in multiple languages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-fda9b6b6de4b4406fd6b",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 375,
              "column": 7
            },
            {
              "title": "handles sponsorship amount formatting and currency display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-b56d5e520c2d2b99051f",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "maintains sponsorship ranking consistency across page reloads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-b29d73de92983d14e9a1",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 410,
              "column": 7
            },
            {
              "title": "displays content in descending order of sponsorship amount",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-060ae103156f03d6b413",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 90,
              "column": 7
            },
            {
              "title": "higher sponsors get more display time in carousel rotation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-4c73812cb2dbde0082e4",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 118,
              "column": 7
            },
            {
              "title": "displays sponsorship amount prominently for high-value sponsors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-bb26b59770e2ea818d57",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "applies sponsor tier visual differentiation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-fead4543790b8e47fb89",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "handles equal sponsorship amounts with secondary sorting criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5b42520d888f1dd7732b",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "respects max content items limit while maintaining sponsorship ranking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-ddb83ef203c50ba92a97",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 233,
              "column": 7
            },
            {
              "title": "updates sponsorship ranking when content is refreshed",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-7af9185ae044c7ec8e2b",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 318,
              "column": 7
            },
            {
              "title": "displays sponsorship information in multiple languages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-205756ae2c4ab405a1b7",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 375,
              "column": 7
            },
            {
              "title": "handles sponsorship amount formatting and currency display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-cf19ee7619f77c1a7bc0",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "maintains sponsorship ranking consistency across page reloads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-72b47885e264e55d4ed3",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 410,
              "column": 7
            },
            {
              "title": "displays content in descending order of sponsorship amount",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-d6662990b805d55fd528",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 90,
              "column": 7
            },
            {
              "title": "higher sponsors get more display time in carousel rotation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-ce296e9019a2dc22e43b",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 118,
              "column": 7
            },
            {
              "title": "displays sponsorship amount prominently for high-value sponsors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-ee9d991ca03d9854e126",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "applies sponsor tier visual differentiation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-715b1b61532531bd68e0",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 168,
              "column": 7
            },
            {
              "title": "handles equal sponsorship amounts with secondary sorting criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-b0b976534a81ecd05de2",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "respects max content items limit while maintaining sponsorship ranking",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-0be3ecfb165684eb95b3",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 233,
              "column": 7
            },
            {
              "title": "updates sponsorship ranking when content is refreshed",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e293fc8c6816e37f7c42",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 318,
              "column": 7
            },
            {
              "title": "displays sponsorship information in multiple languages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e3f097e334a7bd7e7a6e",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 375,
              "column": 7
            },
            {
              "title": "handles sponsorship amount formatting and currency display",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-8933b261589c8e1be1ee",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "maintains sponsorship ranking consistency across page reloads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-d0bcd009571b80b08445",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 410,
              "column": 7
            }
          ]
        },
        {
          "title": "Sponsorship Ranking Error Handling",
          "file": "integration/sponsorship-ranking.test.ts",
          "line": 442,
          "column": 6,
          "specs": [
            {
              "title": "handles missing sponsorship amount data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-df87f2a393f612166021",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 443,
              "column": 7
            },
            {
              "title": "handles invalid sponsorship amount values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-5a759ef0f14b2b908c8c",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 492,
              "column": 7
            },
            {
              "title": "handles extremely large sponsorship amounts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-2bb48ab7e2d91af43caf",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 541,
              "column": 7
            },
            {
              "title": "handles missing sponsorship amount data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e5c9e2f335c9cd8d847b",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 443,
              "column": 7
            },
            {
              "title": "handles invalid sponsorship amount values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-0cd9afc22a9c2c884670",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 492,
              "column": 7
            },
            {
              "title": "handles extremely large sponsorship amounts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-38a8eb5d834898350ec8",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 541,
              "column": 7
            },
            {
              "title": "handles missing sponsorship amount data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-e44cd9c7d8d0aea502ca",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 443,
              "column": 7
            },
            {
              "title": "handles invalid sponsorship amount values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-68038c14dfb2ddd15db5",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 492,
              "column": 7
            },
            {
              "title": "handles extremely large sponsorship amounts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-bc8e5cc49e92aac47273",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 541,
              "column": 7
            },
            {
              "title": "handles missing sponsorship amount data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-fa5ff05905e5c739f492",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 443,
              "column": 7
            },
            {
              "title": "handles invalid sponsorship amount values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-08f743d27d28fdc75f70",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 492,
              "column": 7
            },
            {
              "title": "handles extremely large sponsorship amounts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-f924ee82afe17095935e",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 541,
              "column": 7
            },
            {
              "title": "handles missing sponsorship amount data gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-b652c90009908e1c9cd1",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 443,
              "column": 7
            },
            {
              "title": "handles invalid sponsorship amount values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-f6d21854b176bcd0a6b0",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 492,
              "column": 7
            },
            {
              "title": "handles extremely large sponsorship amounts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "86baf1ce4538972a78b4-8a6b02299e54495ab6ed",
              "file": "integration/sponsorship-ranking.test.ts",
              "line": 541,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "smoke.spec.ts",
      "file": "smoke.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "TV Display App - Smoke Tests",
          "file": "smoke.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should load the TV display page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-007fc9c2e437ad9ee4fc",
              "file": "smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should render in TV viewport correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-4bfa5dad5d482197e84d",
              "file": "smoke.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should support keyboard navigation for TV remotes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Chrome TV Display",
                  "projectName": "Chrome TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-8b34d2ffa53f9e569443",
              "file": "smoke.spec.ts",
              "line": 28,
              "column": 7
            },
            {
              "title": "should load the TV display page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-81c978e70d0111287fc1",
              "file": "smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should render in TV viewport correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-a3db6f8edb2c02b28f7e",
              "file": "smoke.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should support keyboard navigation for TV remotes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "4K TV Display",
                  "projectName": "4K TV Display",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-ac0e23c6ca1204bc8c62",
              "file": "smoke.spec.ts",
              "line": 28,
              "column": 7
            },
            {
              "title": "should load the TV display page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-177a0c57e347c48439c0",
              "file": "smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should render in TV viewport correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-19dd20930a812e8a69c8",
              "file": "smoke.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should support keyboard navigation for TV remotes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "TV Kiosk Mode",
                  "projectName": "TV Kiosk Mode",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-3ce581edba2f0dc60a09",
              "file": "smoke.spec.ts",
              "line": 28,
              "column": 7
            },
            {
              "title": "should load the TV display page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-edecfdbe736ce2f3977f",
              "file": "smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should render in TV viewport correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-cc5c59f21246c4561f92",
              "file": "smoke.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should support keyboard navigation for TV remotes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Firefox TV",
                  "projectName": "Firefox TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-478101340e5e8bb7c5bc",
              "file": "smoke.spec.ts",
              "line": 28,
              "column": 7
            },
            {
              "title": "should load the TV display page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-f108bb27d73f59c03a9b",
              "file": "smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should render in TV viewport correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-3cdc7eca8c40fdedc364",
              "file": "smoke.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should support keyboard navigation for TV remotes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Safari TV",
                  "projectName": "Safari TV",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "4219922fea2e2bd3c691-9a67a5b310019ae3dacb",
              "file": "smoke.spec.ts",
              "line": 28,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-21T09:36:54.183Z",
    "duration": 414378.69,
    "expected": 21,
    "skipped": 668,
    "unexpected": 111,
    "flaky": 0
  }
}